asm(
";@ Reesy's Z80 Emulator Version 0.001\n"
"\n"
";@ (c) Copyright 2004 Reesy, All rights reserved\n"
";@ DrZ80 is free for non-commercial use.\n"
"\n"
";@ For commercial use, separate licencing terms must be obtained.\n"
"\n"
"      .data\n"
"      .align 4\n"
"\n"
"      .global DrZ80Run\n"
"      .global DrZ80Ver\n"
"\n"
"	  .equiv INTERRUPT_MODE,		0		;@0 = Use internal int handler, 1 = Use Mames int handler\n"
"	  .equiv FAST_Z80SP,			1		;@0 = Use mem functions for stack pointer, 1 = Use direct mem pointer\n"
"	  .equiv UPDATE_CONTEXT,	    0\n"
"	  .equiv DRZ80_FOR_PICODRIVE,   1\n"
"\n"
".if INTERRUPT_MODE\n"
"	  .extern Interrupt\n"
".endif\n"
"\n"
".if DRZ80_FOR_PICODRIVE\n"
"	  .extern YM2612Read_\n"
"	  .extern YM2612Read_940\n"
"      .extern PicoRead8\n"
"      .extern Pico\n"
"      .extern z80_write\n"
".endif\n"
"\n"
"DrZ80Ver: .long 0x0001\n"
"\n"
";@ --------------------------- Defines ----------------------------\n"
";@ Make sure that regs/pointers for z80pc to z80sp match up!\n"
"\n"
"	opcodes    .req r3\n"
"	z80_icount .req r4\n"
"	cpucontext .req r5\n"
"	z80pc      .req r6\n"
"	z80a       .req r7\n"
"	z80f       .req r8\n"
"	z80bc      .req r9\n"
"	z80de      .req r10\n"
"	z80hl      .req r11\n"
"	z80sp      .req r12	\n"
"	z80xx      .req lr\n"
"\n"
"	.equ z80pc_pointer,           0                  ;@  0\n"
"	.equ z80a_pointer,            z80pc_pointer+4    ;@  4\n"
"	.equ z80f_pointer,            z80a_pointer+4     ;@  8\n"
"	.equ z80bc_pointer,           z80f_pointer+4     ;@  \n"
"	.equ z80de_pointer,           z80bc_pointer+4\n"
"	.equ z80hl_pointer,           z80de_pointer+4\n"
"	.equ z80sp_pointer,           z80hl_pointer+4\n"
"	.equ z80pc_base,              z80sp_pointer+4\n"
"	.equ z80sp_base,              z80pc_base+4\n"
"	.equ z80ix,                   z80sp_base+4\n"
"	.equ z80iy,                   z80ix+4\n"
"	.equ z80i,                    z80iy+4\n"
"	.equ z80a2,                   z80i+4\n"
"	.equ z80f2,                   z80a2+4\n"
"	.equ z80bc2,                  z80f2+4\n"
"	.equ z80de2,                  z80bc2+4\n"
"	.equ z80hl2,                  z80de2+4\n"
"	.equ cycles_pointer,          z80hl2+4     \n"
"	.equ previouspc,              cycles_pointer+4     \n"
"	.equ z80irq,                  previouspc+4\n"
"	.equ z80if,                   z80irq+1\n"
"	.equ z80im,                   z80if+1\n"
"	.equ z80r,                    z80im+1\n"
"	.equ z80irqvector,            z80r+1\n"
"	.equ z80irqcallback,          z80irqvector+4\n"
"	.equ z80_write8,              z80irqcallback+4\n"
"	.equ z80_write16,             z80_write8+4\n"
"	.equ z80_in,                  z80_write16+4\n"
"	.equ z80_out,                 z80_in+4\n"
"	.equ z80_read8,               z80_out+4\n"
"	.equ z80_read16,              z80_read8+4\n"
"	.equ z80_rebaseSP,            z80_read16+4\n"
"	.equ z80_rebasePC,            z80_rebaseSP+4\n"
"\n"
"	.equ VFlag, 0\n"
"	.equ CFlag, 1\n"
"	.equ ZFlag, 2\n"
"	.equ SFlag, 3\n"
"	.equ HFlag, 4\n"
"	.equ NFlag, 5\n"
"	.equ Flag3, 6\n"
"	.equ Flag5, 7\n"
"\n"
"	.equ Z80_CFlag, 0\n"
"	.equ Z80_NFlag, 1\n"
"	.equ Z80_VFlag, 2\n"
"	.equ Z80_Flag3, 3\n"
"	.equ Z80_HFlag, 4\n"
"	.equ Z80_Flag5, 5\n"
"	.equ Z80_ZFlag, 6\n"
"	.equ Z80_SFlag, 7\n"
"\n"
"	.equ Z80_IF1, 1<<0\n"
"	.equ Z80_IF2, 1<<1\n"
"	.equ Z80_HALT, 1<<2\n"
"\n"
";@---------------------------------------\n"
"\n"
".text\n"
"\n"
".if DRZ80_FOR_PICODRIVE\n"
"\n"
".macro YM2612Read_and_ret8\n"
"	stmfd sp!,{r3,r12,lr}\n"
".if EXTERNAL_YM2612\n"
"    ldr r1,=PicoOpt\n"
"    ldr r1,[r1]\n"
"    tst r1,#0x200\n"
"    bne 10f\n"
"    bl YM2612Read_\n"
"	ldmfd sp!,{r3,r12,pc}\n"
"10:\n"
"    bl YM2612Read_940\n"
".else\n"
"    bl YM2612Read_\n"
".endif\n"
"	ldmfd sp!,{r3,r12,pc}\n"
".endm\n"
"\n"
".macro YM2612Read_and_ret16\n"
"	stmfd sp!,{r3,r12,lr}\n"
".if EXTERNAL_YM2612\n"
"    ldr r0,=PicoOpt\n"
"    ldr r0,[r0]\n"
"    tst r0,#0x200\n"
"    bne 10f\n"
"    bl YM2612Read_\n"
"    orr r0,r0,r0,lsl #8\n"
"	ldmfd sp!,{r3,r12,pc}\n"
"10:\n"
"    bl YM2612Read_940\n"
"    orr r0,r0,r0,lsl #8\n"
".else\n"
"    bl YM2612Read_\n"
"    orr r0,r0,r0,lsl #8\n"
".endif\n"
"	ldmfd sp!,{r3,r12,pc}\n"
".endm\n"
"\n"
"pico_z80_read8: @ addr\n"
"    cmp r0,#0x2000         @ Z80 RAM\n"
"    ldrlt r1,[cpucontext,#z80sp_base]\n"
"    ldrltb r0,[r1,r0]\n"
"    bxlt lr\n"
"\n"
"    cmp r0,#0x8000         @ 68k bank\n"
"    blt 1f\n"
"    ldr r2,=(Pico+0x22212)\n"
"    ldrh r1,[r2]\n"
"    bic r0,r0,#0x3f8000\n"
"    orr r0,r0,r1,lsl #15\n"
"    ldr r1,[r2,#-0xe]      @ ROM size\n"
"    cmp r0,r1\n"
"    ldrlt r1,[r2,#-0x12]   @ ROM\n"
"    eorlt r0,r0,#1         @ our ROM is byteswapped\n"
"    ldrltb r0,[r1,r0]\n"
"    bxlt lr\n"
"	stmfd sp!,{r3,r12,lr}\n"
"    bl PicoRead8\n"
"	ldmfd sp!,{r3,r12,pc}\n"
"1:\n"
"    mov r1,r0,lsr #13\n"
"    cmp r1,#2              @ YM2612 (0x4000-0x5fff)\n"
"    bne 0f\n"
"    and r0,r0,#3\n"
"	YM2612Read_and_ret8\n"
"0:\n"
"    cmp r0,#0x4000\n"
"    movge r0,#0xff\n"
"    bxge lr\n"
"    ldr r1,[cpucontext,#z80sp_base]\n"
"    bic r0,r0,#0x0fe000    @ Z80 RAM (mirror)\n"
"    ldrb r0,[r1,r0]\n"
"    bx lr\n"
"\n"
"pico_z80_read16: @ addr\n"
"    cmp r0,#0x2000         @ Z80 RAM\n"
"    bge 2f\n"
"    ldr r1,[cpucontext,#z80sp_base]\n"
"    ldrb r0,[r1,r0]!\n"
"    ldrb r1,[r1,#1]\n"
"    orr r0,r0,r1,lsl #8\n"
"    bx lr\n"
"\n"
"2:\n"
"    cmp r0,#0x8000         @ 68k bank\n"
"    blt 1f\n"
"    ldr r2,=(Pico+0x22212)\n"
"    ldrh r1,[r2]\n"
"    bic r0,r0,#0x1f8000\n"
"    orr r0,r0,r1,lsl #15\n"
"    ldr r1,[r2,#-0xe]      @ ROM size\n"
"    cmp r0,r1\n"
"    ldr r1,[r2,#-0x12]     @ ROM\n"
"    tst r0,#1\n"
"    eor r0,r0,#1\n"
"    ldrb r0,[r1,r0]!\n"
"    ldreqb r1,[r1,#-1]\n"
"    ldrneb r1,[r1,#3]      @ this is due to byteswapped ROM\n"
"    orr r0,r0,r1,lsl #8\n"
"    bx lr\n"
"3:\n"
"    stmfd sp!,{r3-r5,r12,lr}\n"
"    mov r4,r0\n"
"    bl PicoRead8\n"
"    mov r5,r0\n"
"    add r0,r4,#1\n"
"    bl PicoRead8\n"
"    orr r0,r5,r0,lsl #8\n"
"	ldmfd sp!,{r3-r5,r12,pc}\n"
"1:\n"
"    mov r1,r0,lsr #13\n"
"    cmp r1,#2              @ YM2612 (0x4000-0x5fff)\n"
"    bne 0f\n"
"    and r0,r0,#3\n"
"	YM2612Read_and_ret16\n"
"0:\n"
"    cmp r0,#0x4000\n"
"    movge r0,#0xff\n"
"    bxge lr\n"
"    ldr r1,[cpucontext,#z80sp_base]\n"
"    bic r0,r0,#0x0fe000    @ Z80 RAM (mirror)\n"
"    ldrb r0,[r1,r0]!\n"
"    ldrb r1,[r1,#1]\n"
"    orr r0,r0,r1,lsl #8\n"
"    bx lr\n"
"\n"
"pico_z80_write8: @ data, addr\n"
"    cmp r1,#0x4000\n"
"    bge 1f\n"
"    ldr r2,[cpucontext,#z80sp_base]\n"
"    bic r1,r1,#0x0fe000    @ Z80 RAM\n"
"    strb r0,[r2,r1]\n"
"    bx lr\n"
"1:\n"
"    stmfd sp!,{r3,r12,lr}\n"
"    bl z80_write\n"
"    ldmfd sp!,{r3,r12,pc}\n"
"\n"
"pico_z80_write16: @ data, addr\n"
"    cmp r1,#0x4000\n"
"    bge 1f\n"
"    ldr r2,[cpucontext,#z80sp_base]\n"
"    bic r1,r1,#0x0fe000    @ Z80 RAM\n"
"    strb r0,[r2,r1]!\n"
"    mov r0,r0,lsr #8\n"
"    strb r0,[r2,#1]\n"
"    bx lr\n"
"1:\n"
"	stmfd sp!,{r3-r5,r12,lr}\n"
"    mov r4,r0\n"
"    mov r5,r1\n"
"	bl z80_write\n"
"    mov r0,r4,lsr #8\n"
"    add r1,r5,#1\n"
"	bl z80_write\n"
"	ldmfd sp!,{r3-r5,r12,pc}\n"
"\n"
"    .pool\n"
".endif\n"
"\n"
".macro fetch cycs\n"
"	subs z80_icount,z80_icount,#\cycs\n"
".if UPDATE_CONTEXT\n"
"    str z80pc,[cpucontext,#z80pc_pointer]\n"
"	str z80_icount,[cpucontext,#cycles_pointer]\n"
"	ldr r1,[cpucontext,#z80pc_base]\n"
"	sub r2,z80pc,r1\n"
"	str r2,[cpucontext,#previouspc]\n"
".endif\n"
"	ldrplb r0,[z80pc],#1\n"
"	ldrpl pc,[opcodes,r0, lsl #2]\n"
"	bmi z80_execute_end\n"
".endm\n"
"\n"
".macro eatcycles cycs\n"
"	sub z80_icount,z80_icount,#\cycs\n"
".if UPDATE_CONTEXT\n"
"	str z80_icount,[cpucontext,#cycles_pointer]\n"
".endif\n"
".endm\n"
"\n"
".macro readmem8\n"
".if UPDATE_CONTEXT\n"
"    str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bl pico_z80_read8\n"
".else\n"
"    stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read8]			;@ r0 = addr - data returned in r0\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
".endm\n"
"\n"
".macro readmem8HL\n"
"	mov r0,z80hl, lsr #16\n"
"	readmem8\n"
".endm\n"
"\n"
".macro readmem16\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bl pico_z80_read16\n"
".else\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read16]\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
".endm\n"
"\n"
".macro writemem8\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bl pico_z80_write8\n"
".else\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_write8]			;@ r0=data r1=addr\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
".endm\n"
"\n"
".macro writemem8DE\n"
"	mov r1,z80de, lsr #16\n"
"	writemem8\n"
".endm\n"
"\n"
".macro writemem8HL\n"
"	mov r1,z80hl, lsr #16\n"
"	writemem8\n"
".endm\n"
"\n"
".macro writemem16\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bl pico_z80_write16\n"
".else\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_write16]		;@ r0=data r1=addr\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
".endm\n"
"\n"
".macro copymem8HL_DE\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
"	mov r0,z80hl, lsr #16\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bl pico_z80_read8\n"
".else\n"
"    stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read8]			;@ r0 = addr - data returned in r0\n"
".endif\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
"	mov r1,z80de, lsr #16\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bl pico_z80_write8\n"
".else\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_write8]			;@ r0=data r1=addr\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro rebasepc\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bic r0,r0,#0xfe000\n"
"    ldr r1,[cpucontext,#z80pc_base]\n"
"    add z80pc,r1,r0\n"
".else\n"
"    stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_rebasePC]		;@ r0=new pc - external function sets z80pc_base and returns new z80pc in r0\n"
"	ldmfd sp!,{r3,r12}\n"
"	mov z80pc,r0\n"
".endif\n"
".endm\n"
"\n"
".macro rebasesp\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bic r0,r0,#0xfe000\n"
"    ldr r1,[cpucontext,#z80sp_base]\n"
"    add r0,r1,r0\n"
".else\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_rebaseSP]		;@ external function must rebase sp\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
".endm\n"
";@----------------------------------------------------------------------------\n"
"\n"
".macro opADC\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	subcs r0,r0,#0x100\n"
"	eor z80f,r0,z80a,lsr#24					;@ prepare for check of half carry\n"
"	adcs z80a,z80a,r0,ror#8\n"
"	mrs r0,cpsr								;@ S,Z,V&C\n"
"	eor z80f,z80f,z80a,lsr#24\n"
"	and z80f,z80f,#1<<HFlag					;@ H, correct\n"
"	orr z80f,z80f,r0,lsr#28\n"
".endm\n"
"\n"
".macro opADCA\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	orrcs z80a,z80a,#0x00800000\n"
"	adds z80a,z80a,z80a\n"
"	mrs z80f,cpsr							;@ S,Z,V&C\n"
"	mov z80f,z80f,lsr#28\n"
"	tst z80a,#0x10000000					;@ H, correct\n"
"	orrne z80f,z80f,#1<<HFlag\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opADCH reg\n"
"	mov r0,\reg,lsr#24\n"
"	opADC\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opADCL reg\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	adc r0,\reg,\reg,lsr#15\n"
"	orrcs z80a,z80a,#0x00800000\n"
"	mov r1,z80a,lsl#4						;@ Prepare for check of half carry\n"
"	adds z80a,z80a,r0,lsl#23\n"
"	mrs z80f,cpsr							;@ S,Z,V&C\n"
"	mov z80f,z80f,lsr#28\n"
"	cmn r1,r0,lsl#27\n"
"	orrcs z80f,z80f,#1<<HFlag				;@ H, correct\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opADCb\n"
"	opADC\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opADD reg shift\n"
"	mov r1,z80a,lsl#4						;@ Prepare for check of half carry\n"
"	adds z80a,z80a,\reg,lsl#\shift\n"
"	mrs z80f,cpsr							;@ S,Z,V&C\n"
"	mov z80f,z80f,lsr#28\n"
"	cmn r1,\reg,lsl#\shift+4\n"
"	orrcs z80f,z80f,#1<<HFlag\n"
".endm\n"
"\n"
".macro opADDA\n"
"	adds z80a,z80a,z80a\n"
"	mrs z80f,cpsr							;@ S,Z,V&C\n"
"	mov z80f,z80f,lsr#28\n"
"	tst z80a,#0x10000000					;@ H, correct\n"
"	orrne z80f,z80f,#1<<HFlag\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opADDH reg\n"
"	and r0,\reg,#0xFF000000\n"
"	opADD r0 0\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opADDL reg\n"
"	opADD \reg 8\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opADDb \n"
"	opADD r0 24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opADC16 reg\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	adc r0,z80a,\reg,lsr#15\n"
"	orrcs z80hl,z80hl,#0x00008000\n"
"	mov r1,z80hl,lsl#4\n"
"	adds z80hl,z80hl,r0,lsl#15\n"
"	mrs z80f,cpsr							;@ S, Z, V & C\n"
"	mov z80f,z80f,lsr#28\n"
"	cmn r1,r0,lsl#19\n"
"	orrcs z80f,z80f,#1<<HFlag\n"
"	fetch 15\n"
".endm\n"
"\n"
".macro opADC16HL\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	orrcs z80hl,z80hl,#0x00008000\n"
"	adds z80hl,z80hl,z80hl\n"
"	mrs z80f,cpsr							;@ S, Z, V & C\n"
"	mov z80f,z80f,lsr#28\n"
"	tst z80hl,#0x10000000					;@ H, correct.\n"
"	orrne z80f,z80f,#1<<HFlag\n"
"	fetch 15\n"
".endm\n"
"\n"
".macro opADD16 reg1 reg2\n"
"	mov r1,\reg1,lsl#4						;@ Prepare for check of half carry\n"
"	adds \reg1,\reg1,\reg2\n"
"	bic z80f,z80f,#(1<<CFlag)|(1<<HFlag)|(1<<NFlag)\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	cmn r1,\reg2,lsl#4\n"
"	orrcs z80f,z80f,#1<<HFlag\n"
".endm\n"
"\n"
".macro opADD16s reg1 reg2 shift\n"
"	mov r1,\reg1,lsl#4						;@ Prepare for check of half carry\n"
"	adds \reg1,\reg1,\reg2,lsl#\shift\n"
"	bic z80f,z80f,#(1<<CFlag)|(1<<HFlag)|(1<<NFlag)\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	cmn r1,\reg2,lsl#4+\shift\n"
"	orrcs z80f,z80f,#1<<HFlag\n"
".endm\n"
"\n"
".macro opADD16_2 reg\n"
"	adds \reg,\reg,\reg\n"
"	bic z80f,z80f,#(1<<CFlag)|(1<<HFlag)|(1<<NFlag)\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	tst \reg,#0x10000000					;@ H, correct.\n"
"	orrne z80f,z80f,#1<<HFlag\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opAND reg shift\n"
"	and z80a,z80a,\reg,lsl#\shift\n"
"	sub r0,opcodes,#0x100\n"
"	ldrb z80f,[r0,z80a, lsr #24]\n"
"	orr z80f,z80f,#1<<HFlag\n"
".endm\n"
"\n"
".macro opANDA\n"
"	sub r0,opcodes,#0x100\n"
"	ldrb z80f,[r0,z80a, lsr #24]\n"
"	orr z80f,z80f,#1<<HFlag\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opANDH reg\n"
"	opAND \reg 0\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opANDL reg\n"
"	opAND \reg 8\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opANDb\n"
"	opAND r0 24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opBITH reg bit\n"
"	and z80f,z80f,#1<<CFlag\n"
"	tst \reg,#1<<(24+\bit)\n"
"	orreq z80f,z80f,#(1<<HFlag)|(1<<ZFlag)|(1<<VFlag)\n"
"	orrne z80f,z80f,#(1<<HFlag)\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opBIT7H reg\n"
"	and z80f,z80f,#1<<CFlag\n"
"	tst \reg,#1<<(24+7)\n"
"	orreq z80f,z80f,#(1<<HFlag)|(1<<ZFlag)|(1<<VFlag)\n"
"	orrne z80f,z80f,#(1<<HFlag)|(1<<SFlag)\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opBITL reg bit\n"
"	and z80f,z80f,#1<<CFlag\n"
"	tst \reg,#1<<(16+\bit)\n"
"	orreq z80f,z80f,#(1<<HFlag)|(1<<ZFlag)|(1<<VFlag)\n"
"	orrne z80f,z80f,#(1<<HFlag)\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opBIT7L reg\n"
"	and z80f,z80f,#1<<CFlag\n"
"	tst \reg,#1<<(16+7)\n"
"	orreq z80f,z80f,#(1<<HFlag)|(1<<ZFlag)|(1<<VFlag)\n"
"	orrne z80f,z80f,#(1<<HFlag)|(1<<SFlag)\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opBITb bit\n"
"	and z80f,z80f,#1<<CFlag\n"
"	tst r0,#1<<\bit\n"
"	orreq z80f,z80f,#(1<<HFlag)|(1<<ZFlag)|(1<<VFlag)\n"
"	orrne z80f,z80f,#(1<<HFlag)\n"
".endm\n"
"\n"
".macro opBIT7b\n"
"	and z80f,z80f,#1<<CFlag\n"
"	tst r0,#1<<7\n"
"	orreq z80f,z80f,#(1<<HFlag)|(1<<ZFlag)|(1<<VFlag)\n"
"	orrne z80f,z80f,#(1<<HFlag)|(1<<SFlag)\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opCP reg shift\n"
"	mov r1,z80a,lsl#4						;@ prepare for check of half carry\n"
"	cmp z80a,\reg,lsl#\shift\n"
"	mrs z80f,cpsr\n"
"	mov z80f,z80f,lsr#28					;@ S,Z,V&C\n"
"	eor z80f,z80f,#(1<<CFlag)|(1<<NFlag)	;@ invert C and set n\n"
"	cmp r1,\reg,lsl#\shift+4\n"
"	orrcc z80f,z80f,#1<<HFlag\n"
".endm\n"
"\n"
".macro opCPA\n"
"	mov z80f,#(1<<ZFlag)|(1<<NFlag)			;@ set Z & n\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opCPH reg\n"
"	and r0,\reg,#0xFF000000\n"
"	opCP r0 0\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opCPL reg\n"
"	opCP \reg 8\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opCPb\n"
"	opCP r0 24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opDEC8 reg							;@for A and memory\n"
"	and z80f,z80f,#1<<CFlag					;@save carry\n"
"	orr z80f,z80f,#1<<NFlag					;@set n\n"
"	tst \reg,#0x0f000000\n"
"	orreq z80f,z80f,#1<<HFlag\n"
"	subs \reg,\reg,#0x01000000\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orrvs z80f,z80f,#1<<VFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
".endm\n"
"\n"
".macro opDEC8H reg							;@for B, D & H\n"
"	and z80f,z80f,#1<<CFlag					;@save carry\n"
"	orr z80f,z80f,#1<<NFlag					;@set n\n"
"	tst \reg,#0x0f000000\n"
"	orreq z80f,z80f,#1<<HFlag\n"
"	subs \reg,\reg,#0x01000000\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orrvs z80f,z80f,#1<<VFlag\n"
"	tst \reg,#0xff000000					;@Z\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
".endm\n"
"\n"
".macro opDEC8L reg							;@for C, E & L\n"
"	mov \reg,\reg,ror#24\n"
"	opDEC8H \reg\n"
"	mov \reg,\reg,ror#8\n"
".endm\n"
"\n"
".macro opDEC8b								;@for memory\n"
"	mov r0,r0,lsl#24\n"
"	opDEC8 r0\n"
"	mov r0,r0,lsr#24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opIN\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_in]				;@ r0=port - data returned in r0\n"
"	ldmfd sp!,{r3,r12}\n"
".endm\n"
"\n"
".macro opIN_C\n"
"	mov r0,z80bc, lsr #16\n"
"	opIN\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opINC8 reg							;@for A and memory\n"
"	and z80f,z80f,#1<<CFlag					;@save carry, clear n\n"
"	adds \reg,\reg,#0x01000000\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orrvs z80f,z80f,#1<<VFlag\n"
"	orrcs z80f,z80f,#1<<ZFlag				;@cs when going from 0xFF to 0x00\n"
"	tst \reg,#0x0f000000\n"
"	orreq z80f,z80f,#1<<HFlag\n"
".endm\n"
"\n"
".macro opINC8H reg							;@for B, D & H\n"
"	opINC8 \reg\n"
".endm\n"
"\n"
".macro opINC8L reg							;@for C, E & L\n"
"	mov \reg,\reg,ror#24\n"
"	opINC8 \reg\n"
"	mov \reg,\reg,ror#8\n"
".endm\n"
"\n"
".macro opINC8b								;@for memory\n"
"	mov r0,r0,lsl#24\n"
"	opINC8 r0\n"
"	mov r0,r0,lsr#24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opOR reg shift\n"
"	orr z80a,z80a,\reg,lsl#\shift\n"
"	sub r0,opcodes,#0x100\n"
"	ldrb z80f,[r0,z80a, lsr #24]\n"
".endm\n"
"\n"
".macro opORA\n"
"	sub r0,opcodes,#0x100\n"
"	ldrb z80f,[r0,z80a, lsr #24]\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opORH reg\n"
"	and r0,\reg,#0xFF000000\n"
"	opOR r0 0\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opORL reg\n"
"	opOR \reg 8\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opORb\n"
"	opOR r0 24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opOUT\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_out]			;@ r0=port r1=data\n"
"	ldmfd sp!,{r3,r12}\n"
".endm\n"
"\n"
".macro opOUT_C\n"
"	mov r0,z80bc, lsr #16\n"
"	opOUT\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opPOP\n"
".if FAST_Z80SP\n"
".if DRZ80_FOR_PICODRIVE\n"
"    @ notaz: try to protect against stack overflows, which tend to happen in Picodrive because of poor timing\n"
"    ldr r2,[cpucontext,#z80sp_base]\n"
"	ldrb r0,[z80sp],#1\n"
"    add r2,r2,#0x2000\n"
"    cmp z80sp,r2\n"
"@    subge z80sp,z80sp,#0x2000 @ unstable?\n"
"	ldrb r1,[z80sp],#1\n"
"    cmp z80sp,r2\n"
"@    subge z80sp,z80sp,#0x2000\n"
"	orr r0,r0,r1, lsl #8\n"
".else\n"
"	ldrb r0,[z80sp],#1\n"
"	ldrb r1,[z80sp],#1\n"
"	orr r0,r0,r1, lsl #8\n"
".endif\n"
".else\n"
"	mov r0,z80sp\n"
"	readmem16\n"
"	add z80sp,z80sp,#2\n"
".endif\n"
".endm\n"
"\n"
".macro opPOPreg reg\n"
"	opPOP\n"
"	mov \reg,r0, lsl #16\n"
"	fetch 10\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opPUSHareg reg @ reg > r1\n"
".if FAST_Z80SP\n"
".if DRZ80_FOR_PICODRIVE\n"
"    @ notaz: try to protect against stack overflows, which tend to happen in Picodrive because of poor timing\n"
"    ldr r0,[cpucontext,#z80sp_base]\n"
"    cmp z80sp,r0\n"
"    addle z80sp,z80sp,#0x2000\n"
"    mov r1,\reg, lsr #8\n"
"	strb r1,[z80sp,#-1]!\n"
"    cmp z80sp,r0\n"
"    addle z80sp,z80sp,#0x2000\n"
"	strb \reg,[z80sp,#-1]!\n"
".else\n"
"	mov r1,\reg, lsr #8\n"
"	strb r1,[z80sp,#-1]!\n"
"	strb \reg,[z80sp,#-1]!\n"
".endif\n"
".else\n"
"    mov r0,\reg\n"
"	sub z80sp,z80sp,#2\n"
"	mov r1,z80sp\n"
"	writemem16\n"
".endif\n"
".endm\n"
"\n"
".macro opPUSHreg reg\n"
".if FAST_Z80SP\n"
".if DRZ80_FOR_PICODRIVE\n"
"    ldr r0,[cpucontext,#z80sp_base]\n"
"    cmp z80sp,r0\n"
"    addle z80sp,z80sp,#0x2000\n"
"    mov r1,\reg, lsr #24\n"
"	strb r1,[z80sp,#-1]!\n"
"    cmp z80sp,r0\n"
"    addle z80sp,z80sp,#0x2000\n"
"	mov r1,\reg, lsr #16\n"
"	strb r1,[z80sp,#-1]!\n"
".else\n"
"    mov r1,\reg, lsr #24\n"
"	strb r1,[z80sp,#-1]!\n"
"	mov r1,\reg, lsr #16\n"
"	strb r1,[z80sp,#-1]!\n"
".endif\n"
".else\n"
"	mov r0,\reg,lsr #16\n"
"	sub z80sp,z80sp,#2\n"
"	mov r1,z80sp\n"
"	writemem16\n"
".endif\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opRESmemHL bit\n"
".if DRZ80_FOR_PICODRIVE\n"
"	mov r0,z80hl, lsr #16\n"
"    bl pico_z80_read8\n"
"	bic r0,r0,#1<<\bit\n"
"	mov r1,z80hl, lsr #16\n"
"    bl pico_z80_write8\n"
".else\n"
"	mov r0,z80hl, lsr #16\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read8]			;@ r0 = addr - data returned in r0\n"
"	bic r0,r0,#1<<\bit\n"
"	mov r1,z80hl, lsr #16\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_write8]			;@ r0=data r1=addr\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
"    fetch 15\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opRESmem bit\n"
".if DRZ80_FOR_PICODRIVE\n"
"	stmfd sp!,{r0}							;@ save addr as well\n"
"    bl pico_z80_read8\n"
"	bic r0,r0,#1<<\bit\n"
"	ldmfd sp!,{r1}							;@ restore addr into r1\n"
"    bl pico_z80_write8\n"
".else\n"
"	stmfd sp!,{r3,r12}\n"
"	stmfd sp!,{r0}							;@ save addr as well\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read8]			;@ r0=addr - data returned in r0\n"
"	bic r0,r0,#1<<\bit\n"
"	ldmfd sp!,{r1}							;@ restore addr into r1\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_write8]			;@ r0=data r1=addr\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
"	fetch 23\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opRL reg1 reg2 shift\n"
"	movs \reg1,\reg2,lsl \shift\n"
"	tst z80f,#1<<CFlag						;@doesn't affect ARM carry, as long as the imidiate value is < 0x100. Watch out!\n"
"	orrne \reg1,\reg1,#0x01000000\n"
";@	and r2,z80f,#1<<CFlag\n"
";@	orr $x,$x,r2,lsl#23\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1,lsr#24]				;@get PZS\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opRLA\n"
"	opRL z80a, z80a, #1\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRLH reg\n"
"	and r0,\reg,#0xFF000000					;@mask high to r0\n"
"	adds \reg,\reg,r0\n"
"	tst z80f,#1<<CFlag						;@doesn't affect ARM carry, as long as the imidiate value is < 0x100. Watch out!\n"
"	orrne \reg,\reg,#0x01000000\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg,lsr#24]				;@get PZS\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRLL reg\n"
"	opRL r0, \reg, #9\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsr#8\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRLb\n"
"	opRL r0, r0, #25\n"
"	mov r0,r0,lsr#24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opRLC reg1 reg2 shift\n"
"	movs \reg1,\reg2,lsl#\shift\n"
"	orrcs \reg1,\reg1,#0x01000000\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opRLCA\n"
"	opRLC z80a, z80a, 1\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRLCH reg\n"
"	and r0,\reg,#0xFF000000					;@mask high to r0\n"
"	adds \reg,\reg,r0\n"
"	orrcs \reg,\reg,#0x01000000\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRLCL reg\n"
"	opRLC r0, \reg, 9\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsr#8\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRLCb\n"
"	opRLC r0, r0, 25\n"
"	mov r0,r0,lsr#24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opRR reg1 reg2 shift\n"
"	movs \reg1,\reg2,lsr#\shift\n"
"	tst z80f,#1<<CFlag						;@doesn't affect ARM carry, as long as the imidiate value is < 0x100. Watch out!\n"
"	orrne \reg1,\reg1,#0x00000080\n"
";@	and r2,z80_f,#PSR_C\n"
";@	orr \reg1,\reg1,r2,lsl#6\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opRRA\n"
"	orr z80a,z80a,z80f,lsr#1				;@get C\n"
"	movs z80a,z80a,ror#25\n"
"	mov z80a,z80a,lsl#24\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,z80a,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRRH reg\n"
"	orr r0,\reg,z80f,lsr#1					;@get C\n"
"	movs r0,r0,ror#25\n"
"	and \reg,\reg,#0x00FF0000				;@mask out low\n"
"	orr \reg,\reg,r0,lsl#24\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRRL reg\n"
"	and r0,\reg,#0x00FF0000					;@mask out low to r0\n"
"	opRR r0 r0 17\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsl#16\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRRb\n"
"	opRR r0 r0 1\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opRRC reg1 reg2 shift\n"
"	movs \reg1,\reg2,lsr#\shift\n"
"	orrcs \reg1,\reg1,#0x00000080\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opRRCA\n"
"	opRRC z80a, z80a, 25\n"
"	mov z80a,z80a,lsl#24\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRRCH reg\n"
"	opRRC r0, \reg, 25\n"
"	and \reg,\reg,#0x00FF0000				;@mask out low\n"
"	orr \reg,\reg,r0,lsl#24\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRRCL reg\n"
"	and r0,\reg,#0x00FF0000					;@mask low to r0\n"
"	opRRC r0, r0, 17\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsl#16\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opRRCb\n"
"	opRRC r0, r0, 1\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opRST addr\n"
"	ldr r0,[cpucontext,#z80pc_base]\n"
"	sub r2,z80pc,r0\n"
"    opPUSHareg r2\n"
"	mov r0,#\addr\n"
"	rebasepc\n"
"	fetch 11\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSBC\n"
"	eor z80f,z80f,#1<<CFlag					;@ invert C\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	subcc r0,r0,#0x100\n"
"	eor z80f,r0,z80a,lsr#24					;@ prepare for check of H\n"
"	sbcs z80a,z80a,r0,ror#8\n"
"	mrs r0,cpsr\n"
"	eor z80f,z80f,z80a,lsr#24\n"
"	and z80f,z80f,#1<<HFlag					;@ H, correct\n"
"	orr z80f,z80f,r0,lsr#28					;@ S,Z,V&C\n"
"	eor z80f,z80f,#(1<<CFlag)|(1<<NFlag)	;@ invert C and set n.\n"
".endm\n"
"\n"
".macro opSBCA\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	movcc z80a,#0x00000000\n"
"	movcs z80a,#0xFF000000\n"
"	movcc z80f,#(1<<NFlag)|(1<<ZFlag)\n"
"	movcs z80f,#(1<<NFlag)|(1<<SFlag)|(1<<CFlag)|(1<<HFlag)\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opSBCH reg\n"
"	mov r0,\reg,lsr#24\n"
"	opSBC\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opSBCL reg\n"
"	mov r0,\reg,lsl#8\n"
"	eor z80f,z80f,#1<<CFlag					;@ invert C\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	sbccc r0,r0,#0xFF000000\n"
"	mov r1,z80a,lsl#4						;@ prepare for check of H\n"
"	sbcs z80a,z80a,r0\n"
"	mrs z80f,cpsr\n"
"	mov z80f,z80f,lsr#28					;@ S,Z,V&C\n"
"	eor z80f,z80f,#(1<<CFlag)|(1<<NFlag)	;@ invert C and set n.\n"
"	cmp r1,r0,lsl#4\n"
"	orrcc z80f,z80f,#1<<HFlag				;@ H, correct\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opSBCb\n"
"	opSBC\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSBC16 reg\n"
"	eor z80f,z80f,#1<<CFlag					;@ invert C\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	sbc r1,r1,r1							;@ set r1 to -1 or 0.\n"
"	orr r0,\reg,r1,lsr#16\n"
"	mov r1,z80hl,lsl#4						;@ prepare for check of H\n"
"	sbcs z80hl,z80hl,r0\n"
"	mrs z80f,cpsr\n"
"	mov z80f,z80f,lsr#28					;@ S,Z,V&C\n"
"	eor z80f,z80f,#(1<<CFlag)|(1<<NFlag)	;@ invert C and set n.\n"
"	cmp r1,r0,lsl#4\n"
"	orrcc z80f,z80f,#1<<HFlag				;@ H, correct\n"
"	fetch 15\n"
".endm\n"
"\n"
".macro opSBC16HL\n"
"	movs z80f,z80f,lsr#2					;@ get C\n"
"	mov z80hl,#0x00000000\n"
"	subcs z80hl,z80hl,#0x00010000\n"
"	movcc z80f,#(1<<NFlag)|(1<<ZFlag)\n"
"	movcs z80f,#(1<<NFlag)|(1<<SFlag)|(1<<CFlag)|(1<<HFlag)\n"
"	fetch 15\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSETmemHL bit\n"
".if DRZ80_FOR_PICODRIVE\n"
"	mov r0,z80hl, lsr #16\n"
"    bl pico_z80_read8\n"
"	orr r0,r0,#1<<\bit\n"
"	mov r1,z80hl, lsr #16\n"
"    bl pico_z80_write8\n"
".else\n"
"	mov r0,z80hl, lsr #16\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read8]			;@ r0 = addr - data returned in r0\n"
"	orr r0,r0,#1<<\bit\n"
"	mov r1,z80hl, lsr #16\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_write8]			;@ r0=data r1=addr\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
"    fetch 15\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSETmem bit\n"
".if DRZ80_FOR_PICODRIVE\n"
"	stmfd sp!,{r0}	;@ save addr as well\n"
"    bl pico_z80_read8\n"
"	orr r0,r0,#1<<\bit\n"
"	ldmfd sp!,{r1}	;@ restore addr into r1\n"
"    bl pico_z80_write8\n"
".else\n"
"	stmfd sp!,{r3,r12}\n"
"	stmfd sp!,{r0}	;@ save addr as well\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read8]			;@ r0=addr - data returned in r0\n"
"	orr r0,r0,#1<<\bit\n"
"	ldmfd sp!,{r1}	;@ restore addr into r1\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_write8]			;@ r0=data r1=addr\n"
"	ldmfd sp!,{r3,r12}\n"
".endif\n"
"	fetch 23\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSLA reg1 reg2 shift\n"
"	movs \reg1,\reg2,lsl#\shift\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opSLAA\n"
"	opSLA z80a, z80a, 1\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSLAH reg\n"
"	and r0,\reg,#0xFF000000					;@mask high to r0\n"
"	adds \reg,\reg,r0\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSLAL reg\n"
"	opSLA r0, \reg, 9\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsr#8\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSLAb\n"
"	opSLA r0, r0, 25\n"
"	mov r0,r0,lsr#24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSLL reg1 reg2 shift\n"
"	movs \reg1,\reg2,lsl#\shift\n"
"	orr \reg1,\reg1,#0x01000000\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opSLLA\n"
"	opSLL z80a, z80a, 1\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSLLH reg\n"
"	and r0,\reg,#0xFF000000					;@mask high to r0\n"
"	adds \reg,\reg,r0\n"
"	orr \reg,\reg,#0x01000000\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSLLL reg\n"
"	opSLL r0, \reg, 9\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsr#8\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSLLb\n"
"	opSLL r0, r0, 25\n"
"	mov r0,r0,lsr#24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSRA reg1 reg2\n"
"	movs \reg1,\reg2,asr#25\n"
"	and \reg1,\reg1,#0xFF\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opSRAA\n"
"	movs r0,z80a,asr#25\n"
"	mov z80a,r0,lsl#24\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,z80a,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSRAH reg\n"
"	movs r0,\reg,asr#25\n"
"	and \reg,\reg,#0x00FF0000				;@mask out low\n"
"	orr \reg,\reg,r0,lsl#24\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg,lsr#24]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSRAL reg\n"
"	mov r0,\reg,lsl#8\n"
"	opSRA r0, r0\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsl#16\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSRAb\n"
"	mov r0,r0,lsl#24\n"
"	opSRA r0, r0\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSRL reg1 reg2 shift\n"
"	movs \reg1,\reg2,lsr#\shift\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb z80f,[r1,\reg1]\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
".endm\n"
"\n"
".macro opSRLA\n"
"	opSRL z80a, z80a, 25\n"
"	mov z80a,z80a,lsl#24\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSRLH reg\n"
"	opSRL r0, \reg, 25\n"
"	and \reg,\reg,#0x00FF0000				;@mask out low\n"
"	orr \reg,\reg,r0,lsl#24\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSRLL reg\n"
"	mov r0,\reg,lsl#8\n"
"	opSRL r0, r0, 25\n"
"	and \reg,\reg,#0xFF000000				;@mask out high\n"
"	orr \reg,\reg,r0,lsl#16\n"
"	fetch 8\n"
".endm\n"
"\n"
".macro opSRLb\n"
"	opSRL r0, r0, 1\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opSUB reg shift\n"
"	mov r1,z80a,lsl#4						;@ Prepare for check of half carry\n"
"	subs z80a,z80a,\reg,lsl#\shift\n"
"	mrs z80f,cpsr\n"
"	mov z80f,z80f,lsr#28					;@ S,Z,V&C\n"
"	eor z80f,z80f,#(1<<CFlag)|(1<<NFlag)	;@ invert C and set n\n"
"	cmp r1,\reg,lsl#\shift+4\n"
"	orrcc z80f,z80f,#1<<HFlag\n"
".endm\n"
"\n"
".macro opSUBA\n"
"	mov z80a,#0\n"
"	mov z80f,#(1<<ZFlag)|(1<<NFlag)			;@ set Z & n\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opSUBH reg\n"
"	and r0,\reg,#0xFF000000\n"
"	opSUB r0, 0\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opSUBL reg\n"
"	opSUB \reg, 8\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opSUBb\n"
"	opSUB r0, 24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
".macro opXOR reg shift\n"
"	eor z80a,z80a,\reg,lsl#\shift\n"
"	sub r0,opcodes,#0x100\n"
"	ldrb z80f,[r0,z80a, lsr #24]\n"
".endm\n"
"\n"
".macro opXORA\n"
"	mov z80a,#0\n"
"	mov z80f,#(1<<ZFlag)|(1<<VFlag)\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opXORH reg\n"
"	and r0,\reg,#0xFF000000\n"
"	opXOR r0, 0\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opXORL reg\n"
"	opXOR \reg, 8\n"
"	fetch 4\n"
".endm\n"
"\n"
".macro opXORb\n"
"	opXOR r0, 24\n"
".endm\n"
";@---------------------------------------\n"
"\n"
"\n"
";@ --------------------------- Framework --------------------------\n"
"    \n"
".text\n"
"\n"
"DrZ80Run:\n"
"	;@ r0 = pointer to cpu context\n"
"	;@ r1 = ISTATES to execute  \n"
"	;@#########################################   \n"
"	stmdb sp!,{r4-r12,lr}					;@ save registers on stack\n"
"	mov cpucontext,r0						;@ setup main memory pointer\n"
"	mov z80_icount,r1						;@ setup number of Tstates to execute\n"
"\n"
".if INTERRUPT_MODE == 0\n"
"	ldrh r0,[cpucontext,#z80irq] @ 0x4C\n"
".endif\n"
"	ldmia cpucontext,{z80pc-z80sp}			;@ load Z80 registers\n"
"\n"
".if INTERRUPT_MODE == 0\n"
"	;@ check ints\n"
"	tst r0,#1\n"
"	movnes r0,r0,lsr #8\n"
"    blne DoInterrupt\n"
".endif\n"
"\n"
"	ldrb r0,[z80pc],#1    ;@ get first op code\n"
"	ldr opcodes,MAIN_opcodes_POINTER2\n"
"	ldr pc,[opcodes,r0, lsl #2]  ;@ execute op code\n"
"\n"
"MAIN_opcodes_POINTER2: .word MAIN_opcodes\n"
"\n"
"\n"
"z80_execute_end:\n"
"	;@ save registers in CPU context\n"
"	stmia cpucontext,{z80pc-z80sp}			;@ save Z80 registers\n"
"    mov r0,z80_icount\n"
"	ldmia sp!,{r4-r12,pc}					;@ restore registers from stack and return to C code\n"
"\n"
".if INTERRUPT_MODE\n"
"Interrupt_local: .word Interrupt\n"
".endif\n"
"\n"
"DoInterrupt:\n"
".if INTERRUPT_MODE\n"
"	;@ Don't do own int handler, call mames instead\n"
"\n"
"	;@ save everything back into DrZ80 context\n"
"	stmia cpucontext,{z80pc-z80sp}			;@ save Z80 registers\n"
"	stmfd sp!,{r3,r4,r5,lr}					;@ save rest of regs on stack\n"
"	mov lr,pc\n"
"	ldr pc,Interrupt_local\n"
"	ldmfd sp!,{r3,r4,r5,lr}					;@ load regs from stack\n"
"	;@ reload regs from DrZ80 context\n"
"	ldmia cpucontext,{z80pc-z80sp}			;@ load Z80 registers\n"
"	mov pc,lr ;@ return\n"
".else\n"
"	stmfd sp!,{lr}\n"
"\n"
"	tst r0,#4 ;@ check halt\n"
"	addne z80pc,z80pc,#1\n"
"\n"
"	ldrb r1,[cpucontext,#z80im]\n"
"\n"
"    ;@ clear halt and int flags\n"
"	eor r0,r0,r0\n"
"	strb r0,[cpucontext,#z80if]\n"
"\n"
"	;@ now check int mode\n"
"    tst r1,#1\n"
"    bne DoInterrupt_mode1\n"
"    tst r1,#2\n"
"    bne DoInterrupt_mode2\n"
"    b   DoInterrupt_mode0\n"
"\n"
"DoInterrupt_mode0:\n"
"	;@ get 3 byte vector\n"
"	ldr r2,[cpucontext, #z80irqvector]\n"
"	and r1,r2,#0xFF0000\n"
"	cmp r1,#0xCD0000  ;@ call\n"
"	bne 1f\n"
"	;@ ########\n"
"	;@ # call\n"
"	;@ ########\n"
"	;@ save current pc on stack\n"
"	ldr r0,[cpucontext,#z80pc_base]\n"
"	sub r0,z80pc,r0\n"
".if FAST_Z80SP\n"
"	mov r1,r0, lsr #8\n"
"	strb r1,[z80sp,#-1]!\n"
"	strb r0,[z80sp,#-1]!\n"
".else\n"
"	sub z80sp,z80sp,#2\n"
"	mov r1,z80sp\n"
"	writemem16\n"
"	ldr r2,[cpucontext, #z80irqvector]\n"
".endif\n"
"	;@ jump to vector\n"
"	mov r2,r2,lsl#16\n"
"	mov r0,r2,lsr#16\n"
"	;@ rebase new pc\n"
"	rebasepc\n"
"\n"
"	b DoInterrupt_end\n"
"\n"
"1:\n"
"	cmp r1,#0xC30000  ;@ jump\n"
"	bne DoInterrupt_mode1    ;@ rst\n"
"	;@ #######\n"
"	;@ # jump\n"
"	;@ #######\n"
"	;@ jump to vector\n"
"	mov r2,r2,lsl#16\n"
"	mov r0,r2,lsr#16\n"
"	;@ rebase new pc\n"
"	rebasepc\n"
"\n"
"	b DoInterrupt_end\n"
"\n"
"DoInterrupt_mode1:\n"
"	ldr r0,[cpucontext,#z80pc_base]\n"
"	sub r2,z80pc,r0\n"
"    opPUSHareg r2\n"
"	mov r0,#0x38\n"
"	rebasepc\n"
"\n"
"	b DoInterrupt_end\n"
"\n"
"DoInterrupt_mode2:\n"
"	;@ push pc on stack\n"
"	ldr r0,[cpucontext,#z80pc_base]\n"
"	sub r2,z80pc,r0\n"
"    opPUSHareg r2\n"
"\n"
"	;@ get 1 byte vector address\n"
"	ldrb r0,[cpucontext, #z80irqvector]\n"
"	ldr r1,[cpucontext, #z80i]\n"
"	orr r0,r0,r1,lsr#16\n"
"\n"
"	;@ read new pc from vector address\n"
".if DRZ80_FOR_PICODRIVE\n"
"    bl pico_z80_read16\n"
"    bic r0,r0,#0xfe000\n"
"    ldr r1,[cpucontext,#z80pc_base]\n"
"    add z80pc,r1,r0\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
".else\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_read16]\n"
"\n"
"	;@ rebase new pc\n"
".if UPDATE_CONTEXT\n"
"     str z80pc,[cpucontext,#z80pc_pointer]\n"
".endif\n"
"	mov lr,pc\n"
"	ldr pc,[cpucontext,#z80_rebasePC] ;@ r0=new pc - external function sets z80pc_base and returns new z80pc in r0\n"
"	ldmfd sp!,{r3,r12}\n"
"	mov z80pc,r0	\n"
".endif\n"
"\n"
"DoInterrupt_end:\n"
"	;@ interupt accepted so callback irq interface\n"
"	ldr r0,[cpucontext, #z80irqcallback]\n"
"	tst r0,r0\n"
"	ldmeqfd sp!,{pc}\n"
"	stmfd sp!,{r3,r12}\n"
"	mov lr,pc\n"
"	mov pc,r0    ;@ call callback function\n"
"	ldmfd sp!,{r3,r12}\n"
"	ldmfd sp!,{pc} ;@ return\n"
"\n"
".endif\n"
"\n"
".data\n"
".align 4\n"
"\n"
"DAATable: .hword  (0x00<<8)|(1<<ZFlag)|(1<<VFlag)\n"
"         .hword  (0x01<<8)                  \n"
"         .hword  (0x02<<8)                  \n"
"         .hword  (0x03<<8)               |(1<<VFlag)\n"
"         .hword  (0x04<<8)                  \n"
"         .hword  (0x05<<8)               |(1<<VFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)\n"
"         .hword  (0x07<<8)                  \n"
"         .hword  (0x08<<8)               \n"
"         .hword  (0x09<<8)            |(1<<VFlag)\n"
"         .hword  (0x10<<8)         |(1<<HFlag)      \n"
"         .hword  (0x11<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x12<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x13<<8)         |(1<<HFlag)      \n"
"         .hword  (0x14<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x15<<8)         |(1<<HFlag)      \n"
"         .hword  (0x10<<8)                  \n"
"         .hword  (0x11<<8)               |(1<<VFlag)\n"
"         .hword  (0x12<<8)               |(1<<VFlag)\n"
"         .hword  (0x13<<8)                  \n"
"         .hword  (0x14<<8)               |(1<<VFlag)\n"
"         .hword  (0x15<<8)                  \n"
"         .hword  (0x16<<8)                  \n"
"         .hword  (0x17<<8)               |(1<<VFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)\n"
"         .hword  (0x19<<8)               \n"
"         .hword  (0x20<<8)      |(1<<HFlag)      \n"
"         .hword  (0x21<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x22<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x23<<8)      |(1<<HFlag)      \n"
"         .hword  (0x24<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x25<<8)      |(1<<HFlag)      \n"
"         .hword  (0x20<<8)               \n"
"         .hword  (0x21<<8)            |(1<<VFlag)\n"
"         .hword  (0x22<<8)            |(1<<VFlag)\n"
"         .hword  (0x23<<8)               \n"
"         .hword  (0x24<<8)            |(1<<VFlag)\n"
"         .hword  (0x25<<8)               \n"
"         .hword  (0x26<<8)               \n"
"         .hword  (0x27<<8)            |(1<<VFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)\n"
"         .hword  (0x29<<8)            \n"
"         .hword  (0x30<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x31<<8)      |(1<<HFlag)      \n"
"         .hword  (0x32<<8)      |(1<<HFlag)      \n"
"         .hword  (0x33<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x34<<8)      |(1<<HFlag)      \n"
"         .hword  (0x35<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x30<<8)            |(1<<VFlag)\n"
"         .hword  (0x31<<8)               \n"
"         .hword  (0x32<<8)               \n"
"         .hword  (0x33<<8)            |(1<<VFlag)\n"
"         .hword  (0x34<<8)               \n"
"         .hword  (0x35<<8)            |(1<<VFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)\n"
"         .hword  (0x37<<8)               \n"
"         .hword  (0x38<<8)            \n"
"         .hword  (0x39<<8)         |(1<<VFlag)\n"
"         .hword  (0x40<<8)         |(1<<HFlag)      \n"
"         .hword  (0x41<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x42<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x43<<8)         |(1<<HFlag)      \n"
"         .hword  (0x44<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x45<<8)         |(1<<HFlag)      \n"
"         .hword  (0x40<<8)                  \n"
"         .hword  (0x41<<8)               |(1<<VFlag)\n"
"         .hword  (0x42<<8)               |(1<<VFlag)\n"
"         .hword  (0x43<<8)                  \n"
"         .hword  (0x44<<8)               |(1<<VFlag)\n"
"         .hword  (0x45<<8)                  \n"
"         .hword  (0x46<<8)                  \n"
"         .hword  (0x47<<8)               |(1<<VFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)\n"
"         .hword  (0x49<<8)               \n"
"         .hword  (0x50<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x51<<8)         |(1<<HFlag)      \n"
"         .hword  (0x52<<8)         |(1<<HFlag)      \n"
"         .hword  (0x53<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x54<<8)         |(1<<HFlag)      \n"
"         .hword  (0x55<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x50<<8)               |(1<<VFlag)\n"
"         .hword  (0x51<<8)                  \n"
"         .hword  (0x52<<8)                  \n"
"         .hword  (0x53<<8)               |(1<<VFlag)\n"
"         .hword  (0x54<<8)                  \n"
"         .hword  (0x55<<8)               |(1<<VFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)\n"
"         .hword  (0x57<<8)                  \n"
"         .hword  (0x58<<8)               \n"
"         .hword  (0x59<<8)            |(1<<VFlag)\n"
"         .hword  (0x60<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x61<<8)      |(1<<HFlag)      \n"
"         .hword  (0x62<<8)      |(1<<HFlag)      \n"
"         .hword  (0x63<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x64<<8)      |(1<<HFlag)      \n"
"         .hword  (0x65<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x60<<8)            |(1<<VFlag)\n"
"         .hword  (0x61<<8)               \n"
"         .hword  (0x62<<8)               \n"
"         .hword  (0x63<<8)            |(1<<VFlag)\n"
"         .hword  (0x64<<8)               \n"
"         .hword  (0x65<<8)            |(1<<VFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)\n"
"         .hword  (0x67<<8)               \n"
"         .hword  (0x68<<8)            \n"
"         .hword  (0x69<<8)         |(1<<VFlag)\n"
"         .hword  (0x70<<8)      |(1<<HFlag)      \n"
"         .hword  (0x71<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x72<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x73<<8)      |(1<<HFlag)      \n"
"         .hword  (0x74<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x75<<8)      |(1<<HFlag)      \n"
"         .hword  (0x70<<8)               \n"
"         .hword  (0x71<<8)            |(1<<VFlag)\n"
"         .hword  (0x72<<8)            |(1<<VFlag)\n"
"         .hword  (0x73<<8)               \n"
"         .hword  (0x74<<8)            |(1<<VFlag)\n"
"         .hword  (0x75<<8)               \n"
"         .hword  (0x76<<8)               \n"
"         .hword  (0x77<<8)            |(1<<VFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)\n"
"         .hword  (0x79<<8)            \n"
"         .hword  (0x80<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x81<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x84<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x80<<8)|(1<<SFlag)               \n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)               \n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)               \n"
"         .hword  (0x86<<8)|(1<<SFlag)               \n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            \n"
"         .hword  (0x90<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x92<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x93<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x95<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)               \n"
"         .hword  (0x92<<8)|(1<<SFlag)               \n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)               \n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               \n"
"         .hword  (0x98<<8)|(1<<SFlag)            \n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x01<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x02<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x03<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x04<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x05<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x01<<8)                     |(1<<CFlag)\n"
"         .hword  (0x02<<8)                     |(1<<CFlag)\n"
"         .hword  (0x03<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x04<<8)                     |(1<<CFlag)\n"
"         .hword  (0x05<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x07<<8)                     |(1<<CFlag)\n"
"         .hword  (0x08<<8)                  |(1<<CFlag)\n"
"         .hword  (0x09<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x10<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x11<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x12<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x13<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x14<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x15<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x10<<8)                     |(1<<CFlag)\n"
"         .hword  (0x11<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x12<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x13<<8)                     |(1<<CFlag)\n"
"         .hword  (0x14<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x15<<8)                     |(1<<CFlag)\n"
"         .hword  (0x16<<8)                     |(1<<CFlag)\n"
"         .hword  (0x17<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x19<<8)                  |(1<<CFlag)\n"
"         .hword  (0x20<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x21<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x22<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x23<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x24<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x25<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x20<<8)                  |(1<<CFlag)\n"
"         .hword  (0x21<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x22<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x23<<8)                  |(1<<CFlag)\n"
"         .hword  (0x24<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x25<<8)                  |(1<<CFlag)\n"
"         .hword  (0x26<<8)                  |(1<<CFlag)\n"
"         .hword  (0x27<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x29<<8)               |(1<<CFlag)\n"
"         .hword  (0x30<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x31<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x32<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x33<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x34<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x35<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x30<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x31<<8)                  |(1<<CFlag)\n"
"         .hword  (0x32<<8)                  |(1<<CFlag)\n"
"         .hword  (0x33<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x34<<8)                  |(1<<CFlag)\n"
"         .hword  (0x35<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x37<<8)                  |(1<<CFlag)\n"
"         .hword  (0x38<<8)               |(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x40<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x41<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x42<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x43<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x44<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x45<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x40<<8)                     |(1<<CFlag)\n"
"         .hword  (0x41<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x42<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x43<<8)                     |(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x45<<8)                     |(1<<CFlag)\n"
"         .hword  (0x46<<8)                     |(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x49<<8)                  |(1<<CFlag)\n"
"         .hword  (0x50<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x51<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x52<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x53<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x54<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x55<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x50<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x51<<8)                     |(1<<CFlag)\n"
"         .hword  (0x52<<8)                     |(1<<CFlag)\n"
"         .hword  (0x53<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x54<<8)                     |(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x57<<8)                     |(1<<CFlag)\n"
"         .hword  (0x58<<8)                  |(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x60<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x61<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x62<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x63<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x64<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x65<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x60<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x61<<8)                  |(1<<CFlag)\n"
"         .hword  (0x62<<8)                  |(1<<CFlag)\n"
"         .hword  (0x63<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x64<<8)                  |(1<<CFlag)\n"
"         .hword  (0x65<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x67<<8)                  |(1<<CFlag)\n"
"         .hword  (0x68<<8)               |(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x70<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x71<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x72<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x73<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x74<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x75<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x70<<8)                  |(1<<CFlag)\n"
"         .hword  (0x71<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x72<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x73<<8)                  |(1<<CFlag)\n"
"         .hword  (0x74<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x75<<8)                  |(1<<CFlag)\n"
"         .hword  (0x76<<8)                  |(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x79<<8)               |(1<<CFlag)\n"
"         .hword  (0x80<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x81<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x80<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x92<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x93<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x92<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA0<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA1<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xA2<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xA3<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA4<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xA5<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA0<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA1<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xA2<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xA3<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA4<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xA5<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA6<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA7<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xA8<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xA9<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB0<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xB1<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB2<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB3<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xB4<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB5<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xB0<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xB1<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB2<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB3<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xB4<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB5<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xB6<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xB7<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB8<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB9<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xC0<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC1<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xC2<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xC3<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC4<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xC5<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC0<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC1<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xC2<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xC3<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC4<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xC5<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC6<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC7<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xC8<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xC9<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD0<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xD1<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD2<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD3<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xD4<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD5<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xD0<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xD1<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD2<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD3<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xD4<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD5<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xD6<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xD7<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD8<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD9<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xE0<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xE1<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE2<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE3<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xE4<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE5<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xE0<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xE1<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE2<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE3<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xE4<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE5<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xE6<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xE7<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE8<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE9<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xF0<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF1<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xF2<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xF3<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF4<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xF5<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF0<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF1<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xF2<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xF3<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF4<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xF5<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF6<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF7<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xF8<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xF9<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x01<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x02<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x03<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x04<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x05<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x01<<8)                     |(1<<CFlag)\n"
"         .hword  (0x02<<8)                     |(1<<CFlag)\n"
"         .hword  (0x03<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x04<<8)                     |(1<<CFlag)\n"
"         .hword  (0x05<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x07<<8)                     |(1<<CFlag)\n"
"         .hword  (0x08<<8)                  |(1<<CFlag)\n"
"         .hword  (0x09<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x10<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x11<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x12<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x13<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x14<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x15<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x10<<8)                     |(1<<CFlag)\n"
"         .hword  (0x11<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x12<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x13<<8)                     |(1<<CFlag)\n"
"         .hword  (0x14<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x15<<8)                     |(1<<CFlag)\n"
"         .hword  (0x16<<8)                     |(1<<CFlag)\n"
"         .hword  (0x17<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x19<<8)                  |(1<<CFlag)\n"
"         .hword  (0x20<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x21<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x22<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x23<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x24<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x25<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x20<<8)                  |(1<<CFlag)\n"
"         .hword  (0x21<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x22<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x23<<8)                  |(1<<CFlag)\n"
"         .hword  (0x24<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x25<<8)                  |(1<<CFlag)\n"
"         .hword  (0x26<<8)                  |(1<<CFlag)\n"
"         .hword  (0x27<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x29<<8)               |(1<<CFlag)\n"
"         .hword  (0x30<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x31<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x32<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x33<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x34<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x35<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x30<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x31<<8)                  |(1<<CFlag)\n"
"         .hword  (0x32<<8)                  |(1<<CFlag)\n"
"         .hword  (0x33<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x34<<8)                  |(1<<CFlag)\n"
"         .hword  (0x35<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x37<<8)                  |(1<<CFlag)\n"
"         .hword  (0x38<<8)               |(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x40<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x41<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x42<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x43<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x44<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x45<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x40<<8)                     |(1<<CFlag)\n"
"         .hword  (0x41<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x42<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x43<<8)                     |(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x45<<8)                     |(1<<CFlag)\n"
"         .hword  (0x46<<8)                     |(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x49<<8)                  |(1<<CFlag)\n"
"         .hword  (0x50<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x51<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x52<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x53<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x54<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x55<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x50<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x51<<8)                     |(1<<CFlag)\n"
"         .hword  (0x52<<8)                     |(1<<CFlag)\n"
"         .hword  (0x53<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x54<<8)                     |(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x57<<8)                     |(1<<CFlag)\n"
"         .hword  (0x58<<8)                  |(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x60<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x61<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x62<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x63<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x64<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x65<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)\n"
"         .hword  (0x07<<8)                  \n"
"         .hword  (0x08<<8)               \n"
"         .hword  (0x09<<8)            |(1<<VFlag)\n"
"         .hword  (0x0A<<8)            |(1<<VFlag)\n"
"         .hword  (0x0B<<8)               \n"
"         .hword  (0x0C<<8)            |(1<<VFlag)\n"
"         .hword  (0x0D<<8)               \n"
"         .hword  (0x0E<<8)               \n"
"         .hword  (0x0F<<8)            |(1<<VFlag)\n"
"         .hword  (0x10<<8)         |(1<<HFlag)      \n"
"         .hword  (0x11<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x12<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x13<<8)         |(1<<HFlag)      \n"
"         .hword  (0x14<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x15<<8)         |(1<<HFlag)      \n"
"         .hword  (0x16<<8)                  \n"
"         .hword  (0x17<<8)               |(1<<VFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)\n"
"         .hword  (0x19<<8)               \n"
"         .hword  (0x1A<<8)               \n"
"         .hword  (0x1B<<8)            |(1<<VFlag)\n"
"         .hword  (0x1C<<8)               \n"
"         .hword  (0x1D<<8)            |(1<<VFlag)\n"
"         .hword  (0x1E<<8)            |(1<<VFlag)\n"
"         .hword  (0x1F<<8)               \n"
"         .hword  (0x20<<8)      |(1<<HFlag)      \n"
"         .hword  (0x21<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x22<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x23<<8)      |(1<<HFlag)      \n"
"         .hword  (0x24<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x25<<8)      |(1<<HFlag)      \n"
"         .hword  (0x26<<8)               \n"
"         .hword  (0x27<<8)            |(1<<VFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)\n"
"         .hword  (0x29<<8)            \n"
"         .hword  (0x2A<<8)            \n"
"         .hword  (0x2B<<8)         |(1<<VFlag)\n"
"         .hword  (0x2C<<8)            \n"
"         .hword  (0x2D<<8)         |(1<<VFlag)\n"
"         .hword  (0x2E<<8)         |(1<<VFlag)\n"
"         .hword  (0x2F<<8)            \n"
"         .hword  (0x30<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x31<<8)      |(1<<HFlag)      \n"
"         .hword  (0x32<<8)      |(1<<HFlag)      \n"
"         .hword  (0x33<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x34<<8)      |(1<<HFlag)      \n"
"         .hword  (0x35<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)\n"
"         .hword  (0x37<<8)               \n"
"         .hword  (0x38<<8)            \n"
"         .hword  (0x39<<8)         |(1<<VFlag)\n"
"         .hword  (0x3A<<8)         |(1<<VFlag)\n"
"         .hword  (0x3B<<8)            \n"
"         .hword  (0x3C<<8)         |(1<<VFlag)\n"
"         .hword  (0x3D<<8)            \n"
"         .hword  (0x3E<<8)            \n"
"         .hword  (0x3F<<8)         |(1<<VFlag)\n"
"         .hword  (0x40<<8)         |(1<<HFlag)      \n"
"         .hword  (0x41<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x42<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x43<<8)         |(1<<HFlag)      \n"
"         .hword  (0x44<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x45<<8)         |(1<<HFlag)      \n"
"         .hword  (0x46<<8)                  \n"
"         .hword  (0x47<<8)               |(1<<VFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)\n"
"         .hword  (0x49<<8)               \n"
"         .hword  (0x4A<<8)               \n"
"         .hword  (0x4B<<8)            |(1<<VFlag)\n"
"         .hword  (0x4C<<8)               \n"
"         .hword  (0x4D<<8)            |(1<<VFlag)\n"
"         .hword  (0x4E<<8)            |(1<<VFlag)\n"
"         .hword  (0x4F<<8)               \n"
"         .hword  (0x50<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x51<<8)         |(1<<HFlag)      \n"
"         .hword  (0x52<<8)         |(1<<HFlag)      \n"
"         .hword  (0x53<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x54<<8)         |(1<<HFlag)      \n"
"         .hword  (0x55<<8)         |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)\n"
"         .hword  (0x57<<8)                  \n"
"         .hword  (0x58<<8)               \n"
"         .hword  (0x59<<8)            |(1<<VFlag)\n"
"         .hword  (0x5A<<8)            |(1<<VFlag)\n"
"         .hword  (0x5B<<8)               \n"
"         .hword  (0x5C<<8)            |(1<<VFlag)\n"
"         .hword  (0x5D<<8)               \n"
"         .hword  (0x5E<<8)               \n"
"         .hword  (0x5F<<8)            |(1<<VFlag)\n"
"         .hword  (0x60<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x61<<8)      |(1<<HFlag)      \n"
"         .hword  (0x62<<8)      |(1<<HFlag)      \n"
"         .hword  (0x63<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x64<<8)      |(1<<HFlag)      \n"
"         .hword  (0x65<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)\n"
"         .hword  (0x67<<8)               \n"
"         .hword  (0x68<<8)            \n"
"         .hword  (0x69<<8)         |(1<<VFlag)\n"
"         .hword  (0x6A<<8)         |(1<<VFlag)\n"
"         .hword  (0x6B<<8)            \n"
"         .hword  (0x6C<<8)         |(1<<VFlag)\n"
"         .hword  (0x6D<<8)            \n"
"         .hword  (0x6E<<8)            \n"
"         .hword  (0x6F<<8)         |(1<<VFlag)\n"
"         .hword  (0x70<<8)      |(1<<HFlag)      \n"
"         .hword  (0x71<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x72<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x73<<8)      |(1<<HFlag)      \n"
"         .hword  (0x74<<8)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x75<<8)      |(1<<HFlag)      \n"
"         .hword  (0x76<<8)               \n"
"         .hword  (0x77<<8)            |(1<<VFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)\n"
"         .hword  (0x79<<8)            \n"
"         .hword  (0x7A<<8)            \n"
"         .hword  (0x7B<<8)         |(1<<VFlag)\n"
"         .hword  (0x7C<<8)            \n"
"         .hword  (0x7D<<8)         |(1<<VFlag)\n"
"         .hword  (0x7E<<8)         |(1<<VFlag)\n"
"         .hword  (0x7F<<8)            \n"
"         .hword  (0x80<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x81<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x84<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x86<<8)|(1<<SFlag)               \n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            \n"
"         .hword  (0x8A<<8)|(1<<SFlag)            \n"
"         .hword  (0x8B<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x8C<<8)|(1<<SFlag)            \n"
"         .hword  (0x8D<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x8E<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x8F<<8)|(1<<SFlag)            \n"
"         .hword  (0x90<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x92<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x93<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)      |(1<<HFlag)      \n"
"         .hword  (0x95<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               \n"
"         .hword  (0x98<<8)|(1<<SFlag)            \n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x9A<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x9B<<8)|(1<<SFlag)            \n"
"         .hword  (0x9C<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x9D<<8)|(1<<SFlag)            \n"
"         .hword  (0x9E<<8)|(1<<SFlag)            \n"
"         .hword  (0x9F<<8)|(1<<SFlag)         |(1<<VFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x01<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x02<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x03<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x04<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x05<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x07<<8)                     |(1<<CFlag)\n"
"         .hword  (0x08<<8)                  |(1<<CFlag)\n"
"         .hword  (0x09<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x0A<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x0B<<8)                  |(1<<CFlag)\n"
"         .hword  (0x0C<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x0D<<8)                  |(1<<CFlag)\n"
"         .hword  (0x0E<<8)                  |(1<<CFlag)\n"
"         .hword  (0x0F<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x10<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x11<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x12<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x13<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x14<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x15<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x16<<8)                     |(1<<CFlag)\n"
"         .hword  (0x17<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x19<<8)                  |(1<<CFlag)\n"
"         .hword  (0x1A<<8)                  |(1<<CFlag)\n"
"         .hword  (0x1B<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x1C<<8)                  |(1<<CFlag)\n"
"         .hword  (0x1D<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x1E<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x1F<<8)                  |(1<<CFlag)\n"
"         .hword  (0x20<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x21<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x22<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x23<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x24<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x25<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x26<<8)                  |(1<<CFlag)\n"
"         .hword  (0x27<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x29<<8)               |(1<<CFlag)\n"
"         .hword  (0x2A<<8)               |(1<<CFlag)\n"
"         .hword  (0x2B<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x2C<<8)               |(1<<CFlag)\n"
"         .hword  (0x2D<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x2E<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x2F<<8)               |(1<<CFlag)\n"
"         .hword  (0x30<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x31<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x32<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x33<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x34<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x35<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x37<<8)                  |(1<<CFlag)\n"
"         .hword  (0x38<<8)               |(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x3A<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x3B<<8)               |(1<<CFlag)\n"
"         .hword  (0x3C<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x3D<<8)               |(1<<CFlag)\n"
"         .hword  (0x3E<<8)               |(1<<CFlag)\n"
"         .hword  (0x3F<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x40<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x41<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x42<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x43<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x44<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x45<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x46<<8)                     |(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x49<<8)                  |(1<<CFlag)\n"
"         .hword  (0x4A<<8)                  |(1<<CFlag)\n"
"         .hword  (0x4B<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x4C<<8)                  |(1<<CFlag)\n"
"         .hword  (0x4D<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x4E<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x4F<<8)                  |(1<<CFlag)\n"
"         .hword  (0x50<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x51<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x52<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x53<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x54<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x55<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x57<<8)                     |(1<<CFlag)\n"
"         .hword  (0x58<<8)                  |(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x5A<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x5B<<8)                  |(1<<CFlag)\n"
"         .hword  (0x5C<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x5D<<8)                  |(1<<CFlag)\n"
"         .hword  (0x5E<<8)                  |(1<<CFlag)\n"
"         .hword  (0x5F<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x60<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x61<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x62<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x63<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x64<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x65<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x67<<8)                  |(1<<CFlag)\n"
"         .hword  (0x68<<8)               |(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x6A<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x6B<<8)               |(1<<CFlag)\n"
"         .hword  (0x6C<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x6D<<8)               |(1<<CFlag)\n"
"         .hword  (0x6E<<8)               |(1<<CFlag)\n"
"         .hword  (0x6F<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x70<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x71<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x72<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x73<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x74<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x75<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x76<<8)                  |(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x79<<8)               |(1<<CFlag)\n"
"         .hword  (0x7A<<8)               |(1<<CFlag)\n"
"         .hword  (0x7B<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x7C<<8)               |(1<<CFlag)\n"
"         .hword  (0x7D<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x7E<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x7F<<8)               |(1<<CFlag)\n"
"         .hword  (0x80<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x81<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x8A<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x8B<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x8C<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x8D<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x8E<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x8F<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x92<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x93<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x9A<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x9B<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x9C<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x9D<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x9E<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0x9F<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA0<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA1<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xA2<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xA3<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA4<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xA5<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA6<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xA7<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xA8<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xA9<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xAA<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xAB<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xAC<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xAD<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xAE<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xAF<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB0<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xB1<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB2<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB3<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xB4<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB5<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xB6<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xB7<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB8<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xB9<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xBA<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xBB<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xBC<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xBD<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xBE<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xBF<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xC0<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC1<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xC2<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xC3<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC4<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xC5<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC6<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xC7<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xC8<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xC9<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xCA<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xCB<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xCC<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xCD<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xCE<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xCF<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD0<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xD1<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD2<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD3<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xD4<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD5<<8)|(1<<SFlag)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xD6<<8)|(1<<SFlag)                  |(1<<CFlag)\n"
"         .hword  (0xD7<<8)|(1<<SFlag)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD8<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xD9<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xDA<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xDB<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xDC<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xDD<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xDE<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xDF<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xE0<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xE1<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE2<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE3<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xE4<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE5<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xE6<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xE7<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE8<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xE9<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xEA<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xEB<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xEC<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xED<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xEE<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xEF<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xF0<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF1<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xF2<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xF3<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF4<<8)|(1<<SFlag)   |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0xF5<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF6<<8)|(1<<SFlag)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xF7<<8)|(1<<SFlag)               |(1<<CFlag)\n"
"         .hword  (0xF8<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xF9<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xFA<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xFB<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xFC<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0xFD<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xFE<<8)|(1<<SFlag)            |(1<<CFlag)\n"
"         .hword  (0xFF<<8)|(1<<SFlag)      |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)   |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x01<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x02<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x03<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x04<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x05<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x07<<8)                     |(1<<CFlag)\n"
"         .hword  (0x08<<8)                  |(1<<CFlag)\n"
"         .hword  (0x09<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x0A<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x0B<<8)                  |(1<<CFlag)\n"
"         .hword  (0x0C<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x0D<<8)                  |(1<<CFlag)\n"
"         .hword  (0x0E<<8)                  |(1<<CFlag)\n"
"         .hword  (0x0F<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x10<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x11<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x12<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x13<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x14<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x15<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x16<<8)                     |(1<<CFlag)\n"
"         .hword  (0x17<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x19<<8)                  |(1<<CFlag)\n"
"         .hword  (0x1A<<8)                  |(1<<CFlag)\n"
"         .hword  (0x1B<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x1C<<8)                  |(1<<CFlag)\n"
"         .hword  (0x1D<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x1E<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x1F<<8)                  |(1<<CFlag)\n"
"         .hword  (0x20<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x21<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x22<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x23<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x24<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x25<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x26<<8)                  |(1<<CFlag)\n"
"         .hword  (0x27<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x29<<8)               |(1<<CFlag)\n"
"         .hword  (0x2A<<8)               |(1<<CFlag)\n"
"         .hword  (0x2B<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x2C<<8)               |(1<<CFlag)\n"
"         .hword  (0x2D<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x2E<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x2F<<8)               |(1<<CFlag)\n"
"         .hword  (0x30<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x31<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x32<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x33<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x34<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x35<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x37<<8)                  |(1<<CFlag)\n"
"         .hword  (0x38<<8)               |(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x3A<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x3B<<8)               |(1<<CFlag)\n"
"         .hword  (0x3C<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x3D<<8)               |(1<<CFlag)\n"
"         .hword  (0x3E<<8)               |(1<<CFlag)\n"
"         .hword  (0x3F<<8)         |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x40<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x41<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x42<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x43<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x44<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x45<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x46<<8)                     |(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x49<<8)                  |(1<<CFlag)\n"
"         .hword  (0x4A<<8)                  |(1<<CFlag)\n"
"         .hword  (0x4B<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x4C<<8)                  |(1<<CFlag)\n"
"         .hword  (0x4D<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x4E<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x4F<<8)                  |(1<<CFlag)\n"
"         .hword  (0x50<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x51<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x52<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x53<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x54<<8)         |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x55<<8)         |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x57<<8)                     |(1<<CFlag)\n"
"         .hword  (0x58<<8)                  |(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x5A<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x5B<<8)                  |(1<<CFlag)\n"
"         .hword  (0x5C<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x5D<<8)                  |(1<<CFlag)\n"
"         .hword  (0x5E<<8)                  |(1<<CFlag)\n"
"         .hword  (0x5F<<8)            |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x60<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x61<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x62<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x63<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x64<<8)      |(1<<HFlag)         |(1<<CFlag)\n"
"         .hword  (0x65<<8)      |(1<<HFlag)   |(1<<VFlag)   |(1<<CFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x01<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x02<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x03<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x04<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x05<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x06<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x07<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x08<<8)               |(1<<NFlag)   \n"
"         .hword  (0x09<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x04<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x05<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x06<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x07<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x08<<8)               |(1<<NFlag)   \n"
"         .hword  (0x09<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x10<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x11<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x12<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x13<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x14<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x15<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x16<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x17<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x18<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x19<<8)               |(1<<NFlag)   \n"
"         .hword  (0x14<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x15<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x16<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x17<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x18<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x19<<8)               |(1<<NFlag)   \n"
"         .hword  (0x20<<8)               |(1<<NFlag)   \n"
"         .hword  (0x21<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x22<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x23<<8)               |(1<<NFlag)   \n"
"         .hword  (0x24<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x25<<8)               |(1<<NFlag)   \n"
"         .hword  (0x26<<8)               |(1<<NFlag)   \n"
"         .hword  (0x27<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x28<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x29<<8)            |(1<<NFlag)   \n"
"         .hword  (0x24<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x25<<8)               |(1<<NFlag)   \n"
"         .hword  (0x26<<8)               |(1<<NFlag)   \n"
"         .hword  (0x27<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x28<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x29<<8)            |(1<<NFlag)   \n"
"         .hword  (0x30<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x31<<8)               |(1<<NFlag)   \n"
"         .hword  (0x32<<8)               |(1<<NFlag)   \n"
"         .hword  (0x33<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x34<<8)               |(1<<NFlag)   \n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x37<<8)               |(1<<NFlag)   \n"
"         .hword  (0x38<<8)            |(1<<NFlag)   \n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x34<<8)               |(1<<NFlag)   \n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x37<<8)               |(1<<NFlag)   \n"
"         .hword  (0x38<<8)            |(1<<NFlag)   \n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x40<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x41<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x42<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x43<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x45<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x46<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x49<<8)               |(1<<NFlag)   \n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x45<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x46<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x49<<8)               |(1<<NFlag)   \n"
"         .hword  (0x50<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x51<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x52<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x53<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x54<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x57<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x58<<8)               |(1<<NFlag)   \n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x54<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x57<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x58<<8)               |(1<<NFlag)   \n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x60<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x61<<8)               |(1<<NFlag)   \n"
"         .hword  (0x62<<8)               |(1<<NFlag)   \n"
"         .hword  (0x63<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x64<<8)               |(1<<NFlag)   \n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x67<<8)               |(1<<NFlag)   \n"
"         .hword  (0x68<<8)            |(1<<NFlag)   \n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x64<<8)               |(1<<NFlag)   \n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x67<<8)               |(1<<NFlag)   \n"
"         .hword  (0x68<<8)            |(1<<NFlag)   \n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x70<<8)               |(1<<NFlag)   \n"
"         .hword  (0x71<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x72<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x73<<8)               |(1<<NFlag)   \n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x75<<8)               |(1<<NFlag)   \n"
"         .hword  (0x76<<8)               |(1<<NFlag)   \n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x79<<8)            |(1<<NFlag)   \n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x75<<8)               |(1<<NFlag)   \n"
"         .hword  (0x76<<8)               |(1<<NFlag)   \n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x79<<8)            |(1<<NFlag)   \n"
"         .hword  (0x80<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x83<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)   \n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)   \n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x91<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x92<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x94<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x97<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x98<<8)|(1<<SFlag)            |(1<<NFlag)   \n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x34<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x37<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x38<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x40<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x41<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x42<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x43<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x45<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x46<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x49<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x45<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x46<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x49<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x50<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x51<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x52<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x53<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x54<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x57<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x58<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x54<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x57<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x58<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x60<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x61<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x62<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x63<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x64<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x67<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x68<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x64<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x67<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x68<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x70<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x71<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x72<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x73<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x75<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x76<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x79<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x75<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x76<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x79<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x80<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x92<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA0<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA1<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA2<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA3<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA4<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA5<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA6<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA7<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA8<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA9<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA4<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA5<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA6<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA7<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA8<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA9<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB0<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB1<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB2<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB3<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB4<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB5<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB6<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB7<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB8<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB9<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB4<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB5<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB6<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB7<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB8<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB9<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC0<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC1<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC2<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC3<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC4<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC5<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC6<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC7<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC8<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC9<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC4<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC5<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC6<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC7<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC8<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC9<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD0<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD1<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD2<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD3<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD4<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD5<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD6<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD7<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD8<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD9<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD4<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD5<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD6<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD7<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD8<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD9<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE0<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE1<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE2<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE3<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE4<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE5<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE6<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE7<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE8<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE9<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE4<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE5<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE6<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE7<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE8<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE9<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF0<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF1<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF2<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF3<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF4<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF5<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF6<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF7<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF8<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF9<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF4<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF5<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF6<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF7<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF8<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF9<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x01<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x02<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x03<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x04<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x05<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x07<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x08<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x09<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x04<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x05<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x07<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x08<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x09<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x10<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x11<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x12<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x13<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x14<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x15<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x16<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x17<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x19<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x14<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x15<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x16<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x17<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x19<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x20<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x21<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x22<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x23<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x24<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x25<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x26<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x27<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x29<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x24<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x25<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x26<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x27<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x29<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x30<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x31<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x32<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x33<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x34<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x37<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x38<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x34<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x37<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x38<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x40<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x41<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x42<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x43<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x45<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x46<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x49<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x45<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x46<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x49<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x50<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x51<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x52<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x53<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x54<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x57<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x58<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x54<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x57<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x58<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x60<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x61<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x62<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x63<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x64<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x67<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x68<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x64<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x67<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x68<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x70<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x71<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x72<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x73<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x75<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x76<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x79<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x75<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x76<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x79<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x80<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x92<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xFA<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0xFB<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0xFC<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0xFD<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0xFE<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0xFF<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x00<<8)   |(1<<ZFlag)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x01<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x02<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x03<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x04<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x05<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x06<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x07<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x08<<8)               |(1<<NFlag)   \n"
"         .hword  (0x09<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x0A<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x0B<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x0C<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x0D<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x0E<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x0F<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x10<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x11<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x12<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x13<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x14<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x15<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x16<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x17<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x18<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x19<<8)               |(1<<NFlag)   \n"
"         .hword  (0x1A<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x1B<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x1C<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x1D<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x1E<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x1F<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x20<<8)               |(1<<NFlag)   \n"
"         .hword  (0x21<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x22<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x23<<8)               |(1<<NFlag)   \n"
"         .hword  (0x24<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x25<<8)               |(1<<NFlag)   \n"
"         .hword  (0x26<<8)               |(1<<NFlag)   \n"
"         .hword  (0x27<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x28<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x29<<8)            |(1<<NFlag)   \n"
"         .hword  (0x2A<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x2B<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x2C<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x2D<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x2E<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x2F<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x30<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x31<<8)               |(1<<NFlag)   \n"
"         .hword  (0x32<<8)               |(1<<NFlag)   \n"
"         .hword  (0x33<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x34<<8)               |(1<<NFlag)   \n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x37<<8)               |(1<<NFlag)   \n"
"         .hword  (0x38<<8)            |(1<<NFlag)   \n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x3A<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x3B<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x3C<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x3D<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x3E<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x3F<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x40<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x41<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x42<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x43<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x45<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x46<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x49<<8)               |(1<<NFlag)   \n"
"         .hword  (0x4A<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x4B<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x4C<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x4D<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x4E<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x4F<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x50<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x51<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x52<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x53<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x54<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x57<<8)                  |(1<<NFlag)   \n"
"         .hword  (0x58<<8)               |(1<<NFlag)   \n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x5A<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x5B<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x5C<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x5D<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x5E<<8)         |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x5F<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x60<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x61<<8)               |(1<<NFlag)   \n"
"         .hword  (0x62<<8)               |(1<<NFlag)   \n"
"         .hword  (0x63<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x64<<8)               |(1<<NFlag)   \n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x67<<8)               |(1<<NFlag)   \n"
"         .hword  (0x68<<8)            |(1<<NFlag)   \n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x6A<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x6B<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x6C<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x6D<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x6E<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x6F<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x70<<8)               |(1<<NFlag)   \n"
"         .hword  (0x71<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x72<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x73<<8)               |(1<<NFlag)   \n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x75<<8)               |(1<<NFlag)   \n"
"         .hword  (0x76<<8)               |(1<<NFlag)   \n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x79<<8)            |(1<<NFlag)   \n"
"         .hword  (0x7A<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x7B<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x7C<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x7D<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x7E<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x7F<<8)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x80<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x83<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)   \n"
"         .hword  (0x8A<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x8B<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x8C<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x8D<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x8E<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x8F<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)   \n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x91<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x92<<8)|(1<<SFlag)               |(1<<NFlag)   \n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)   \n"
"         .hword  (0x34<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x37<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x38<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3A<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3B<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3C<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3D<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3E<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3F<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x40<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x41<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x42<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x43<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x45<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x46<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x49<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4A<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4B<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4C<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4D<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4E<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4F<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x50<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x51<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x52<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x53<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x54<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x57<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x58<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5A<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5B<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5C<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5D<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5E<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5F<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x60<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x61<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x62<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x63<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x64<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x67<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x68<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6A<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6B<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6C<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6D<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6E<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6F<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x70<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x71<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x72<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x73<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x75<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x76<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x79<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7A<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7B<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7C<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7D<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7E<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7F<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x80<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8A<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8B<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8C<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8D<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8E<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8F<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x92<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x9A<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x9B<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x9C<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x9D<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x9E<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x9F<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA0<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA1<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA2<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA3<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA4<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA5<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA6<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA7<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA8<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xA9<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xAA<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xAB<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xAC<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xAD<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xAE<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xAF<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB0<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB1<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB2<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB3<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB4<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB5<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB6<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB7<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB8<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xB9<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xBA<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xBB<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xBC<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xBD<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xBE<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xBF<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC0<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC1<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC2<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC3<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC4<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC5<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC6<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC7<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC8<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xC9<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xCA<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xCB<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xCC<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xCD<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xCE<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xCF<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD0<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD1<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD2<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD3<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD4<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD5<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD6<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD7<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD8<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xD9<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xDA<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xDB<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xDC<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xDD<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xDE<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xDF<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE0<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE1<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE2<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE3<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE4<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE5<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE6<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE7<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE8<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xE9<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xEA<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xEB<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xEC<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xED<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xEE<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xEF<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF0<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF1<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF2<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF3<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF4<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF5<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF6<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF7<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF8<<8)|(1<<SFlag)         |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xF9<<8)|(1<<SFlag)      |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xFA<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xFB<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xFC<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xFD<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xFE<<8)|(1<<SFlag)   |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0xFF<<8)|(1<<SFlag)   |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x00<<8)   |(1<<ZFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x01<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x02<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x03<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x04<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x05<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x06<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x07<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x08<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x09<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x0A<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x0B<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x0C<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x0D<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x0E<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x0F<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x10<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x11<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x12<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x13<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x14<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x15<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x16<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x17<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x18<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x19<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x1A<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x1B<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x1C<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x1D<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x1E<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x1F<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x20<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x21<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x22<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x23<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x24<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x25<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x26<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x27<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x28<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x29<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x2A<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x2B<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x2C<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x2D<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x2E<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x2F<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x30<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x31<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x32<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x33<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x34<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x35<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x36<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x37<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x38<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x39<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3A<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3B<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3C<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3D<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3E<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x3F<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x40<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x41<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x42<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x43<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x44<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x45<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x46<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x47<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x48<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x49<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4A<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4B<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4C<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4D<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4E<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x4F<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x50<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x51<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x52<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x53<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x54<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x55<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x56<<8)               |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x57<<8)                  |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x58<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x59<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5A<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5B<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5C<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5D<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5E<<8)         |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x5F<<8)         |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x60<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x61<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x62<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x63<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x64<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x65<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x66<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x67<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x68<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x69<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6A<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6B<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6C<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6D<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6E<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x6F<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x70<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x71<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x72<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x73<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x74<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x75<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x76<<8)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x77<<8)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x78<<8)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x79<<8)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7A<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7B<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7C<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7D<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7E<<8)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x7F<<8)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x80<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x81<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x82<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x83<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x84<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x85<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x86<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x87<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x88<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x89<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8A<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8B<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8C<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8D<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8E<<8)|(1<<SFlag)      |(1<<HFlag)|(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x8F<<8)|(1<<SFlag)      |(1<<HFlag)   |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x90<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x91<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x92<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x93<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x94<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x95<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x96<<8)|(1<<SFlag)            |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x97<<8)|(1<<SFlag)               |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x98<<8)|(1<<SFlag)            |(1<<NFlag)|(1<<CFlag)\n"
"         .hword  (0x99<<8)|(1<<SFlag)         |(1<<VFlag)|(1<<NFlag)|(1<<CFlag)\n"
"         \n"
".align 4\n"
"\n"
"AF_Z80:  .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 0\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 1\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 2\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 3\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 4\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 5\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 6\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 7\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 8\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 9\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 10\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 11\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 12\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 13\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 14\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 15\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 16\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 17\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 18\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 19\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 20\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 21\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 22\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 23\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 24\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 25\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 26\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 27\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 28\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 29\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 30\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 31\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 32\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 33\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 34\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 35\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 36\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 37\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 38\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 39\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 40\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 41\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 42\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 43\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 44\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 45\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 46\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 47\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 48\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 49\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 50\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 51\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 52\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 53\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 54\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 55\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 56\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 57\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 58\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 59\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 60\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 61\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 62\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 63\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 64\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 65\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 66\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 67\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 68\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 69\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 70\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 71\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 72\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 73\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 74\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 75\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 76\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 77\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 78\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 79\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 80\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 81\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 82\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 83\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 84\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 85\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 86\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 87\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 88\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 89\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 90\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 91\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 92\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 93\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 94\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 95\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 96\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 97\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 98\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 99\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 100\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 101\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 102\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 103\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 104\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 105\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 106\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 107\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 108\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 109\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 110\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 111\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 112\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 113\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 114\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 115\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 116\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 117\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 118\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 119\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 120\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 121\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 122\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 123\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 124\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 125\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 126\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 127\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 128\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 129\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 130\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 131\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 132\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 133\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 134\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 135\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 136\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 137\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 138\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 139\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 140\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 141\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 142\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 143\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 144\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 145\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 146\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 147\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 148\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 149\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 150\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 151\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 152\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 153\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 154\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 155\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 156\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 157\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 158\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 159\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 160\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 161\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 162\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 163\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 164\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 165\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 166\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 167\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 168\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 169\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 170\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 171\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 172\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 173\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 174\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 175\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 176\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 177\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 178\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 179\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 180\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 181\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 182\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 183\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 184\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 185\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 186\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 187\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 188\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 189\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 190\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 191\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 192\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 193\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 194\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 195\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 196\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 197\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 198\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 199\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 200\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 201\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 202\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 203\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 204\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 205\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 206\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 207\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 208\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 209\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 210\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 211\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 212\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 213\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 214\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 215\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 216\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 217\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 218\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 219\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 220\n"
"         .byte (0<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 221\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 222\n"
"         .byte (1<<Z80_CFlag)|(0<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 223\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 224\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 225\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 226\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 227\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 228\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 229\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 230\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 231\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 232\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 233\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 234\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 235\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 236\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 237\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 238\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(0<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 239\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 240\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 241\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 242\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 243\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 244\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 245\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 246\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(0<<Z80_SFlag) ;@ 247\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 248\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 249\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 250\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(0<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 251\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 252\n"
"         .byte (0<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 253\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(0<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 254\n"
"         .byte (1<<Z80_CFlag)|(1<<Z80_NFlag)|(1<<Z80_VFlag)|(1<<Z80_HFlag)|(1<<Z80_ZFlag)|(1<<Z80_SFlag) ;@ 255\n"
"\n"
".align 4\n"
"\n"
"AF_ARM:  .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 0\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 1\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 2\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 3\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 4\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 5\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 6\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 7\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 8\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 9\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 10\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 11\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 12\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 13\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 14\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 15\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 16\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 17\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 18\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 19\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 20\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 21\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 22\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 23\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 24\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 25\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 26\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 27\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 28\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 29\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 30\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 31\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 32\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 33\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 34\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 35\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 36\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 37\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 38\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 39\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 40\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 41\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 42\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 43\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 44\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 45\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 46\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 47\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 48\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 49\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 50\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 51\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 52\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 53\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 54\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 55\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 56\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 57\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 58\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 59\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 60\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 61\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 62\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(0<<SFlag)  ;@ 63\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 64\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 65\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 66\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 67\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 68\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 69\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 70\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 71\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 72\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 73\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 74\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 75\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 76\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 77\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 78\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 79\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 80\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 81\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 82\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 83\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 84\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 85\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 86\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 87\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 88\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 89\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 90\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 91\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 92\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 93\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 94\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 95\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 96\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 97\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 98\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 99\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 100\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 101\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 102\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 103\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 104\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 105\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 106\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 107\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 108\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 109\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 110\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 111\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 112\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 113\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 114\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 115\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 116\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 117\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 118\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 119\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 120\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 121\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 122\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 123\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 124\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 125\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 126\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(0<<SFlag)  ;@ 127\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 128\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 129\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 130\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 131\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 132\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 133\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 134\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 135\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 136\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 137\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 138\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 139\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 140\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 141\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 142\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 143\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 144\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 145\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 146\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 147\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 148\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 149\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 150\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 151\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 152\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 153\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 154\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 155\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 156\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 157\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 158\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 159\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 160\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 161\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 162\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 163\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 164\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 165\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 166\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 167\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 168\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 169\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 170\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 171\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 172\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 173\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 174\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 175\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 176\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 177\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 178\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 179\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 180\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 181\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 182\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 183\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 184\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 185\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 186\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 187\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 188\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 189\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 190\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(0<<ZFlag)|(1<<SFlag)  ;@ 191\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 192\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 193\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 194\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 195\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 196\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 197\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 198\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 199\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 200\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 201\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 202\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 203\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 204\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 205\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 206\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 207\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 208\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 209\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 210\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 211\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 212\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 213\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 214\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 215\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 216\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 217\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 218\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 219\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 220\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 221\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 222\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 223\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 224\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 225\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 226\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 227\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 228\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 229\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 230\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 231\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 232\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 233\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 234\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 235\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 236\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 237\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 238\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(0<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 239\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 240\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 241\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 242\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 243\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 244\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 245\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 246\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 247\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 248\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 249\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 250\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(0<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 251\n"
"         .byte (0<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 252\n"
"         .byte (1<<CFlag)|(0<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 253\n"
"         .byte (0<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 254\n"
"         .byte (1<<CFlag)|(1<<NFlag)|(1<<VFlag)|(1<<HFlag)|(1<<ZFlag)|(1<<SFlag)  ;@ 255\n"
"\n"
".align 4\n"
"\n"
"PZSTable_data: .byte (1<<ZFlag)|(1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0\n"
"	.byte  0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag)\n"
"	.byte  0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag),(1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0\n"
"	.byte  0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag),(1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0\n"
"	.byte  (1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0,0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag)\n"
"	.byte  0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag),(1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0\n"
"	.byte  (1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0,0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag)\n"
"	.byte  (1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0,0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag)\n"
"	.byte  0,(1<<VFlag),(1<<VFlag),0,(1<<VFlag),0,0,(1<<VFlag),(1<<VFlag),0,0,(1<<VFlag),0,(1<<VFlag),(1<<VFlag),0\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)|(1<<VFlag),(1<<SFlag)\n"
"	.byte  (1<<SFlag)|(1<<VFlag),(1<<SFlag),(1<<SFlag),(1<<SFlag)|(1<<VFlag)       \n"
"\n"
".align 4\n"
"\n"
"MAIN_opcodes:	\n"
"	.word opcode_0_0,opcode_0_1,opcode_0_2,opcode_0_3,opcode_0_4,opcode_0_5,opcode_0_6,opcode_0_7\n"
"	.word opcode_0_8,opcode_0_9,opcode_0_A,opcode_0_B,opcode_0_C,opcode_0_D,opcode_0_E,opcode_0_F\n"
"	.word opcode_1_0,opcode_1_1,opcode_1_2,opcode_1_3,opcode_1_4,opcode_1_5,opcode_1_6,opcode_1_7\n"
"	.word opcode_1_8,opcode_1_9,opcode_1_A,opcode_1_B,opcode_1_C,opcode_1_D,opcode_1_E,opcode_1_F\n"
"	.word opcode_2_0,opcode_2_1,opcode_2_2,opcode_2_3,opcode_2_4,opcode_2_5,opcode_2_6,opcode_2_7\n"
"	.word opcode_2_8,opcode_2_9,opcode_2_A,opcode_2_B,opcode_2_C,opcode_2_D,opcode_2_E,opcode_2_F\n"
"	.word opcode_3_0,opcode_3_1,opcode_3_2,opcode_3_3,opcode_3_4,opcode_3_5,opcode_3_6,opcode_3_7\n"
"	.word opcode_3_8,opcode_3_9,opcode_3_A,opcode_3_B,opcode_3_C,opcode_3_D,opcode_3_E,opcode_3_F\n"
"	.word opcode_4_0,opcode_4_1,opcode_4_2,opcode_4_3,opcode_4_4,opcode_4_5,opcode_4_6,opcode_4_7\n"
"	.word opcode_4_8,opcode_4_9,opcode_4_A,opcode_4_B,opcode_4_C,opcode_4_D,opcode_4_E,opcode_4_F\n"
"	.word opcode_5_0,opcode_5_1,opcode_5_2,opcode_5_3,opcode_5_4,opcode_5_5,opcode_5_6,opcode_5_7\n"
"	.word opcode_5_8,opcode_5_9,opcode_5_A,opcode_5_B,opcode_5_C,opcode_5_D,opcode_5_E,opcode_5_F\n"
"	.word opcode_6_0,opcode_6_1,opcode_6_2,opcode_6_3,opcode_6_4,opcode_6_5,opcode_6_6,opcode_6_7\n"
"	.word opcode_6_8,opcode_6_9,opcode_6_A,opcode_6_B,opcode_6_C,opcode_6_D,opcode_6_E,opcode_6_F\n"
"	.word opcode_7_0,opcode_7_1,opcode_7_2,opcode_7_3,opcode_7_4,opcode_7_5,opcode_7_6,opcode_7_7\n"
"	.word opcode_7_8,opcode_7_9,opcode_7_A,opcode_7_B,opcode_7_C,opcode_7_D,opcode_7_E,opcode_7_F\n"
"	.word opcode_8_0,opcode_8_1,opcode_8_2,opcode_8_3,opcode_8_4,opcode_8_5,opcode_8_6,opcode_8_7\n"
"	.word opcode_8_8,opcode_8_9,opcode_8_A,opcode_8_B,opcode_8_C,opcode_8_D,opcode_8_E,opcode_8_F\n"
"	.word opcode_9_0,opcode_9_1,opcode_9_2,opcode_9_3,opcode_9_4,opcode_9_5,opcode_9_6,opcode_9_7\n"
"	.word opcode_9_8,opcode_9_9,opcode_9_A,opcode_9_B,opcode_9_C,opcode_9_D,opcode_9_E,opcode_9_F\n"
"	.word opcode_A_0,opcode_A_1,opcode_A_2,opcode_A_3,opcode_A_4,opcode_A_5,opcode_A_6,opcode_A_7\n"
"	.word opcode_A_8,opcode_A_9,opcode_A_A,opcode_A_B,opcode_A_C,opcode_A_D,opcode_A_E,opcode_A_F\n"
"	.word opcode_B_0,opcode_B_1,opcode_B_2,opcode_B_3,opcode_B_4,opcode_B_5,opcode_B_6,opcode_B_7\n"
"	.word opcode_B_8,opcode_B_9,opcode_B_A,opcode_B_B,opcode_B_C,opcode_B_D,opcode_B_E,opcode_B_F\n"
"	.word opcode_C_0,opcode_C_1,opcode_C_2,opcode_C_3,opcode_C_4,opcode_C_5,opcode_C_6,opcode_C_7\n"
"	.word opcode_C_8,opcode_C_9,opcode_C_A,opcode_C_B,opcode_C_C,opcode_C_D,opcode_C_E,opcode_C_F\n"
"	.word opcode_D_0,opcode_D_1,opcode_D_2,opcode_D_3,opcode_D_4,opcode_D_5,opcode_D_6,opcode_D_7\n"
"	.word opcode_D_8,opcode_D_9,opcode_D_A,opcode_D_B,opcode_D_C,opcode_D_D,opcode_D_E,opcode_D_F\n"
"	.word opcode_E_0,opcode_E_1,opcode_E_2,opcode_E_3,opcode_E_4,opcode_E_5,opcode_E_6,opcode_E_7\n"
"	.word opcode_E_8,opcode_E_9,opcode_E_A,opcode_E_B,opcode_E_C,opcode_E_D,opcode_E_E,opcode_E_F\n"
"	.word opcode_F_0,opcode_F_1,opcode_F_2,opcode_F_3,opcode_F_4,opcode_F_5,opcode_F_6,opcode_F_7\n"
"	.word opcode_F_8,opcode_F_9,opcode_F_A,opcode_F_B,opcode_F_C,opcode_F_D,opcode_F_E,opcode_F_F\n"
"\n"
".align 4\n"
"\n"
"EI_DUMMY_opcodes:\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@0\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@0\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@1\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@1\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@2\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@2\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@3\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@3\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@4\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@4\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@5\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@5\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@6\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@6\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@7\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@7\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@8\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@8\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@9\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@9\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@A\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@A\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@B\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@B\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@C\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@C\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@D\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@D\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@E\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@E\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@F\n"
"	.word ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return,ei_return ;@F\n"
"\n"
".text\n"
".align 4\n"
"\n"
";@NOP\n"
"opcode_0_0:\n"
";@LD B,B\n"
"opcode_4_0:\n"
";@LD C,C\n"
"opcode_4_9:\n"
";@LD D,D\n"
"opcode_5_2:\n"
";@LD E,E\n"
"opcode_5_B:\n"
";@LD H,H\n"
"opcode_6_4:\n"
";@LD L,L\n"
"opcode_6_D:\n"
";@LD A,A\n"
"opcode_7_F:\n"
"	fetch 4\n"
";@LD BC,NN\n"
"opcode_0_1:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	mov z80bc,r0, lsl #16\n"
"	fetch 10\n"
";@LD (BC),A\n"
"opcode_0_2:\n"
"	mov r0,z80a, lsr #24\n"
"	mov r1,z80bc, lsr #16\n"
"	writemem8\n"
"	fetch 7\n"
";@INC BC\n"
"opcode_0_3:\n"
"	add z80bc,z80bc,#1<<16\n"
"	fetch 6\n"
";@INC B\n"
"opcode_0_4:\n"
"	opINC8H z80bc\n"
"	fetch 4\n"
";@DEC B\n"
"opcode_0_5:\n"
"	opDEC8H z80bc\n"
"	fetch 4\n"
";@LD B,N\n"
"opcode_0_6:\n"
"	ldrb r1,[z80pc],#1\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,r1, lsl #24\n"
"	fetch 7\n"
";@RLCA\n"
"opcode_0_7:\n"
"	bic z80f,z80f,#(1<<NFlag)|(1<<HFlag)|(1<<CFlag)\n"
"	movs z80a,z80a, lsl #1\n"
"	orrcs z80a,z80a,#1<<24\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 4\n"
";@EX AF,AF'\n"
"opcode_0_8:\n"
"	add r1,cpucontext,#z80a2\n"
"	swp z80a,z80a,[r1]\n"
"	add r1,cpucontext,#z80f2\n"
"	swp z80f,z80f,[r1]\n"
"	fetch 4\n"
";@ADD HL,BC\n"
"opcode_0_9:\n"
"	opADD16 z80hl z80bc\n"
"	fetch 11\n"
";@LD A,(BC)\n"
"opcode_0_A:\n"
"	mov r0,z80bc, lsr #16\n"
"	readmem8\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 7\n"
";@DEC BC\n"
"opcode_0_B:\n"
"	sub z80bc,z80bc,#1<<16\n"
"	fetch 6\n"
";@INC C\n"
"opcode_0_C:\n"
"	opINC8L z80bc\n"
"	fetch 4\n"
";@DEC C\n"
"opcode_0_D:\n"
"	opDEC8L z80bc\n"
"	fetch 4\n"
";@LD C,N\n"
"opcode_0_E:\n"
"	ldrb r1,[z80pc],#1\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,r1, lsl #16\n"
"	fetch 7\n"
";@RRCA\n"
"opcode_0_F:\n"
"	bic z80f,z80f,#(1<<NFlag)|(1<<HFlag)|(1<<CFlag)\n"
"	movs z80a,z80a, lsr #25\n"
"	orrcs z80a,z80a,#1<<7\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	mov z80a,z80a, lsl #24\n"
"	fetch 4\n"
";@DJNZ $+2\n"
"opcode_1_0:\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	ldrsb r1,[z80pc],#1\n"
"	addne z80pc,z80pc,r1\n"
"	subne z80_icount,z80_icount,#5\n"
"	fetch 8\n"
"\n"
";@LD DE,NN\n"
"opcode_1_1:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	mov z80de,r0, lsl #16\n"
"	fetch 10\n"
";@LD (DE),A\n"
"opcode_1_2:\n"
"	mov r0,z80a, lsr #24\n"
"	writemem8DE\n"
"	fetch 7\n"
";@INC DE\n"
"opcode_1_3:\n"
"	add z80de,z80de,#1<<16\n"
"	fetch 6\n"
";@INC D\n"
"opcode_1_4:\n"
"	opINC8H z80de\n"
"	fetch 4\n"
";@DEC D\n"
"opcode_1_5:\n"
"	opDEC8H z80de\n"
"	fetch 4\n"
";@LD D,N\n"
"opcode_1_6:\n"
"	ldrb r1,[z80pc],#1\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,r1, lsl #24\n"
"	fetch 7\n"
";@RLA\n"
"opcode_1_7:\n"
"	tst z80f,#1<<CFlag\n"
"	orrne z80a,z80a,#1<<23\n"
"	bic z80f,z80f,#(1<<NFlag)|(1<<HFlag)|(1<<CFlag)\n"
"	movs z80a,z80a, lsl #1\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	fetch 4\n"
";@JR $+2\n"
"opcode_1_8:\n"
"	ldrsb r1,[z80pc],#1\n"
"	add z80pc,z80pc,r1\n"
"	fetch 12\n"
";@ADD HL,DE\n"
"opcode_1_9:\n"
"	opADD16 z80hl z80de\n"
"	fetch 11\n"
";@LD A,(DE)\n"
"opcode_1_A:\n"
"	mov r0,z80de, lsr #16\n"
"	readmem8\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 7\n"
";@DEC DE\n"
"opcode_1_B:\n"
"	sub z80de,z80de,#1<<16\n"
"	fetch 6\n"
";@INC E\n"
"opcode_1_C:\n"
"	opINC8L z80de\n"
"	fetch 4\n"
";@DEC E\n"
"opcode_1_D:\n"
"	opDEC8L z80de\n"
"	fetch 4\n"
";@LD E,N\n"
"opcode_1_E:\n"
"	ldrb r0,[z80pc],#1\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,r0, lsl #16\n"
"	fetch 7\n"
";@RRA\n"
"opcode_1_F:\n"
"	orr z80a,z80a,z80f,lsr#1		;@get C\n"
"	bic z80f,z80f,#(1<<NFlag)|(1<<HFlag)|(1<<CFlag)\n"
"	movs z80a,z80a,ror#25\n"
"	orrcs z80f,z80f,#1<<CFlag\n"
"	mov z80a,z80a,lsl#24\n"
"	fetch 4\n"
";@JR NZ,$+2\n"
"opcode_2_0:\n"
"	tst z80f,#1<<ZFlag\n"
"	beq opcode_1_8\n"
"	add z80pc,z80pc,#1\n"
"	fetch 7\n"
";@LD HL,NN\n"
"opcode_2_1:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	mov z80hl,r0, lsl #16\n"
"	fetch 10\n"
";@LD (NN),HL\n"
"opcode_ED_63:\n"
"	eatcycles 4\n"
";@LD (NN),HL\n"
"opcode_2_2:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r1,r0,r1, lsl #8\n"
"	mov r0,z80hl, lsr #16\n"
"	writemem16\n"
"	fetch 16\n"
";@INC HL\n"
"opcode_2_3:\n"
"	add z80hl,z80hl,#1<<16\n"
"	fetch 6\n"
";@INC H\n"
"opcode_2_4:\n"
"	opINC8H z80hl\n"
"	fetch 4\n"
";@DEC H\n"
"opcode_2_5:\n"
"	opDEC8H z80hl\n"
"	fetch 4\n"
";@LD H,N\n"
"opcode_2_6:\n"
"	ldrb r1,[z80pc],#1\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,r1, lsl #24\n"
"	fetch 7\n"
"DAATABLE_LOCAL: .word DAATable\n"
";@DAA\n"
"opcode_2_7:\n"
"	mov r1,z80a, lsr #24\n"
"	tst z80f,#1<<CFlag\n"
"	orrne r1,r1,#256\n"
"	tst z80f,#1<<HFlag\n"
"	orrne r1,r1,#512\n"
"	tst z80f,#1<<NFlag\n"
"	orrne r1,r1,#1024\n"
"	ldr r2,DAATABLE_LOCAL\n"
"	add r2,r2,r1, lsl #1\n"
"	ldrh r1,[r2]\n"
"	and z80f,r1,#0xFF\n"
"	and r2,r1,#0xFF<<8\n"
"	mov z80a,r2, lsl #16\n"
"	fetch 4\n"
";@JR Z,$+2\n"
"opcode_2_8:\n"
"	tst z80f,#1<<ZFlag\n"
"	bne opcode_1_8\n"
"	add z80pc,z80pc,#1\n"
"	fetch 7\n"
";@ADD HL,HL\n"
"opcode_2_9:\n"
"	opADD16_2 z80hl\n"
"	fetch 11\n"
";@LD HL,(NN)\n"
"opcode_ED_6B:\n"
"	eatcycles 4\n"
";@LD HL,(NN)\n"
"opcode_2_A:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	readmem16\n"
"	mov z80hl,r0, lsl #16\n"
"	fetch 16\n"
";@DEC HL\n"
"opcode_2_B:\n"
"	sub z80hl,z80hl,#1<<16\n"
"	fetch 6\n"
";@INC L\n"
"opcode_2_C:\n"
"	opINC8L z80hl\n"
"	fetch 4\n"
";@DEC L\n"
"opcode_2_D:\n"
"	opDEC8L z80hl\n"
"	fetch 4\n"
";@LD L,N\n"
"opcode_2_E:\n"
"	ldrb r0,[z80pc],#1\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	orr z80hl,z80hl,r0, lsl #16\n"
"	fetch 7\n"
";@CPL\n"
"opcode_2_F:\n"
"	eor z80a,z80a,#0xFF<<24\n"
"	orr z80f,z80f,#(1<<NFlag)|(1<<HFlag)\n"
"	fetch 4\n"
";@JR NC,$+2\n"
"opcode_3_0:\n"
"	tst z80f,#1<<CFlag\n"
"	beq opcode_1_8\n"
"	add z80pc,z80pc,#1\n"
"	fetch 7\n"
";@LD SP,NN\n"
"opcode_3_1:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"\n"
".if FAST_Z80SP\n"
"	orr r0,r0,r1, lsl #8\n"
"	rebasesp\n"
"	mov z80sp,r0\n"
".else\n"
"	orr z80sp,r0,r1, lsl #8\n"
".endif\n"
"	fetch 10\n"
";@LD (NN),A\n"
"opcode_3_2:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r1,r0,r1, lsl #8\n"
"	mov r0,z80a, lsr #24\n"
"	writemem8\n"
"	fetch 13\n"
";@INC SP\n"
"opcode_3_3:\n"
"	add z80sp,z80sp,#1\n"
"	fetch 6\n"
";@INC (HL)\n"
"opcode_3_4:\n"
"	readmem8HL\n"
"	opINC8b\n"
"	writemem8HL\n"
"	fetch 11\n"
";@DEC (HL)\n"
"opcode_3_5:\n"
"	readmem8HL\n"
"	opDEC8b\n"
"	writemem8HL\n"
"	fetch 11\n"
";@LD (HL),N\n"
"opcode_3_6:\n"
"	ldrb r0,[z80pc],#1\n"
"	writemem8HL\n"
"	fetch 10\n"
";@SCF\n"
"opcode_3_7:\n"
"	bic z80f,z80f,#(1<<NFlag)|(1<<HFlag)\n"
"	orr z80f,z80f,#1<<CFlag\n"
"	fetch 4\n"
";@JR C,$+2\n"
"opcode_3_8:\n"
"	tst z80f,#1<<CFlag\n"
"	bne opcode_1_8\n"
"	add z80pc,z80pc,#1\n"
"	fetch 8\n"
";@ADD HL,SP\n"
"opcode_3_9:\n"
".if FAST_Z80SP\n"
"	ldr r0,[cpucontext,#z80sp_base]\n"
"	sub r0,z80sp,r0\n"
"	opADD16s z80hl r0 16\n"
".else\n"
"	opADD16s z80hl z80sp 16\n"
".endif\n"
"	fetch 11\n"
";@LD A,(NN)\n"
"opcode_3_A:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	readmem8\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 11\n"
";@DEC SP\n"
"opcode_3_B:\n"
"	sub z80sp,z80sp,#1\n"
"	fetch 6\n"
";@INC A\n"
"opcode_3_C:\n"
"	opINC8 z80a\n"
"	fetch 4\n"
";@DEC A\n"
"opcode_3_D:\n"
"	opDEC8 z80a\n"
"	fetch 4\n"
";@LD A,N\n"
"opcode_3_E:\n"
"	ldrb r0,[z80pc],#1\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 7\n"
";@CCF\n"
"opcode_3_F:\n"
"	bic z80f,z80f,#(1<<NFlag)|(1<<HFlag)\n"
"	tst z80f,#1<<CFlag\n"
"	orrne z80f,z80f,#1<<HFlag\n"
"	eor z80f,z80f,#1<<CFlag\n"
"	fetch 4\n"
"\n"
";@LD B,C\n"
"opcode_4_1:\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,z80bc, lsl #8\n"
"	fetch 4\n"
";@LD B,D\n"
"opcode_4_2:\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	and r1,z80de,#0xFF<<24\n"
"	orr z80bc,z80bc,r1\n"
"	fetch 4\n"
";@LD B,E\n"
"opcode_4_3:\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	and r1,z80de,#0xFF<<16\n"
"	orr z80bc,z80bc,r1, lsl #8\n"
"	fetch 4\n"
";@LD B,H\n"
"opcode_4_4:\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	and r1,z80hl,#0xFF<<24\n"
"	orr z80bc,z80bc,r1\n"
"	fetch 4\n"
";@LD B,L\n"
"opcode_4_5:\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	and r1,z80hl,#0xFF<<16\n"
"	orr z80bc,z80bc,r1, lsl #8\n"
"	fetch 4\n"
";@LD B,(HL)\n"
"opcode_4_6:\n"
"	readmem8HL\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,r0, lsl #24\n"
"	fetch 7\n"
";@LD B,A\n"
"opcode_4_7:\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,z80a\n"
"	fetch 4\n"
";@LD C,B\n"
"opcode_4_8:\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,z80bc, lsr #8\n"
"	fetch 4\n"
";@LD C,D\n"
"opcode_4_A:\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	and r1,z80de,#0xFF<<24\n"
"	orr z80bc,z80bc,r1, lsr #8\n"
"	fetch 4\n"
";@LD C,E\n"
"opcode_4_B:\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	and r1,z80de,#0xFF<<16\n"
"	orr z80bc,z80bc,r1 \n"
"	fetch 4\n"
";@LD C,H\n"
"opcode_4_C:\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	and r1,z80hl,#0xFF<<24\n"
"	orr z80bc,z80bc,r1, lsr #8\n"
"	fetch 4\n"
";@LD C,L\n"
"opcode_4_D:\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	and r1,z80hl,#0xFF<<16\n"
"	orr z80bc,z80bc,r1 \n"
"	fetch 4\n"
";@LD C,(HL)\n"
"opcode_4_E:\n"
"	readmem8HL\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,r0, lsl #16\n"
"	fetch 7\n"
";@LD C,A\n"
"opcode_4_F:\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,z80a, lsr #8\n"
"	fetch 4\n"
";@LD D,B\n"
"opcode_5_0:\n"
"	and z80de,z80de,#0xFF<<16\n"
"	and r1,z80bc,#0xFF<<24\n"
"	orr z80de,z80de,r1\n"
"	fetch 4\n"
";@LD D,C\n"
"opcode_5_1:\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,z80bc, lsl #8\n"
"	fetch 4\n"
";@LD D,E\n"
"opcode_5_3:\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,z80de, lsl #8\n"
"	fetch 4\n"
";@LD D,H\n"
"opcode_5_4:\n"
"	and z80de,z80de,#0xFF<<16\n"
"	and r1,z80hl,#0xFF<<24\n"
"	orr z80de,z80de,r1\n"
"	fetch 4\n"
";@LD D,L\n"
"opcode_5_5:\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,z80hl, lsl #8\n"
"	fetch 4\n"
";@LD D,(HL)\n"
"opcode_5_6:\n"
"	readmem8HL\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,r0, lsl #24\n"
"	fetch 7\n"
";@LD D,A\n"
"opcode_5_7:\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,z80a\n"
"	fetch 4\n"
";@LD E,B\n"
"opcode_5_8:\n"
"	and z80de,z80de,#0xFF<<24\n"
"	and r1,z80bc,#0xFF<<24\n"
"	orr z80de,z80de,r1, lsr #8\n"
"	fetch 4\n"
";@LD E,C\n"
"opcode_5_9:\n"
"	and z80de,z80de,#0xFF<<24\n"
"	and r1,z80bc,#0xFF<<16\n"
"	orr z80de,z80de,r1 \n"
"	fetch 4\n"
";@LD E,D\n"
"opcode_5_A:\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,z80de, lsr #8\n"
"	fetch 4\n"
";@LD E,H\n"
"opcode_5_C:\n"
"	and z80de,z80de,#0xFF<<24\n"
"	and r1,z80hl,#0xFF<<24\n"
"	orr z80de,z80de,r1, lsr #8\n"
"	fetch 4\n"
";@LD E,L\n"
"opcode_5_D:\n"
"	and z80de,z80de,#0xFF<<24\n"
"	and r1,z80hl,#0xFF<<16\n"
"	orr z80de,z80de,r1 \n"
"	fetch 4\n"
";@LD E,(HL)\n"
"opcode_5_E:\n"
"	readmem8HL\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,r0, lsl #16\n"
"	fetch 7\n"
";@LD E,A\n"
"opcode_5_F:\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,z80a, lsr #8\n"
"	fetch 4\n"
"\n"
";@LD H,B\n"
"opcode_6_0:\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	and r1,z80bc,#0xFF<<24\n"
"	orr z80hl,z80hl,r1\n"
"	fetch 4\n"
";@LD H,C\n"
"opcode_6_1:\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,z80bc, lsl #8\n"
"	fetch 4\n"
";@LD H,D\n"
"opcode_6_2:\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	and r1,z80de,#0xFF<<24\n"
"	orr z80hl,z80hl,r1\n"
"	fetch 4\n"
";@LD H,E\n"
"opcode_6_3:\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,z80de, lsl #8\n"
"	fetch 4\n"
";@LD H,L\n"
"opcode_6_5:\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,z80hl, lsl #8\n"
"	fetch 4\n"
";@LD H,(HL)\n"
"opcode_6_6:\n"
"	readmem8HL\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,r0, lsl #24\n"
"	fetch 7\n"
";@LD H,A\n"
"opcode_6_7:\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,z80a\n"
"	fetch 4\n"
"\n"
";@LD L,B\n"
"opcode_6_8:\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	and r1,z80bc,#0xFF<<24\n"
"	orr z80hl,z80hl,r1, lsr #8\n"
"	fetch 4\n"
";@LD L,C\n"
"opcode_6_9:\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	and r1,z80bc,#0xFF<<16\n"
"	orr z80hl,z80hl,r1\n"
"	fetch 4\n"
";@LD L,D\n"
"opcode_6_A:\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	and r1,z80de,#0xFF<<24\n"
"	orr z80hl,z80hl,r1, lsr #8\n"
"	fetch 4\n"
";@LD L,E\n"
"opcode_6_B:\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	and r1,z80de,#0xFF<<16\n"
"	orr z80hl,z80hl,r1\n"
"	fetch 4\n"
";@LD L,H\n"
"opcode_6_C:\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	orr z80hl,z80hl,z80hl, lsr #8\n"
"	fetch 4\n"
";@LD L,(HL)\n"
"opcode_6_E:\n"
"	readmem8HL\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	orr z80hl,z80hl,r0, lsl #16\n"
"	fetch 7\n"
";@LD L,A\n"
"opcode_6_F:\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	orr z80hl,z80hl,z80a, lsr #8\n"
"	fetch 4\n"
"\n"
";@LD (HL),B\n"
"opcode_7_0:\n"
"	mov r0,z80bc, lsr #24\n"
"	writemem8HL\n"
"	fetch 7\n"
";@LD (HL),C\n"
"opcode_7_1:\n"
"	mov r0,z80bc, lsr #16\n"
"	and r0,r0,#0xFF\n"
"	writemem8HL\n"
"	fetch 7\n"
";@LD (HL),D\n"
"opcode_7_2:\n"
"	mov r0,z80de, lsr #24\n"
"	writemem8HL\n"
"	fetch 7\n"
";@LD (HL),E\n"
"opcode_7_3:\n"
"	mov r0,z80de, lsr #16\n"
"	and r0,r0,#0xFF\n"
"	writemem8HL\n"
"	fetch 7\n"
";@LD (HL),H\n"
"opcode_7_4:\n"
"	mov r0,z80hl, lsr #24\n"
"	writemem8HL\n"
"	fetch 7\n"
";@LD (HL),L\n"
"opcode_7_5:\n"
"	mov r1,z80hl, lsr #16\n"
"	and r0,r1,#0xFF\n"
"	writemem8\n"
"	fetch 7\n"
";@HALT\n"
"opcode_7_6:\n"
"	sub z80pc,z80pc,#1\n"
"	ldrb r0,[cpucontext,#z80if]\n"
"	orr r0,r0,#Z80_HALT\n"
"	strb r0,[cpucontext,#z80if]\n"
"	b z80_execute_end\n"
";@LD (HL),A\n"
"opcode_7_7:\n"
"	mov r0,z80a, lsr #24\n"
"	writemem8HL\n"
"	fetch 7\n"
"\n"
";@LD A,B\n"
"opcode_7_8:\n"
"	and z80a,z80bc,#0xFF<<24\n"
"	fetch 4\n"
";@LD A,C\n"
"opcode_7_9:\n"
"	mov z80a,z80bc, lsl #8\n"
"	fetch 4\n"
";@LD A,D\n"
"opcode_7_A:\n"
"	and z80a,z80de,#0xFF<<24\n"
"	fetch 4\n"
";@LD A,E\n"
"opcode_7_B:\n"
"	mov z80a,z80de, lsl #8\n"
"	fetch 4\n"
";@LD A,H\n"
"opcode_7_C:\n"
"	and z80a,z80hl,#0xFF<<24\n"
"	fetch 4\n"
";@LD A,L\n"
"opcode_7_D:\n"
"	mov z80a,z80hl, lsl #8\n"
"	fetch 4\n"
";@LD A,(HL)\n"
"opcode_7_E:\n"
"	readmem8HL\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 7\n"
"\n"
";@ADD A,B\n"
"opcode_8_0:\n"
"	opADDH z80bc\n"
";@ADD A,C\n"
"opcode_8_1:\n"
"	opADDL z80bc\n"
";@ADD A,D\n"
"opcode_8_2:\n"
"	opADDH z80de\n"
";@ADD A,E\n"
"opcode_8_3:\n"
"	opADDL z80de\n"
";@ADD A,H\n"
"opcode_8_4:\n"
"	opADDH z80hl\n"
";@ADD A,L\n"
"opcode_8_5:\n"
"	opADDL z80hl\n"
";@ADD A,(HL)\n"
"opcode_8_6:\n"
"	readmem8HL\n"
"	opADDb\n"
"	fetch 7\n"
";@ADD A,A\n"
"opcode_8_7:\n"
"	opADDA\n"
"\n"
";@ADC A,B\n"
"opcode_8_8:\n"
"	opADCH z80bc\n"
";@ADC A,C\n"
"opcode_8_9:\n"
"	opADCL z80bc\n"
";@ADC A,D\n"
"opcode_8_A:\n"
"	opADCH z80de\n"
";@ADC A,E\n"
"opcode_8_B:\n"
"	opADCL z80de\n"
";@ADC A,H\n"
"opcode_8_C:\n"
"	opADCH z80hl\n"
";@ADC A,L\n"
"opcode_8_D:\n"
"	opADCL z80hl\n"
";@ADC A,(HL)\n"
"opcode_8_E:\n"
"	readmem8HL\n"
"	opADCb\n"
"	fetch 7\n"
";@ADC A,A\n"
"opcode_8_F:\n"
"	opADCA\n"
"\n"
";@SUB B\n"
"opcode_9_0:\n"
"	opSUBH z80bc\n"
";@SUB C\n"
"opcode_9_1:\n"
"	opSUBL z80bc\n"
";@SUB D\n"
"opcode_9_2:\n"
"	opSUBH z80de\n"
";@SUB E\n"
"opcode_9_3:\n"
"	opSUBL z80de\n"
";@SUB H\n"
"opcode_9_4:\n"
"	opSUBH z80hl\n"
";@SUB L\n"
"opcode_9_5:\n"
"	opSUBL z80hl\n"
";@SUB (HL)\n"
"opcode_9_6:\n"
"	readmem8HL\n"
"	opSUBb\n"
"	fetch 7\n"
";@SUB A\n"
"opcode_9_7:\n"
"	opSUBA\n"
"\n"
";@SBC B \n"
"opcode_9_8:\n"
"	opSBCH z80bc\n"
";@SBC C\n"
"opcode_9_9:\n"
"	opSBCL z80bc\n"
";@SBC D\n"
"opcode_9_A:\n"
"	opSBCH z80de\n"
";@SBC E\n"
"opcode_9_B:\n"
"	opSBCL z80de\n"
";@SBC H\n"
"opcode_9_C:\n"
"	opSBCH z80hl\n"
";@SBC L\n"
"opcode_9_D:\n"
"	opSBCL z80hl\n"
";@SBC (HL)\n"
"opcode_9_E:\n"
"	readmem8HL\n"
"	opSBCb\n"
"	fetch 7\n"
";@SBC A\n"
"opcode_9_F:\n"
"	opSBCA\n"
"\n"
";@AND B\n"
"opcode_A_0:\n"
"	opANDH z80bc\n"
";@AND C\n"
"opcode_A_1:\n"
"	opANDL z80bc\n"
";@AND D\n"
"opcode_A_2:\n"
"	opANDH z80de\n"
";@AND E\n"
"opcode_A_3:\n"
"	opANDL z80de\n"
";@AND H\n"
"opcode_A_4:\n"
"	opANDH z80hl\n"
";@AND L\n"
"opcode_A_5:\n"
"	opANDL z80hl\n"
";@AND (HL)\n"
"opcode_A_6:\n"
"	readmem8HL\n"
"	opANDb\n"
"	fetch 7\n"
";@AND A\n"
"opcode_A_7:\n"
"	opANDA\n"
"\n"
";@XOR B\n"
"opcode_A_8:\n"
"	opXORH z80bc\n"
";@XOR C\n"
"opcode_A_9:\n"
"	opXORL z80bc\n"
";@XOR D\n"
"opcode_A_A:\n"
"	opXORH z80de\n"
";@XOR E\n"
"opcode_A_B:\n"
"	opXORL z80de\n"
";@XOR H\n"
"opcode_A_C:\n"
"	opXORH z80hl\n"
";@XOR L\n"
"opcode_A_D:\n"
"	opXORL z80hl\n"
";@XOR (HL)\n"
"opcode_A_E:\n"
"	readmem8HL\n"
"	opXORb\n"
"	fetch 7\n"
";@XOR A\n"
"opcode_A_F:\n"
"	opXORA\n"
"\n"
";@OR B\n"
"opcode_B_0:\n"
"	opORH z80bc\n"
";@OR C\n"
"opcode_B_1:\n"
"	opORL z80bc\n"
";@OR D\n"
"opcode_B_2:\n"
"	opORH z80de\n"
";@OR E\n"
"opcode_B_3:\n"
"	opORL z80de\n"
";@OR H\n"
"opcode_B_4:\n"
"	opORH z80hl\n"
";@OR L\n"
"opcode_B_5:\n"
"	opORL z80hl\n"
";@OR (HL)\n"
"opcode_B_6:\n"
"	readmem8HL\n"
"	opORb\n"
"	fetch 7\n"
";@OR A\n"
"opcode_B_7:\n"
"	opORA\n"
"\n"
";@CP B\n"
"opcode_B_8:\n"
"	opCPH z80bc\n"
";@CP C\n"
"opcode_B_9:\n"
"	opCPL z80bc\n"
";@CP D\n"
"opcode_B_A:\n"
"	opCPH z80de\n"
";@CP E\n"
"opcode_B_B:\n"
"	opCPL z80de\n"
";@CP H\n"
"opcode_B_C:\n"
"	opCPH z80hl\n"
";@CP L\n"
"opcode_B_D:\n"
"	opCPL z80hl\n"
";@CP (HL)\n"
"opcode_B_E:\n"
"	readmem8HL\n"
"	opCPb\n"
"	fetch 7\n"
";@CP A\n"
"opcode_B_F:\n"
"	opCPA\n"
"\n"
";@RET NZ\n"
"opcode_C_0:\n"
"	tst z80f,#1<<ZFlag\n"
"	beq opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
"\n"
";@POP BC\n"
"opcode_C_1:\n"
"	opPOPreg z80bc\n"
"\n"
";@JP NZ,$+3\n"
"opcode_C_2:\n"
"	tst z80f,#1<<ZFlag\n"
"	beq opcode_C_3		;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@JP $+3\n"
"opcode_C_3:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	rebasepc\n"
"	fetch 10\n"
";@CALL NZ,NN\n"
"opcode_C_4:\n"
"	tst z80f,#1<<ZFlag\n"
"	beq opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
"\n"
";@PUSH BC\n"
"opcode_C_5:\n"
"	opPUSHreg z80bc\n"
"	fetch 11\n"
";@ADD A,N\n"
"opcode_C_6:\n"
"	ldrb r0,[z80pc],#1\n"
"	opADDb\n"
"	fetch 7\n"
";@RST 0\n"
"opcode_C_7:\n"
"	opRST 0x00\n"
"\n"
";@RET Z\n"
"opcode_C_8:\n"
"	tst z80f,#1<<ZFlag\n"
"	bne opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
";@RET\n"
"opcode_C_9:\n"
"    opPOP\n"
"	rebasepc\n"
"	fetch 10\n"
";@JP Z,$+3\n"
"opcode_C_A:\n"
"	tst z80f,#1<<ZFlag\n"
"	bne opcode_C_3  ;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
"\n"
";@This reads this opcodes_CB lookup table to find the location of\n"
";@the CB sub for the intruction and then branches to that location\n"
"opcode_C_B:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldr pc,[pc,r0, lsl #2]\n"
"opcodes_CB:	.word 0x00000000\n"
"			.word opcode_CB_00,opcode_CB_01,opcode_CB_02,opcode_CB_03,opcode_CB_04,opcode_CB_05,opcode_CB_06,opcode_CB_07\n"
"			.word opcode_CB_08,opcode_CB_09,opcode_CB_0A,opcode_CB_0B,opcode_CB_0C,opcode_CB_0D,opcode_CB_0E,opcode_CB_0F\n"
"			.word opcode_CB_10,opcode_CB_11,opcode_CB_12,opcode_CB_13,opcode_CB_14,opcode_CB_15,opcode_CB_16,opcode_CB_17\n"
"			.word opcode_CB_18,opcode_CB_19,opcode_CB_1A,opcode_CB_1B,opcode_CB_1C,opcode_CB_1D,opcode_CB_1E,opcode_CB_1F\n"
"			.word opcode_CB_20,opcode_CB_21,opcode_CB_22,opcode_CB_23,opcode_CB_24,opcode_CB_25,opcode_CB_26,opcode_CB_27\n"
"			.word opcode_CB_28,opcode_CB_29,opcode_CB_2A,opcode_CB_2B,opcode_CB_2C,opcode_CB_2D,opcode_CB_2E,opcode_CB_2F\n"
"			.word opcode_CB_30,opcode_CB_31,opcode_CB_32,opcode_CB_33,opcode_CB_34,opcode_CB_35,opcode_CB_36,opcode_CB_37\n"
"			.word opcode_CB_38,opcode_CB_39,opcode_CB_3A,opcode_CB_3B,opcode_CB_3C,opcode_CB_3D,opcode_CB_3E,opcode_CB_3F\n"
"			.word opcode_CB_40,opcode_CB_41,opcode_CB_42,opcode_CB_43,opcode_CB_44,opcode_CB_45,opcode_CB_46,opcode_CB_47\n"
"			.word opcode_CB_48,opcode_CB_49,opcode_CB_4A,opcode_CB_4B,opcode_CB_4C,opcode_CB_4D,opcode_CB_4E,opcode_CB_4F\n"
"			.word opcode_CB_50,opcode_CB_51,opcode_CB_52,opcode_CB_53,opcode_CB_54,opcode_CB_55,opcode_CB_56,opcode_CB_57\n"
"			.word opcode_CB_58,opcode_CB_59,opcode_CB_5A,opcode_CB_5B,opcode_CB_5C,opcode_CB_5D,opcode_CB_5E,opcode_CB_5F\n"
"			.word opcode_CB_60,opcode_CB_61,opcode_CB_62,opcode_CB_63,opcode_CB_64,opcode_CB_65,opcode_CB_66,opcode_CB_67\n"
"			.word opcode_CB_68,opcode_CB_69,opcode_CB_6A,opcode_CB_6B,opcode_CB_6C,opcode_CB_6D,opcode_CB_6E,opcode_CB_6F\n"
"			.word opcode_CB_70,opcode_CB_71,opcode_CB_72,opcode_CB_73,opcode_CB_74,opcode_CB_75,opcode_CB_76,opcode_CB_77\n"
"			.word opcode_CB_78,opcode_CB_79,opcode_CB_7A,opcode_CB_7B,opcode_CB_7C,opcode_CB_7D,opcode_CB_7E,opcode_CB_7F\n"
"			.word opcode_CB_80,opcode_CB_81,opcode_CB_82,opcode_CB_83,opcode_CB_84,opcode_CB_85,opcode_CB_86,opcode_CB_87\n"
"			.word opcode_CB_88,opcode_CB_89,opcode_CB_8A,opcode_CB_8B,opcode_CB_8C,opcode_CB_8D,opcode_CB_8E,opcode_CB_8F\n"
"			.word opcode_CB_90,opcode_CB_91,opcode_CB_92,opcode_CB_93,opcode_CB_94,opcode_CB_95,opcode_CB_96,opcode_CB_97\n"
"			.word opcode_CB_98,opcode_CB_99,opcode_CB_9A,opcode_CB_9B,opcode_CB_9C,opcode_CB_9D,opcode_CB_9E,opcode_CB_9F\n"
"			.word opcode_CB_A0,opcode_CB_A1,opcode_CB_A2,opcode_CB_A3,opcode_CB_A4,opcode_CB_A5,opcode_CB_A6,opcode_CB_A7\n"
"			.word opcode_CB_A8,opcode_CB_A9,opcode_CB_AA,opcode_CB_AB,opcode_CB_AC,opcode_CB_AD,opcode_CB_AE,opcode_CB_AF\n"
"			.word opcode_CB_B0,opcode_CB_B1,opcode_CB_B2,opcode_CB_B3,opcode_CB_B4,opcode_CB_B5,opcode_CB_B6,opcode_CB_B7\n"
"			.word opcode_CB_B8,opcode_CB_B9,opcode_CB_BA,opcode_CB_BB,opcode_CB_BC,opcode_CB_BD,opcode_CB_BE,opcode_CB_BF\n"
"			.word opcode_CB_C0,opcode_CB_C1,opcode_CB_C2,opcode_CB_C3,opcode_CB_C4,opcode_CB_C5,opcode_CB_C6,opcode_CB_C7\n"
"			.word opcode_CB_C8,opcode_CB_C9,opcode_CB_CA,opcode_CB_CB,opcode_CB_CC,opcode_CB_CD,opcode_CB_CE,opcode_CB_CF\n"
"			.word opcode_CB_D0,opcode_CB_D1,opcode_CB_D2,opcode_CB_D3,opcode_CB_D4,opcode_CB_D5,opcode_CB_D6,opcode_CB_D7\n"
"			.word opcode_CB_D8,opcode_CB_D9,opcode_CB_DA,opcode_CB_DB,opcode_CB_DC,opcode_CB_DD,opcode_CB_DE,opcode_CB_DF\n"
"			.word opcode_CB_E0,opcode_CB_E1,opcode_CB_E2,opcode_CB_E3,opcode_CB_E4,opcode_CB_E5,opcode_CB_E6,opcode_CB_E7\n"
"			.word opcode_CB_E8,opcode_CB_E9,opcode_CB_EA,opcode_CB_EB,opcode_CB_EC,opcode_CB_ED,opcode_CB_EE,opcode_CB_EF\n"
"			.word opcode_CB_F0,opcode_CB_F1,opcode_CB_F2,opcode_CB_F3,opcode_CB_F4,opcode_CB_F5,opcode_CB_F6,opcode_CB_F7\n"
"			.word opcode_CB_F8,opcode_CB_F9,opcode_CB_FA,opcode_CB_FB,opcode_CB_FC,opcode_CB_FD,opcode_CB_FE,opcode_CB_FF\n"
"\n"
";@CALL Z,NN\n"
"opcode_C_C:\n"
"	tst z80f,#1<<ZFlag\n"
"	bne opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@CALL NN\n"
"opcode_C_D:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	ldr r2,[cpucontext,#z80pc_base]\n"
"	sub r2,z80pc,r2\n"
"	orr z80pc,r0,r1, lsl #8\n"
"    opPUSHareg r2\n"
"    mov r0,z80pc\n"
"	rebasepc\n"
"	fetch 17\n"
";@ADC A,N\n"
"opcode_C_E:\n"
"	ldrb r0,[z80pc],#1\n"
"	opADCb\n"
"	fetch 7\n"
";@RST 8H\n"
"opcode_C_F:\n"
"	opRST 0x08\n"
"\n"
";@RET NC\n"
"opcode_D_0:\n"
"	tst z80f,#1<<CFlag\n"
"	beq opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
";@POP DE\n"
"opcode_D_1:\n"
"	opPOPreg z80de\n"
"\n"
";@JP NC, $+3\n"
"opcode_D_2 :\n"
"	tst z80f,#1<<CFlag\n"
"	beq opcode_C_3		;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@OUT (N),A\n"
"opcode_D_3:\n"
"	ldrb r0,[z80pc],#1\n"
"	orr r0,r0,z80a,lsr#16\n"
"	mov r1,z80a, lsr #24\n"
"	opOUT\n"
"	fetch 11\n"
";@CALL NC,NN\n"
"opcode_D_4:\n"
"	tst z80f,#1<<CFlag\n"
"	beq opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@PUSH DE\n"
"opcode_D_5:\n"
"	opPUSHreg z80de\n"
"	fetch 11\n"
";@SUB N\n"
"opcode_D_6:\n"
"	ldrb r0,[z80pc],#1\n"
"	opSUBb\n"
"	fetch 7\n"
"\n"
";@RST 10H\n"
"opcode_D_7:\n"
"	opRST 0x10\n"
"\n"
";@RET C\n"
"opcode_D_8:\n"
"	tst z80f,#1<<CFlag\n"
"	bne opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
";@EXX\n"
"opcode_D_9:\n"
"	add r1,cpucontext,#z80bc2\n"
"	swp z80bc,z80bc,[r1]\n"
"	add r1,cpucontext,#z80de2\n"
"	swp z80de,z80de,[r1]\n"
"	add r1,cpucontext,#z80hl2\n"
"	swp z80hl,z80hl,[r1]\n"
"	fetch 4\n"
";@JP C,$+3\n"
"opcode_D_A:\n"
"	tst z80f,#1<<CFlag\n"
"	bne opcode_C_3		;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@IN A,(N)\n"
"opcode_D_B:\n"
"	ldrb r0,[z80pc],#1\n"
"	orr r0,r0,z80a,lsr#16\n"
"	opIN\n"
"	mov z80a,r0, lsl #24	;@ r0 = data read\n"
"	fetch 11\n"
";@CALL C,NN\n"
"opcode_D_C:\n"
"	tst z80f,#1<<CFlag\n"
"	bne opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
"\n"
";@opcodes_DD\n"
"opcode_D_D:\n"
"	add z80xx,cpucontext,#z80ix\n"
"	b opcode_D_D_F_D\n"
"opcode_F_D:\n"
"	add z80xx,cpucontext,#z80iy\n"
"opcode_D_D_F_D:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldr pc,[pc,r0, lsl #2]\n"
"opcodes_DD:	.word 0x00000000\n"
"			.word opcode_0_0,  opcode_0_1,  opcode_0_2,  opcode_0_3,  opcode_0_4,  opcode_0_5,  opcode_0_6,  opcode_0_7\n"
"			.word opcode_0_8,  opcode_DD_09,opcode_0_A,  opcode_0_B,  opcode_0_C,  opcode_0_D,  opcode_0_E,  opcode_0_F\n"
"			.word opcode_1_0,  opcode_1_1,  opcode_1_2,  opcode_1_3,  opcode_1_4,  opcode_1_5,  opcode_1_6,  opcode_1_7\n"
"			.word opcode_1_8,  opcode_DD_19,opcode_1_A,  opcode_1_B,  opcode_1_C,  opcode_1_D,  opcode_1_E,  opcode_1_F\n"
"			.word opcode_2_0,  opcode_DD_21,opcode_DD_22,opcode_DD_23,opcode_DD_24,opcode_DD_25,opcode_DD_26,opcode_2_7\n"
"			.word opcode_2_8,  opcode_DD_29,opcode_DD_2A,opcode_DD_2B,opcode_DD_2C,opcode_DD_2D,opcode_DD_2E,opcode_2_F\n"
"			.word opcode_3_0,  opcode_3_1,  opcode_3_2,  opcode_3_3,  opcode_DD_34,opcode_DD_35,opcode_DD_36,opcode_3_7\n"
"			.word opcode_3_8,  opcode_DD_39,opcode_3_A,  opcode_3_B,  opcode_3_C,  opcode_3_D,  opcode_3_E,  opcode_3_F\n"
"			.word opcode_4_0,  opcode_4_1,  opcode_4_2,  opcode_4_3,  opcode_DD_44,opcode_DD_45,opcode_DD_46,opcode_4_7\n"
"			.word opcode_4_8,  opcode_4_9,  opcode_4_A,  opcode_4_B,  opcode_DD_4C,opcode_DD_4D,opcode_DD_4E,opcode_4_F\n"
"			.word opcode_5_0,  opcode_5_1,  opcode_5_2,  opcode_5_3,  opcode_DD_54,opcode_DD_55,opcode_DD_56,opcode_5_7\n"
"			.word opcode_5_8,  opcode_5_9,  opcode_5_A,  opcode_5_B,  opcode_DD_5C,opcode_DD_5D,opcode_DD_5E,opcode_5_F\n"
"			.word opcode_DD_60,opcode_DD_61,opcode_DD_62,opcode_DD_63,opcode_DD_64,opcode_DD_65,opcode_DD_66,opcode_DD_67\n"
"			.word opcode_DD_68,opcode_DD_69,opcode_DD_6A,opcode_DD_6B,opcode_DD_6C,opcode_DD_6D,opcode_DD_6E,opcode_DD_6F\n"
"			.word opcode_DD_70,opcode_DD_71,opcode_DD_72,opcode_DD_73,opcode_DD_74,opcode_DD_75,opcode_7_6,  opcode_DD_77\n"
"			.word opcode_7_8,  opcode_7_9,  opcode_7_A,  opcode_7_B,  opcode_DD_7C,opcode_DD_7D,opcode_DD_7E,opcode_7_F\n"
"			.word opcode_8_0,  opcode_8_1,  opcode_8_2,  opcode_8_3,  opcode_DD_84,opcode_DD_85,opcode_DD_86,opcode_8_7\n"
"			.word opcode_8_8,  opcode_8_9,  opcode_8_A,  opcode_8_B,  opcode_DD_8C,opcode_DD_8D,opcode_DD_8E,opcode_8_F\n"
"			.word opcode_9_0,  opcode_9_1,  opcode_9_2,  opcode_9_3,  opcode_DD_94,opcode_DD_95,opcode_DD_96,opcode_9_7\n"
"			.word opcode_9_8,  opcode_9_9,  opcode_9_A,  opcode_9_B,  opcode_DD_9C,opcode_DD_9D,opcode_DD_9E,opcode_9_F\n"
"			.word opcode_A_0,  opcode_A_1,  opcode_A_2,  opcode_A_3,  opcode_DD_A4,opcode_DD_A5,opcode_DD_A6,opcode_A_7\n"
"			.word opcode_A_8,  opcode_A_9,  opcode_A_A,  opcode_A_B,  opcode_DD_AC,opcode_DD_AD,opcode_DD_AE,opcode_A_F\n"
"			.word opcode_B_0,  opcode_B_1,  opcode_B_2,  opcode_B_3,  opcode_DD_B4,opcode_DD_B5,opcode_DD_B6,opcode_B_7\n"
"			.word opcode_B_8,  opcode_B_9,  opcode_B_A,  opcode_B_B,  opcode_DD_BC,opcode_DD_BD,opcode_DD_BE,opcode_B_F\n"
"			.word opcode_C_0,  opcode_C_1,  opcode_C_2,  opcode_C_3,  opcode_C_4,  opcode_C_5,  opcode_C_6,  opcode_C_7\n"
"			.word opcode_C_8,  opcode_C_9,  opcode_C_A,  opcode_DD_CB,opcode_C_C,  opcode_C_D,  opcode_C_E,  opcode_C_F\n"
"			.word opcode_D_0,  opcode_D_1,  opcode_D_2,  opcode_D_3,  opcode_D_4,  opcode_D_5,  opcode_D_6,  opcode_D_7\n"
"			.word opcode_D_8,  opcode_D_9,  opcode_D_A,  opcode_D_B,  opcode_D_C,  opcode_D_D,  opcode_D_E,  opcode_D_F\n"
"			.word opcode_E_0,  opcode_DD_E1,opcode_E_2,  opcode_DD_E3,opcode_E_4,  opcode_DD_E5,opcode_E_6,  opcode_E_7\n"
"			.word opcode_E_8,  opcode_DD_E9,opcode_E_A,  opcode_E_B,  opcode_E_C,  opcode_E_D,  opcode_E_E,  opcode_E_F\n"
"			.word opcode_F_0,  opcode_F_1,  opcode_F_2,  opcode_F_3,  opcode_F_4,  opcode_F_5,  opcode_F_6,  opcode_F_7\n"
"			.word opcode_F_8,  opcode_DD_F9,opcode_F_A,  opcode_F_B,  opcode_F_C,  opcode_F_D,  opcode_F_E,  opcode_F_F\n"
"\n"
";@SBC A,N\n"
"opcode_D_E:\n"
"	ldrb r0,[z80pc],#1\n"
"	opSBCb\n"
"	fetch 7\n"
";@RST 18H\n"
"opcode_D_F:\n"
"	opRST 0x18\n"
"\n"
";@RET PO\n"
"opcode_E_0:\n"
"	tst z80f,#1<<VFlag\n"
"	beq opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
";@POP HL\n"
"opcode_E_1:\n"
"	opPOPreg z80hl\n"
"\n"
";@JP PO,$+3\n"
"opcode_E_2:\n"
"	tst z80f,#1<<VFlag\n"
"	beq opcode_C_3		;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@EX (SP),HL\n"
"opcode_E_3:\n"
".if FAST_Z80SP\n"
"	ldrb r0,[z80sp]\n"
"	ldrb r1,[z80sp,#1]\n"
"	orr r0,r0,r1, lsl #8\n"
"	mov r1,z80hl, lsr #24\n"
"	strb r1,[z80sp,#1]\n"
"	mov r1,z80hl, lsr #16\n"
"	strb r1,[z80sp]\n"
"	mov z80hl,r0, lsl #16\n"
".else\n"
"	mov r0,z80sp\n"
"	readmem16\n"
"	mov r1,r0\n"
"	mov r0,z80hl,lsr#16\n"
"	mov z80hl,r1,lsl#16\n"
"	mov r1,z80sp\n"
"	writemem16\n"
".endif\n"
"	fetch 19\n"
";@CALL PO,NN\n"
"opcode_E_4:\n"
"	tst z80f,#1<<VFlag\n"
"	beq opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@PUSH HL\n"
"opcode_E_5:\n"
"	opPUSHreg z80hl\n"
"	fetch 11\n"
";@AND N\n"
"opcode_E_6:\n"
"	ldrb r0,[z80pc],#1\n"
"	opANDb\n"
"	fetch 7\n"
";@RST 20H\n"
"opcode_E_7:\n"
"	opRST 0x20\n"
"\n"
";@RET PE\n"
"opcode_E_8:\n"
"	tst z80f,#1<<VFlag\n"
"	bne opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
";@JP (HL)\n"
"opcode_E_9:\n"
"	mov r0,z80hl, lsr #16\n"
"	rebasepc\n"
"	fetch 4\n"
";@JP PE,$+3\n"
"opcode_E_A:\n"
"	tst z80f,#1<<VFlag\n"
"	bne opcode_C_3		;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@EX DE,HL\n"
"opcode_E_B:\n"
"	mov r1,z80de\n"
"	mov z80de,z80hl\n"
"	mov z80hl,r1\n"
"	fetch 4\n"
";@CALL PE,NN\n"
"opcode_E_C:\n"
"	tst z80f,#1<<VFlag\n"
"	bne opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
"\n"
";@This should be caught at start\n"
"opcode_E_D:\n"
"	ldrb r1,[z80pc],#1\n"
"	ldr pc,[pc,r1, lsl #2]\n"
"opcodes_ED:	.word 0x00000000\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_40,opcode_ED_41,opcode_ED_42,opcode_ED_43,opcode_ED_44,opcode_ED_45,opcode_ED_46,opcode_ED_47\n"
"			.word opcode_ED_48,opcode_ED_49,opcode_ED_4A,opcode_ED_4B,opcode_ED_44,opcode_ED_4D,opcode_ED_46,opcode_ED_4F\n"
"			.word opcode_ED_50,opcode_ED_51,opcode_ED_52,opcode_ED_53,opcode_ED_44,opcode_ED_45,opcode_ED_56,opcode_ED_57\n"
"			.word opcode_ED_58,opcode_ED_59,opcode_ED_5A,opcode_ED_5B,opcode_ED_44,opcode_ED_45,opcode_ED_5E,opcode_ED_5F\n"
"			.word opcode_ED_60,opcode_ED_61,opcode_ED_62,opcode_ED_63,opcode_ED_44,opcode_ED_45,opcode_ED_46,opcode_ED_67\n"
"			.word opcode_ED_68,opcode_ED_69,opcode_ED_6A,opcode_ED_6B,opcode_ED_44,opcode_ED_45,opcode_ED_46,opcode_ED_6F\n"
"			.word opcode_ED_70,opcode_ED_71,opcode_ED_72,opcode_ED_73,opcode_ED_44,opcode_ED_45,opcode_ED_56,opcode_ED_NF\n"
"			.word opcode_ED_78,opcode_ED_79,opcode_ED_7A,opcode_ED_7B,opcode_ED_44,opcode_ED_45,opcode_ED_5E,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_A0,opcode_ED_A1,opcode_ED_A2,opcode_ED_A3,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_A8,opcode_ED_A9,opcode_ED_AA,opcode_ED_AB,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_B0,opcode_ED_B1,opcode_ED_B2,opcode_ED_B3,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_B8,opcode_ED_B9,opcode_ED_BA,opcode_ED_BB,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"			.word opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF,opcode_ED_NF\n"
"\n"
";@XOR N\n"
"opcode_E_E:\n"
"	ldrb r0,[z80pc],#1\n"
"	opXORb\n"
"	fetch 7\n"
";@RST 28H\n"
"opcode_E_F:\n"
"	opRST 0x28\n"
"\n"
";@RET P\n"
"opcode_F_0:\n"
"	tst z80f,#1<<SFlag\n"
"	beq opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
";@POP AF\n"
"opcode_F_1:\n"
".if FAST_Z80SP\n"
"	ldrb z80f,[z80sp],#1\n"
"	sub r0,opcodes,#0x200\n"
"	ldrb z80f,[r0,z80f]\n"
"	ldrb z80a,[z80sp],#1\n"
"	mov z80a,z80a, lsl #24\n"
".else\n"
"	mov r0,z80sp\n"
"	readmem16\n"
"	add z80sp,z80sp,#2\n"
"	and z80a,r0,#0xFF00\n"
"	mov z80a,z80a,lsl#16\n"
"	and z80f,r0,#0xFF\n"
"	sub r0,opcodes,#0x200\n"
"	ldrb z80f,[r0,z80f]\n"
".endif\n"
"	fetch 10\n"
";@JP P,$+3\n"
"opcode_F_2:\n"
"	tst z80f,#1<<SFlag\n"
"	beq opcode_C_3		;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@DI\n"
"opcode_F_3:\n"
"	ldrb r1,[cpucontext,#z80if]\n"
"	bic r1,r1,#(Z80_IF1)|(Z80_IF2)\n"
"	strb r1,[cpucontext,#z80if]\n"
"	fetch 4\n"
";@CALL P,NN\n"
"opcode_F_4:\n"
"	tst z80f,#1<<SFlag\n"
"	beq opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
";@PUSH AF\n"
"opcode_F_5:\n"
"	sub r0,opcodes,#0x300\n"
"	ldrb r0,[r0,z80f]\n"
"	orr r2,r0,z80a,lsr#16\n"
"    opPUSHareg r2\n"
"	fetch 11\n"
";@OR N\n"
"opcode_F_6:\n"
"	ldrb r0,[z80pc],#1\n"
"	opORb\n"
"	fetch 7\n"
";@RST 30H\n"
"opcode_F_7:\n"
"	opRST 0x30\n"
"\n"
";@RET M\n"
"opcode_F_8:\n"
"	tst z80f,#1<<SFlag\n"
"	bne opcode_C_9		;@unconditional RET\n"
"	fetch 5\n"
";@LD SP,HL\n"
"opcode_F_9:\n"
".if FAST_Z80SP\n"
"	mov r0,z80hl, lsr #16\n"
"	rebasesp\n"
"	mov z80sp,r0\n"
".else\n"
"	mov z80sp,z80hl, lsr #16\n"
".endif\n"
"	fetch 4\n"
";@JP M,$+3\n"
"opcode_F_A:\n"
"	tst z80f,#1<<SFlag\n"
"	bne opcode_C_3		;@unconditional JP\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
"MAIN_opcodes_POINTER: .word MAIN_opcodes\n"
"EI_DUMMY_opcodes_POINTER: .word EI_DUMMY_opcodes\n"
";@EI\n"
"opcode_F_B:\n"
"	ldrb r1,[cpucontext,#z80if]\n"
"	tst r1,#Z80_IF1\n"
"	bne ei_return_exit\n"
"\n"
"	orr r1,r1,#(Z80_IF1)|(Z80_IF2)\n"
"	strb r1,[cpucontext,#z80if]\n"
"\n"
"	mov r2,opcodes\n"
"	ldr opcodes,EI_DUMMY_opcodes_POINTER\n"
"	ldr pc,[r2,r0, lsl #2]\n"
"\n"
"ei_return:\n"
"	;@point that program returns from EI to check interupts\n"
"	;@an interupt can not be taken directly after a EI opcode\n"
"	;@ reset z80pc and opcode pointer\n"
"	ldrh r0,[cpucontext,#z80irq] @ 0x4C\n"
"	sub z80pc,z80pc,#1\n"
"	ldr opcodes,MAIN_opcodes_POINTER\n"
"	;@ check ints\n"
"	tst r0,#1\n"
"	movnes r0,r0,lsr #8\n"
"    blne DoInterrupt\n"
"	;@ continue\n"
"ei_return_exit:\n"
"	fetch 4\n"
"\n"
";@CALL M,NN\n"
"opcode_F_C:\n"
"	tst z80f,#1<<SFlag\n"
"	bne opcode_C_D		;@unconditional CALL\n"
"	add z80pc,z80pc,#2\n"
"	fetch 10\n"
"\n"
";@SHOULD BE CAUGHT AT START - FD SECTION\n"
"\n"
";@CP N\n"
"opcode_F_E:\n"
"	ldrb r0,[z80pc],#1\n"
"	opCPb\n"
"	fetch 7\n"
";@RST 38H\n"
"opcode_F_F:\n"
"	opRST 0x38\n"
"\n"
"\n"
";@##################################\n"
";@##################################\n"
";@###  opcodes CB  #########################\n"
";@##################################\n"
";@##################################\n"
"\n"
"\n"
";@RLC B\n"
"opcode_CB_00:\n"
"	opRLCH z80bc\n"
";@RLC C\n"
"opcode_CB_01:\n"
"	opRLCL z80bc\n"
";@RLC D\n"
"opcode_CB_02:\n"
"	opRLCH z80de\n"
";@RLC E\n"
"opcode_CB_03:\n"
"	opRLCL z80de\n"
";@RLC H\n"
"opcode_CB_04:\n"
"	opRLCH z80hl\n"
";@RLC L\n"
"opcode_CB_05:\n"
"	opRLCL z80hl\n"
";@RLC (HL)\n"
"opcode_CB_06:\n"
"	readmem8HL\n"
"	opRLCb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@RLC A\n"
"opcode_CB_07:\n"
"	opRLCA\n"
"\n"
";@RRC B\n"
"opcode_CB_08:\n"
"	opRRCH z80bc\n"
";@RRC C\n"
"opcode_CB_09:\n"
"	opRRCL z80bc\n"
";@RRC D\n"
"opcode_CB_0A:\n"
"	opRRCH z80de\n"
";@RRC E\n"
"opcode_CB_0B:\n"
"	opRRCL z80de\n"
";@RRC H\n"
"opcode_CB_0C:\n"
"	opRRCH z80hl\n"
";@RRC L\n"
"opcode_CB_0D:\n"
"	opRRCL z80hl\n"
";@RRC (HL)\n"
"opcode_CB_0E :\n"
"	readmem8HL\n"
"	opRRCb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@RRC A\n"
"opcode_CB_0F:\n"
"	opRRCA\n"
"\n"
";@RL B\n"
"opcode_CB_10:\n"
"	opRLH z80bc\n"
";@RL C\n"
"opcode_CB_11:\n"
"	opRLL z80bc\n"
";@RL D\n"
"opcode_CB_12:\n"
"	opRLH z80de\n"
";@RL E\n"
"opcode_CB_13:\n"
"	opRLL z80de\n"
";@RL H\n"
"opcode_CB_14:\n"
"	opRLH z80hl\n"
";@RL L\n"
"opcode_CB_15:\n"
"	opRLL z80hl\n"
";@RL (HL)\n"
"opcode_CB_16:\n"
"	readmem8HL\n"
"	opRLb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@RL A\n"
"opcode_CB_17:\n"
"	opRLA\n"
"\n"
";@RR B \n"
"opcode_CB_18:\n"
"	opRRH z80bc\n"
";@RR C\n"
"opcode_CB_19:\n"
"	opRRL z80bc\n"
";@RR D\n"
"opcode_CB_1A:\n"
"	opRRH z80de\n"
";@RR E\n"
"opcode_CB_1B:\n"
"	opRRL z80de\n"
";@RR H\n"
"opcode_CB_1C:\n"
"	opRRH z80hl\n"
";@RR L\n"
"opcode_CB_1D:\n"
"	opRRL z80hl\n"
";@RR (HL)\n"
"opcode_CB_1E:\n"
"	readmem8HL\n"
"	opRRb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@RR A\n"
"opcode_CB_1F:\n"
"	opRRA\n"
"\n"
";@SLA B\n"
"opcode_CB_20:\n"
"	opSLAH z80bc\n"
";@SLA C\n"
"opcode_CB_21:\n"
"	opSLAL z80bc\n"
";@SLA D\n"
"opcode_CB_22:\n"
"	opSLAH z80de\n"
";@SLA E\n"
"opcode_CB_23:\n"
"	opSLAL z80de\n"
";@SLA H\n"
"opcode_CB_24:\n"
"	opSLAH z80hl\n"
";@SLA L\n"
"opcode_CB_25:\n"
"	opSLAL z80hl\n"
";@SLA (HL)\n"
"opcode_CB_26:\n"
"	readmem8HL\n"
"	opSLAb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@SLA A\n"
"opcode_CB_27:\n"
"	opSLAA\n"
"\n"
";@SRA B\n"
"opcode_CB_28:\n"
"	opSRAH z80bc\n"
";@SRA C\n"
"opcode_CB_29:\n"
"	opSRAL z80bc\n"
";@SRA D\n"
"opcode_CB_2A:\n"
"	opSRAH z80de\n"
";@SRA E\n"
"opcode_CB_2B:\n"
"	opSRAL z80de\n"
";@SRA H\n"
"opcode_CB_2C:\n"
"	opSRAH z80hl\n"
";@SRA L\n"
"opcode_CB_2D:\n"
"	opSRAL z80hl\n"
";@SRA (HL)\n"
"opcode_CB_2E:\n"
"	readmem8HL\n"
"	opSRAb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@SRA A\n"
"opcode_CB_2F:\n"
"	opSRAA\n"
"\n"
";@SLL B\n"
"opcode_CB_30:\n"
"	opSLLH z80bc\n"
";@SLL C\n"
"opcode_CB_31:\n"
"	opSLLL z80bc\n"
";@SLL D\n"
"opcode_CB_32:\n"
"	opSLLH z80de\n"
";@SLL E\n"
"opcode_CB_33:\n"
"	opSLLL z80de\n"
";@SLL H\n"
"opcode_CB_34:\n"
"	opSLLH z80hl\n"
";@SLL L\n"
"opcode_CB_35:\n"
"	opSLLL z80hl\n"
";@SLL (HL)\n"
"opcode_CB_36:\n"
"	readmem8HL\n"
"	opSLLb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@SLL A\n"
"opcode_CB_37:\n"
"	opSLLA\n"
"\n"
";@SRL B\n"
"opcode_CB_38:\n"
"	opSRLH z80bc\n"
";@SRL C\n"
"opcode_CB_39:\n"
"	opSRLL z80bc\n"
";@SRL D\n"
"opcode_CB_3A:\n"
"	opSRLH z80de\n"
";@SRL E\n"
"opcode_CB_3B:\n"
"	opSRLL z80de\n"
";@SRL H\n"
"opcode_CB_3C:\n"
"	opSRLH z80hl\n"
";@SRL L\n"
"opcode_CB_3D:\n"
"	opSRLL z80hl\n"
";@SRL (HL)\n"
"opcode_CB_3E:\n"
"	readmem8HL\n"
"	opSRLb\n"
"	writemem8HL\n"
"	fetch 15\n"
";@SRL A\n"
"opcode_CB_3F:\n"
"	opSRLA\n"
"\n"
"\n"
";@BIT 0,B\n"
"opcode_CB_40:\n"
"	opBITH z80bc 0\n"
";@BIT 0,C\n"
"opcode_CB_41:\n"
"	opBITL z80bc 0\n"
";@BIT 0,D\n"
"opcode_CB_42:\n"
"	opBITH z80de 0\n"
";@BIT 0,E\n"
"opcode_CB_43:\n"
"	opBITL z80de 0\n"
";@BIT 0,H\n"
"opcode_CB_44:\n"
"	opBITH z80hl 0\n"
";@BIT 0,L\n"
"opcode_CB_45:\n"
"	opBITL z80hl 0\n"
";@BIT 0,(HL)\n"
"opcode_CB_46:\n"
"	readmem8HL\n"
"	opBITb 0\n"
"	fetch 12\n"
";@BIT 0,A\n"
"opcode_CB_47:\n"
"	opBITH z80a 0\n"
"\n"
";@BIT 1,B\n"
"opcode_CB_48:\n"
"	opBITH z80bc 1\n"
";@BIT 1,C\n"
"opcode_CB_49:\n"
"	opBITL z80bc 1\n"
";@BIT 1,D\n"
"opcode_CB_4A:\n"
"	opBITH z80de 1\n"
";@BIT 1,E\n"
"opcode_CB_4B:\n"
"	opBITL z80de 1\n"
";@BIT 1,H\n"
"opcode_CB_4C:\n"
"	opBITH z80hl 1\n"
";@BIT 1,L\n"
"opcode_CB_4D:\n"
"	opBITL z80hl 1\n"
";@BIT 1,(HL)\n"
"opcode_CB_4E:\n"
"	readmem8HL\n"
"	opBITb 1\n"
"	fetch 12\n"
";@BIT 1,A\n"
"opcode_CB_4F:\n"
"	opBITH z80a 1\n"
"\n"
";@BIT 2,B\n"
"opcode_CB_50:\n"
"	opBITH z80bc 2\n"
";@BIT 2,C\n"
"opcode_CB_51:\n"
"	opBITL z80bc 2\n"
";@BIT 2,D\n"
"opcode_CB_52:\n"
"	opBITH z80de 2\n"
";@BIT 2,E\n"
"opcode_CB_53:\n"
"	opBITL z80de 2\n"
";@BIT 2,H\n"
"opcode_CB_54:\n"
"	opBITH z80hl 2\n"
";@BIT 2,L\n"
"opcode_CB_55:\n"
"	opBITL z80hl 2\n"
";@BIT 2,(HL)\n"
"opcode_CB_56:\n"
"	readmem8HL\n"
"	opBITb 2\n"
"	fetch 12\n"
";@BIT 2,A\n"
"opcode_CB_57:\n"
"	opBITH z80a 2\n"
"\n"
";@BIT 3,B\n"
"opcode_CB_58:\n"
"	opBITH z80bc 3\n"
";@BIT 3,C\n"
"opcode_CB_59:\n"
"	opBITL z80bc 3\n"
";@BIT 3,D\n"
"opcode_CB_5A:\n"
"	opBITH z80de 3\n"
";@BIT 3,E\n"
"opcode_CB_5B:\n"
"	opBITL z80de 3\n"
";@BIT 3,H\n"
"opcode_CB_5C:\n"
"	opBITH z80hl 3\n"
";@BIT 3,L\n"
"opcode_CB_5D:\n"
"	opBITL z80hl 3\n"
";@BIT 3,(HL)\n"
"opcode_CB_5E:\n"
"	readmem8HL\n"
"	opBITb 3\n"
"	fetch 12\n"
";@BIT 3,A\n"
"opcode_CB_5F:\n"
"	opBITH z80a 3\n"
"\n"
";@BIT 4,B\n"
"opcode_CB_60:\n"
"	opBITH z80bc 4\n"
";@BIT 4,C\n"
"opcode_CB_61:\n"
"	opBITL z80bc 4\n"
";@BIT 4,D\n"
"opcode_CB_62:\n"
"	opBITH z80de 4\n"
";@BIT 4,E\n"
"opcode_CB_63:\n"
"	opBITL z80de 4\n"
";@BIT 4,H\n"
"opcode_CB_64:\n"
"	opBITH z80hl 4\n"
";@BIT 4,L\n"
"opcode_CB_65:\n"
"	opBITL z80hl 4\n"
";@BIT 4,(HL)\n"
"opcode_CB_66:\n"
"	readmem8HL\n"
"	opBITb 4\n"
"	fetch 12\n"
";@BIT 4,A\n"
"opcode_CB_67:\n"
"	opBITH z80a 4\n"
"\n"
";@BIT 5,B\n"
"opcode_CB_68:\n"
"	opBITH z80bc 5\n"
";@BIT 5,C\n"
"opcode_CB_69:\n"
"	opBITL z80bc 5\n"
";@BIT 5,D\n"
"opcode_CB_6A:\n"
"	opBITH z80de 5\n"
";@BIT 5,E\n"
"opcode_CB_6B:\n"
"	opBITL z80de 5\n"
";@BIT 5,H\n"
"opcode_CB_6C:\n"
"	opBITH z80hl 5\n"
";@BIT 5,L\n"
"opcode_CB_6D:\n"
"	opBITL z80hl 5\n"
";@BIT 5,(HL)\n"
"opcode_CB_6E:\n"
"	readmem8HL\n"
"	opBITb 5\n"
"	fetch 12\n"
";@BIT 5,A\n"
"opcode_CB_6F:\n"
"	opBITH z80a 5\n"
"\n"
";@BIT 6,B\n"
"opcode_CB_70:\n"
"	opBITH z80bc 6\n"
";@BIT 6,C\n"
"opcode_CB_71:\n"
"	opBITL z80bc 6\n"
";@BIT 6,D\n"
"opcode_CB_72:\n"
"	opBITH z80de 6\n"
";@BIT 6,E\n"
"opcode_CB_73:\n"
"	opBITL z80de 6\n"
";@BIT 6,H\n"
"opcode_CB_74:\n"
"	opBITH z80hl 6\n"
";@BIT 6,L\n"
"opcode_CB_75:\n"
"	opBITL z80hl 6\n"
";@BIT 6,(HL)\n"
"opcode_CB_76:\n"
"	readmem8HL\n"
"	opBITb 6\n"
"	fetch 12\n"
";@BIT 6,A\n"
"opcode_CB_77:\n"
"	opBITH z80a 6\n"
"\n"
";@BIT 7,B\n"
"opcode_CB_78:\n"
"	opBIT7H z80bc\n"
";@BIT 7,C\n"
"opcode_CB_79:\n"
"	opBIT7L z80bc\n"
";@BIT 7,D\n"
"opcode_CB_7A:\n"
"	opBIT7H z80de\n"
";@BIT 7,E\n"
"opcode_CB_7B:\n"
"	opBIT7L z80de\n"
";@BIT 7,H\n"
"opcode_CB_7C:\n"
"	opBIT7H z80hl\n"
";@BIT 7,L\n"
"opcode_CB_7D:\n"
"	opBIT7L z80hl\n"
";@BIT 7,(HL)\n"
"opcode_CB_7E:\n"
"	readmem8HL\n"
"	opBIT7b\n"
"	fetch 12\n"
";@BIT 7,A\n"
"opcode_CB_7F:\n"
"	opBIT7H z80a\n"
"\n"
";@RES 0,B\n"
"opcode_CB_80:\n"
"	bic z80bc,z80bc,#1<<24\n"
"	fetch 8\n"
";@RES 0,C\n"
"opcode_CB_81:\n"
"	bic z80bc,z80bc,#1<<16\n"
"	fetch 8\n"
";@RES 0,D\n"
"opcode_CB_82:\n"
"	bic z80de,z80de,#1<<24\n"
"	fetch 8\n"
";@RES 0,E\n"
"opcode_CB_83:\n"
"	bic z80de,z80de,#1<<16\n"
"	fetch 8\n"
";@RES 0,H\n"
"opcode_CB_84:\n"
"	bic z80hl,z80hl,#1<<24\n"
"	fetch 8\n"
";@RES 0,L\n"
"opcode_CB_85:\n"
"	bic z80hl,z80hl,#1<<16\n"
"	fetch 8\n"
";@RES 0,(HL)\n"
"opcode_CB_86:\n"
"	opRESmemHL 0\n"
";@RES 0,A\n"
"opcode_CB_87:\n"
"	bic z80a,z80a,#1<<24\n"
"	fetch 8\n"
"\n"
";@RES 1,B\n"
"opcode_CB_88:\n"
"	bic z80bc,z80bc,#1<<25\n"
"	fetch 8\n"
";@RES 1,C\n"
"opcode_CB_89:\n"
"	bic z80bc,z80bc,#1<<17\n"
"	fetch 8\n"
";@RES 1,D\n"
"opcode_CB_8A:\n"
"	bic z80de,z80de,#1<<25\n"
"	fetch 8\n"
";@RES 1,E\n"
"opcode_CB_8B:\n"
"	bic z80de,z80de,#1<<17\n"
"	fetch 8\n"
";@RES 1,H\n"
"opcode_CB_8C:\n"
"	bic z80hl,z80hl,#1<<25\n"
"	fetch 8\n"
";@RES 1,L\n"
"opcode_CB_8D:\n"
"	bic z80hl,z80hl,#1<<17\n"
"	fetch 8\n"
";@RES 1,(HL)\n"
"opcode_CB_8E:\n"
"	opRESmemHL 1\n"
";@RES 1,A\n"
"opcode_CB_8F:\n"
"	bic z80a,z80a,#1<<25\n"
"	fetch 8\n"
"\n"
";@RES 2,B\n"
"opcode_CB_90:\n"
"	bic z80bc,z80bc,#1<<26\n"
"	fetch 8\n"
";@RES 2,C\n"
"opcode_CB_91:\n"
"	bic z80bc,z80bc,#1<<18\n"
"	fetch 8\n"
";@RES 2,D\n"
"opcode_CB_92:\n"
"	bic z80de,z80de,#1<<26\n"
"	fetch 8\n"
";@RES 2,E\n"
"opcode_CB_93:\n"
"	bic z80de,z80de,#1<<18\n"
"	fetch 8\n"
";@RES 2,H\n"
"opcode_CB_94:\n"
"	bic z80hl,z80hl,#1<<26\n"
"	fetch 8\n"
";@RES 2,L\n"
"opcode_CB_95:\n"
"	bic z80hl,z80hl,#1<<18\n"
"	fetch 8\n"
";@RES 2,(HL)\n"
"opcode_CB_96:\n"
"	opRESmemHL 2\n"
";@RES 2,A\n"
"opcode_CB_97:\n"
"	bic z80a,z80a,#1<<26\n"
"	fetch 8\n"
"\n"
";@RES 3,B\n"
"opcode_CB_98:\n"
"	bic z80bc,z80bc,#1<<27\n"
"	fetch 8\n"
";@RES 3,C\n"
"opcode_CB_99:\n"
"	bic z80bc,z80bc,#1<<19\n"
"	fetch 8\n"
";@RES 3,D\n"
"opcode_CB_9A:\n"
"	bic z80de,z80de,#1<<27\n"
"	fetch 8\n"
";@RES 3,E\n"
"opcode_CB_9B:\n"
"	bic z80de,z80de,#1<<19\n"
"	fetch 8\n"
";@RES 3,H\n"
"opcode_CB_9C:\n"
"	bic z80hl,z80hl,#1<<27\n"
"	fetch 8\n"
";@RES 3,L\n"
"opcode_CB_9D:\n"
"	bic z80hl,z80hl,#1<<19\n"
"	fetch 8\n"
";@RES 3,(HL)\n"
"opcode_CB_9E:\n"
"	opRESmemHL 3\n"
";@RES 3,A\n"
"opcode_CB_9F:\n"
"	bic z80a,z80a,#1<<27\n"
"	fetch 8\n"
"\n"
";@RES 4,B\n"
"opcode_CB_A0:\n"
"	bic z80bc,z80bc,#1<<28\n"
"	fetch 8\n"
";@RES 4,C\n"
"opcode_CB_A1:\n"
"	bic z80bc,z80bc,#1<<20\n"
"	fetch 8\n"
";@RES 4,D\n"
"opcode_CB_A2:\n"
"	bic z80de,z80de,#1<<28\n"
"	fetch 8\n"
";@RES 4,E\n"
"opcode_CB_A3:\n"
"	bic z80de,z80de,#1<<20\n"
"	fetch 8\n"
";@RES 4,H\n"
"opcode_CB_A4:\n"
"	bic z80hl,z80hl,#1<<28\n"
"	fetch 8\n"
";@RES 4,L\n"
"opcode_CB_A5:\n"
"	bic z80hl,z80hl,#1<<20\n"
"	fetch 8\n"
";@RES 4,(HL)\n"
"opcode_CB_A6:\n"
"	opRESmemHL 4\n"
";@RES 4,A\n"
"opcode_CB_A7:\n"
"	bic z80a,z80a,#1<<28\n"
"	fetch 8\n"
"\n"
";@RES 5,B\n"
"opcode_CB_A8:\n"
"	bic z80bc,z80bc,#1<<29\n"
"	fetch 8\n"
";@RES 5,C\n"
"opcode_CB_A9:\n"
"	bic z80bc,z80bc,#1<<21\n"
"	fetch 8\n"
";@RES 5,D\n"
"opcode_CB_AA:\n"
"	bic z80de,z80de,#1<<29\n"
"	fetch 8\n"
";@RES 5,E\n"
"opcode_CB_AB:\n"
"	bic z80de,z80de,#1<<21\n"
"	fetch 8\n"
";@RES 5,H\n"
"opcode_CB_AC:\n"
"	bic z80hl,z80hl,#1<<29\n"
"	fetch 8\n"
";@RES 5,L\n"
"opcode_CB_AD:\n"
"	bic z80hl,z80hl,#1<<21\n"
"	fetch 8\n"
";@RES 5,(HL)\n"
"opcode_CB_AE:\n"
"	opRESmemHL 5\n"
";@RES 5,A\n"
"opcode_CB_AF:\n"
"	bic z80a,z80a,#1<<29\n"
"	fetch 8\n"
"\n"
";@RES 6,B\n"
"opcode_CB_B0:\n"
"	bic z80bc,z80bc,#1<<30\n"
"	fetch 8\n"
";@RES 6,C\n"
"opcode_CB_B1:\n"
"	bic z80bc,z80bc,#1<<22\n"
"	fetch 8\n"
";@RES 6,D\n"
"opcode_CB_B2:\n"
"	bic z80de,z80de,#1<<30\n"
"	fetch 8\n"
";@RES 6,E\n"
"opcode_CB_B3:\n"
"	bic z80de,z80de,#1<<22\n"
"	fetch 8\n"
";@RES 6,H\n"
"opcode_CB_B4:\n"
"	bic z80hl,z80hl,#1<<30\n"
"	fetch 8\n"
";@RES 6,L\n"
"opcode_CB_B5:\n"
"	bic z80hl,z80hl,#1<<22\n"
"	fetch 8\n"
";@RES 6,(HL)\n"
"opcode_CB_B6:\n"
"	opRESmemHL 6\n"
";@RES 6,A\n"
"opcode_CB_B7:\n"
"	bic z80a,z80a,#1<<30\n"
"	fetch 8\n"
"\n"
";@RES 7,B\n"
"opcode_CB_B8:\n"
"	bic z80bc,z80bc,#1<<31\n"
"	fetch 8\n"
";@RES 7,C\n"
"opcode_CB_B9:\n"
"	bic z80bc,z80bc,#1<<23\n"
"	fetch 8\n"
";@RES 7,D\n"
"opcode_CB_BA:\n"
"	bic z80de,z80de,#1<<31\n"
"	fetch 8\n"
";@RES 7,E\n"
"opcode_CB_BB:\n"
"	bic z80de,z80de,#1<<23\n"
"	fetch 8\n"
";@RES 7,H\n"
"opcode_CB_BC:\n"
"	bic z80hl,z80hl,#1<<31\n"
"	fetch 8\n"
";@RES 7,L\n"
"opcode_CB_BD:\n"
"	bic z80hl,z80hl,#1<<23\n"
"	fetch 8\n"
";@RES 7,(HL)\n"
"opcode_CB_BE:\n"
"	opRESmemHL 7\n"
";@RES 7,A\n"
"opcode_CB_BF:\n"
"	bic z80a,z80a,#1<<31\n"
"	fetch 8\n"
"\n"
";@SET 0,B\n"
"opcode_CB_C0:\n"
"	orr z80bc,z80bc,#1<<24\n"
"	fetch 8\n"
";@SET 0,C\n"
"opcode_CB_C1:\n"
"	orr z80bc,z80bc,#1<<16\n"
"	fetch 8\n"
";@SET 0,D\n"
"opcode_CB_C2:\n"
"	orr z80de,z80de,#1<<24\n"
"	fetch 8\n"
";@SET 0,E\n"
"opcode_CB_C3:\n"
"	orr z80de,z80de,#1<<16\n"
"	fetch 8\n"
";@SET 0,H\n"
"opcode_CB_C4:\n"
"	orr z80hl,z80hl,#1<<24\n"
"	fetch 8\n"
";@SET 0,L\n"
"opcode_CB_C5:\n"
"	orr z80hl,z80hl,#1<<16\n"
"	fetch 8\n"
";@SET 0,(HL)\n"
"opcode_CB_C6:\n"
"	opSETmemHL 0\n"
";@SET 0,A\n"
"opcode_CB_C7:\n"
"	orr z80a,z80a,#1<<24\n"
"	fetch 8\n"
"\n"
";@SET 1,B\n"
"opcode_CB_C8:\n"
"	orr z80bc,z80bc,#1<<25\n"
"	fetch 8\n"
";@SET 1,C\n"
"opcode_CB_C9:\n"
"	orr z80bc,z80bc,#1<<17\n"
"	fetch 8\n"
";@SET 1,D\n"
"opcode_CB_CA:\n"
"	orr z80de,z80de,#1<<25\n"
"	fetch 8\n"
";@SET 1,E\n"
"opcode_CB_CB:\n"
"	orr z80de,z80de,#1<<17\n"
"	fetch 8\n"
";@SET 1,H\n"
"opcode_CB_CC:\n"
"	orr z80hl,z80hl,#1<<25\n"
"	fetch 8\n"
";@SET 1,L\n"
"opcode_CB_CD:\n"
"	orr z80hl,z80hl,#1<<17\n"
"	fetch 8\n"
";@SET 1,(HL)\n"
"opcode_CB_CE:\n"
"	opSETmemHL 1\n"
";@SET 1,A\n"
"opcode_CB_CF:\n"
"	orr z80a,z80a,#1<<25\n"
"	fetch 8\n"
"\n"
";@SET 2,B\n"
"opcode_CB_D0:\n"
"	orr z80bc,z80bc,#1<<26\n"
"	fetch 8\n"
";@SET 2,C\n"
"opcode_CB_D1:\n"
"	orr z80bc,z80bc,#1<<18\n"
"	fetch 8\n"
";@SET 2,D\n"
"opcode_CB_D2:\n"
"	orr z80de,z80de,#1<<26\n"
"	fetch 8\n"
";@SET 2,E\n"
"opcode_CB_D3:\n"
"	orr z80de,z80de,#1<<18\n"
"	fetch 8\n"
";@SET 2,H\n"
"opcode_CB_D4:\n"
"	orr z80hl,z80hl,#1<<26\n"
"	fetch 8\n"
";@SET 2,L\n"
"opcode_CB_D5:\n"
"	orr z80hl,z80hl,#1<<18\n"
"	fetch 8\n"
";@SET 2,(HL)\n"
"opcode_CB_D6:\n"
"	opSETmemHL 2\n"
";@SET 2,A\n"
"opcode_CB_D7:\n"
"	orr z80a,z80a,#1<<26\n"
"	fetch 8\n"
"\n"
";@SET 3,B\n"
"opcode_CB_D8:\n"
"	orr z80bc,z80bc,#1<<27\n"
"	fetch 8\n"
";@SET 3,C\n"
"opcode_CB_D9:\n"
"	orr z80bc,z80bc,#1<<19\n"
"	fetch 8\n"
";@SET 3,D\n"
"opcode_CB_DA:\n"
"	orr z80de,z80de,#1<<27\n"
"	fetch 8\n"
";@SET 3,E\n"
"opcode_CB_DB:\n"
"	orr z80de,z80de,#1<<19\n"
"	fetch 8\n"
";@SET 3,H\n"
"opcode_CB_DC:\n"
"	orr z80hl,z80hl,#1<<27\n"
"	fetch 8\n"
";@SET 3,L\n"
"opcode_CB_DD:\n"
"	orr z80hl,z80hl,#1<<19\n"
"	fetch 8\n"
";@SET 3,(HL)\n"
"opcode_CB_DE:\n"
"	opSETmemHL 3\n"
";@SET 3,A\n"
"opcode_CB_DF:\n"
"	orr z80a,z80a,#1<<27\n"
"	fetch 8\n"
"\n"
";@SET 4,B\n"
"opcode_CB_E0:\n"
"	orr z80bc,z80bc,#1<<28\n"
"	fetch 8\n"
";@SET 4,C\n"
"opcode_CB_E1:\n"
"	orr z80bc,z80bc,#1<<20\n"
"	fetch 8\n"
";@SET 4,D\n"
"opcode_CB_E2:\n"
"	orr z80de,z80de,#1<<28\n"
"	fetch 8\n"
";@SET 4,E\n"
"opcode_CB_E3:\n"
"	orr z80de,z80de,#1<<20\n"
"	fetch 8\n"
";@SET 4,H\n"
"opcode_CB_E4:\n"
"	orr z80hl,z80hl,#1<<28\n"
"	fetch 8\n"
";@SET 4,L\n"
"opcode_CB_E5:\n"
"	orr z80hl,z80hl,#1<<20\n"
"	fetch 8\n"
";@SET 4,(HL)\n"
"opcode_CB_E6:\n"
"	opSETmemHL 4\n"
";@SET 4,A\n"
"opcode_CB_E7:\n"
"	orr z80a,z80a,#1<<28\n"
"	fetch 8\n"
"\n"
";@SET 5,B\n"
"opcode_CB_E8:\n"
"	orr z80bc,z80bc,#1<<29\n"
"	fetch 8\n"
";@SET 5,C\n"
"opcode_CB_E9:\n"
"	orr z80bc,z80bc,#1<<21\n"
"	fetch 8\n"
";@SET 5,D\n"
"opcode_CB_EA:\n"
"	orr z80de,z80de,#1<<29\n"
"	fetch 8\n"
";@SET 5,E\n"
"opcode_CB_EB:\n"
"	orr z80de,z80de,#1<<21\n"
"	fetch 8\n"
";@SET 5,H\n"
"opcode_CB_EC:\n"
"	orr z80hl,z80hl,#1<<29\n"
"	fetch 8\n"
";@SET 5,L\n"
"opcode_CB_ED:\n"
"	orr z80hl,z80hl,#1<<21\n"
"	fetch 8\n"
";@SET 5,(HL)\n"
"opcode_CB_EE:\n"
"	opSETmemHL 5\n"
";@SET 5,A\n"
"opcode_CB_EF:\n"
"	orr z80a,z80a,#1<<29\n"
"	fetch 8\n"
"\n"
";@SET 6,B\n"
"opcode_CB_F0:\n"
"	orr z80bc,z80bc,#1<<30\n"
"	fetch 8\n"
";@SET 6,C\n"
"opcode_CB_F1:\n"
"	orr z80bc,z80bc,#1<<22\n"
"	fetch 8\n"
";@SET 6,D\n"
"opcode_CB_F2:\n"
"	orr z80de,z80de,#1<<30\n"
"	fetch 8\n"
";@SET 6,E\n"
"opcode_CB_F3:\n"
"	orr z80de,z80de,#1<<22\n"
"	fetch 8\n"
";@SET 6,H\n"
"opcode_CB_F4:\n"
"	orr z80hl,z80hl,#1<<30\n"
"	fetch 8\n"
";@SET 6,L\n"
"opcode_CB_F5:\n"
"	orr z80hl,z80hl,#1<<22\n"
"	fetch 8\n"
";@SET 6,(HL)\n"
"opcode_CB_F6:\n"
"	opSETmemHL 6\n"
";@SET 6,A\n"
"opcode_CB_F7:\n"
"	orr z80a,z80a,#1<<30\n"
"	fetch 8\n"
"\n"
";@SET 7,B\n"
"opcode_CB_F8:\n"
"	orr z80bc,z80bc,#1<<31\n"
"	fetch 8\n"
";@SET 7,C\n"
"opcode_CB_F9:\n"
"	orr z80bc,z80bc,#1<<23\n"
"	fetch 8\n"
";@SET 7,D\n"
"opcode_CB_FA:\n"
"	orr z80de,z80de,#1<<31\n"
"	fetch 8\n"
";@SET 7,E\n"
"opcode_CB_FB:\n"
"	orr z80de,z80de,#1<<23\n"
"	fetch 8\n"
";@SET 7,H\n"
"opcode_CB_FC:\n"
"	orr z80hl,z80hl,#1<<31\n"
"	fetch 8\n"
";@SET 7,L\n"
"opcode_CB_FD:\n"
"	orr z80hl,z80hl,#1<<23\n"
"	fetch 8\n"
";@SET 7,(HL)\n"
"opcode_CB_FE:\n"
"	opSETmemHL 7\n"
";@SET 7,A\n"
"opcode_CB_FF:\n"
"	orr z80a,z80a,#1<<31\n"
"	fetch 8\n"
"\n"
"\n"
"\n"
";@##################################\n"
";@##################################\n"
";@###  opcodes DD  #########################\n"
";@##################################\n"
";@##################################\n"
";@Because the DD opcodes are not a complete range from 00-FF I have\n"
";@created this sub routine that will catch any undocumented ops\n"
";@halt the emulator and mov the current instruction to r0\n"
";@at a later stage I may change to display a text message on the screen\n"
"opcode_DD_NF:\n"
"	eatcycles 4\n"
"	ldr pc,[opcodes,r0, lsl #2]\n"
";@	mov r2,#0x10*4\n"
";@	cmp r2,z80xx\n"
";@	bne opcode_FD_NF\n"
";@	mov r0,#0xDD00\n"
";@	orr r0,r0,r1\n"
";@	b end_loop\n"
";@opcode_FD_NF:\n"
";@	mov r0,#0xFD00\n"
";@	orr r0,r0,r1\n"
";@	b end_loop\n"
"opcode_DD_NF2:\n"
"	mov r0,#0xDD0000\n"
"	orr r0,r0,#0xCB00\n"
"	orr r0,r0,r1\n"
"	b end_loop\n"
"\n"
";@ADD IX,BC\n"
"opcode_DD_09:\n"
"	ldr r0,[z80xx]\n"
"	opADD16 r0 z80bc\n"
"	str r0,[z80xx]\n"
"	fetch 15\n"
";@ADD IX,DE\n"
"opcode_DD_19:\n"
"	ldr r0,[z80xx]\n"
"	opADD16 r0 z80de\n"
"	str r0,[z80xx]\n"
"	fetch 15\n"
";@LD IX,NN\n"
"opcode_DD_21:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	strh r0,[z80xx,#2]\n"
"	fetch 14\n"
";@LD (NN),IX\n"
"opcode_DD_22:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r1,r0,r1, lsl #8\n"
"	ldrh r0,[z80xx,#2]\n"
"	writemem16\n"
"	fetch 20\n"
";@INC IX\n"
"opcode_DD_23:\n"
"	ldr r0,[z80xx]\n"
"	add r0,r0,#1<<16\n"
"	str r0,[z80xx]\n"
"	fetch 10\n"
";@INC I  (IX)\n"
"opcode_DD_24:\n"
"	ldr r0,[z80xx]\n"
"	opINC8H r0\n"
"	str r0,[z80xx]\n"
"	fetch 8\n"
";@DEC I  (IX)\n"
"opcode_DD_25:\n"
"	ldr r0,[z80xx]\n"
"	opDEC8H r0\n"
"	str r0,[z80xx]\n"
"	fetch 8\n"
";@LD I,N  (IX)\n"
"opcode_DD_26:\n"
"	ldrb r0,[z80pc],#1\n"
"	strb r0,[z80xx,#3]\n"
"	fetch 11\n"
";@ADD IX,IX\n"
"opcode_DD_29:\n"
"	ldr r0,[z80xx]\n"
"	opADD16_2 r0\n"
"	str r0,[z80xx]\n"
"	fetch 15\n"
";@LD IX,(NN)\n"
"opcode_DD_2A:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	stmfd sp!,{z80xx}\n"
"	readmem16\n"
"	ldmfd sp!,{z80xx}\n"
"	strh r0,[z80xx,#2]\n"
"	fetch 20\n"
";@DEC IX\n"
"opcode_DD_2B:\n"
"	ldr r0,[z80xx]\n"
"	sub r0,r0,#1<<16\n"
"	str r0,[z80xx]\n"
"	fetch 10\n"
";@INC X  (IX)\n"
"opcode_DD_2C:\n"
"	ldr r0,[z80xx]\n"
"	opINC8L r0\n"
"	str r0,[z80xx]\n"
"	fetch 8\n"
";@DEC X  (IX)\n"
"opcode_DD_2D:\n"
"	ldr r0,[z80xx]\n"
"	opDEC8L r0\n"
"	str r0,[z80xx]\n"
"	fetch 8\n"
";@LD X,N  (IX)\n"
"opcode_DD_2E:\n"
"	ldrb r0,[z80pc],#1\n"
"	strb r0,[z80xx,#2]\n"
"	fetch 11\n"
";@INC (IX+N)\n"
"opcode_DD_34:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	stmfd sp!,{r0}	;@ save addr\n"
"	readmem8\n"
"	opINC8b\n"
"	ldmfd sp!,{r1}	;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@DEC (IX+N)\n"
"opcode_DD_35:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	stmfd sp!,{r0}	;@ save addr\n"
"	readmem8\n"
"	opDEC8b\n"
"	ldmfd sp!,{r1}	;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@LD (IX+N),N\n"
"opcode_DD_36:\n"
"	ldrsb r2,[z80pc],#1\n"
"	ldrb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r2,r1, lsr #16\n"
"	writemem8\n"
"	fetch 19\n"
";@ADD IX,SP\n"
"opcode_DD_39:\n"
"	ldr r0,[z80xx]\n"
".if FAST_Z80SP\n"
"	ldr r2,[cpucontext,#z80sp_base]\n"
"	sub r2,z80sp,r2\n"
"	opADD16s r0 r2 16\n"
".else\n"
"	opADD16s r0 z80sp 16\n"
".endif\n"
"	str r0,[z80xx]\n"
"	fetch 15\n"
";@LD B,I ( IX )\n"
"opcode_DD_44:\n"
"	ldrb r0,[z80xx,#3]\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,r0, lsl #24\n"
"	fetch 8\n"
";@LD B,X ( IX )\n"
"opcode_DD_45:\n"
"	ldrb r0,[z80xx,#2]\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,r0, lsl #24\n"
"	fetch 8\n"
";@LD B,(IX,N)\n"
"opcode_DD_46:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,r0, lsl #24\n"
"	fetch 19\n"
";@LD C,I  (IX)\n"
"opcode_DD_4C:\n"
"	ldrb r0,[z80xx,#3]\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,r0, lsl #16\n"
"	fetch 8\n"
";@LD C,X  (IX)\n"
"opcode_DD_4D:\n"
"	ldrb r0,[z80xx,#2]\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,r0, lsl #16\n"
"	fetch 8\n"
";@LD C,(IX,N)\n"
"opcode_DD_4E:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,r0, lsl #16\n"
"	fetch 19\n"
"\n"
";@LD D,I  (IX)\n"
"opcode_DD_54:\n"
"	ldrb r0,[z80xx,#3]\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,r0, lsl #24\n"
"	fetch 8\n"
";@LD D,X  (IX)\n"
"opcode_DD_55:\n"
"	ldrb r0,[z80xx,#2]\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,r0, lsl #24\n"
"	fetch 8\n"
";@LD D,(IX,N)\n"
"opcode_DD_56:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,r0, lsl #24\n"
"	fetch 19\n"
";@LD E,I  (IX)\n"
"opcode_DD_5C:\n"
"	ldrb r0,[z80xx,#3]\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,r0, lsl #16\n"
"	fetch 8\n"
";@LD E,X  (IX)\n"
"opcode_DD_5D:\n"
"	ldrb r0,[z80xx,#2]\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,r0, lsl #16\n"
"	fetch 8\n"
";@LD E,(IX,N)\n"
"opcode_DD_5E:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,r0, lsl #16\n"
"	fetch 19\n"
";@LD I,B  (IX)\n"
"opcode_DD_60:\n"
"	mov r0,z80bc,lsr#24\n"
"	strb r0,[z80xx,#3]\n"
"	fetch 8\n"
";@LD I,C  (IX)\n"
"opcode_DD_61:\n"
"	mov r0,z80bc,lsr#16\n"
"	strb r0,[z80xx,#3]\n"
"	fetch 8\n"
";@LD I,D  (IX)\n"
"opcode_DD_62:\n"
"	mov r0,z80de,lsr#24\n"
"	strb r0,[z80xx,#3]\n"
"	fetch 8\n"
";@LD I,E  (IX)\n"
"opcode_DD_63:\n"
"	mov r0,z80de,lsr#16\n"
"	strb r0,[z80xx,#3]\n"
"	fetch 8\n"
";@LD I,I  (IX)\n"
"opcode_DD_64:\n"
"	fetch 8\n"
";@LD I,X  (IX)\n"
"opcode_DD_65:\n"
"	ldrb r0,[z80xx,#2]\n"
"	strb r0,[z80xx,#3]\n"
"	fetch 8\n"
";@LD H,(IX,N)\n"
"opcode_DD_66:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,r0, lsl #24\n"
"	fetch 19\n"
";@LD I,A  (IX)\n"
"opcode_DD_67:\n"
"	mov r0,z80a,lsr#24\n"
"	strb r0,[z80xx,#3]\n"
"	fetch 8\n"
";@LD X,B  (IX)\n"
"opcode_DD_68:\n"
"	mov r0,z80bc,lsr#24\n"
"	strb r0,[z80xx,#2]\n"
"	fetch 8\n"
";@LD X,C  (IX)\n"
"opcode_DD_69:\n"
"	mov r0,z80bc,lsr#16\n"
"	strb r0,[z80xx,#2]\n"
"	fetch 8\n"
";@LD X,D  (IX)\n"
"opcode_DD_6A:\n"
"	mov r0,z80de,lsr#24\n"
"	strb r0,[z80xx,#2]\n"
"	fetch 8\n"
";@LD X,E  (IX)\n"
"opcode_DD_6B:\n"
"	mov r0,z80de,lsr#16\n"
"	strb r0,[z80xx,#2]\n"
"	fetch 8\n"
";@LD X,I  (IX)\n"
"opcode_DD_6C:\n"
"	ldrb r0,[z80xx,#3]\n"
"	strb r0,[z80xx,#2]\n"
"	fetch 8\n"
";@LD X,X  (IX)\n"
"opcode_DD_6D:\n"
"	fetch 8\n"
";@LD L,(IX,N)\n"
"opcode_DD_6E:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	orr z80hl,z80hl,r0, lsl #16\n"
"	fetch 19\n"
";@LD X,A  (IX)\n"
"opcode_DD_6F:\n"
"	mov r0,z80a,lsr#24\n"
"	strb r0,[z80xx,#2]\n"
"	fetch 8\n"
"\n"
";@LD (IX,N),B\n"
"opcode_DD_70:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r0,r1, lsr #16\n"
"	mov r0,z80bc, lsr #24\n"
"	writemem8\n"
"	fetch 19\n"
";@LD (IX,N),C\n"
"opcode_DD_71:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r0,r1, lsr #16\n"
"	mov r0,z80bc, lsr #16\n"
"	and r0,r0,#0xFF\n"
"	writemem8\n"
"	fetch 19\n"
";@LD (IX,N),D\n"
"opcode_DD_72:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r0,r1, lsr #16\n"
"	mov r0,z80de, lsr #24\n"
"	writemem8\n"
"	fetch 19\n"
";@LD (IX,N),E\n"
"opcode_DD_73:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r0,r1, lsr #16\n"
"	mov r0,z80de, lsr #16\n"
"	and r0,r0,#0xFF\n"
"	writemem8\n"
"	fetch 19\n"
";@LD (IX,N),H\n"
"opcode_DD_74:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r0,r1, lsr #16\n"
"	mov r0,z80hl, lsr #24\n"
"	writemem8\n"
"	fetch 19\n"
";@LD (IX,N),L\n"
"opcode_DD_75:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r0,r1, lsr #16\n"
"	mov r0,z80hl, lsr #16\n"
"	and r0,r0,#0xFF\n"
"	writemem8\n"
"	fetch 19\n"
";@LD (IX,N),A\n"
"opcode_DD_77:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r1,r0,r1, lsr #16\n"
"	mov r0,z80a, lsr #24\n"
"	writemem8\n"
"	fetch 19\n"
"\n"
";@LD A,I  from (IX)\n"
"opcode_DD_7C:\n"
"	ldrb r0,[z80xx,#3]\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 8\n"
";@LD A,X  from (IX)\n"
"opcode_DD_7D:\n"
"	ldrb r0,[z80xx,#2]\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 8\n"
";@LD A,(IX,N)\n"
"opcode_DD_7E:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	mov z80a,r0, lsl #24\n"
"	fetch 19\n"
"\n"
";@ADD A,I  ( IX)\n"
"opcode_DD_84:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opADDb\n"
"	fetch 8\n"
";@ADD A,X  ( IX)\n"
"opcode_DD_85:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opADDb\n"
"	fetch 8\n"
";@ADD A,(IX+N)\n"
"opcode_DD_86:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opADDb\n"
"	fetch 19\n"
"\n"
";@ADC A,I  (IX)\n"
"opcode_DD_8C:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opADCb\n"
"	fetch 8\n"
";@ADC A,X  (IX)\n"
"opcode_DD_8D:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opADCb\n"
"	fetch 8\n"
";@ADC A,(IX+N)\n"
"opcode_DD_8E:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opADCb\n"
"	fetch 19\n"
"\n"
";@SUB A,I  (IX)\n"
"opcode_DD_94:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opSUBb\n"
"	fetch 8\n"
";@SUB A,X  (IX)\n"
"opcode_DD_95:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opSUBb\n"
"	fetch 8\n"
";@SUB A,(IX+N)\n"
"opcode_DD_96:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opSUBb\n"
"	fetch 19\n"
"\n"
";@SBC A,I  (IX)\n"
"opcode_DD_9C:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opSBCb\n"
"	fetch 8\n"
";@SBC A,X  (IX)\n"
"opcode_DD_9D:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opSBCb\n"
"	fetch 8\n"
";@SBC A,(IX+N)\n"
"opcode_DD_9E:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opSBCb\n"
"	fetch 19\n"
"\n"
";@AND I  (IX)\n"
"opcode_DD_A4:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opANDb\n"
"	fetch 8\n"
";@AND X  (IX)\n"
"opcode_DD_A5:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opANDb\n"
"	fetch 8\n"
";@AND (IX+N)\n"
"opcode_DD_A6:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opANDb\n"
"	fetch 19\n"
"\n"
";@XOR I  (IX)\n"
"opcode_DD_AC:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opXORb\n"
"	fetch 8\n"
";@XOR X  (IX)\n"
"opcode_DD_AD:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opXORb\n"
"	fetch 8\n"
";@XOR (IX+N)\n"
"opcode_DD_AE:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opXORb\n"
"	fetch 19\n"
"\n"
";@OR I  (IX)\n"
"opcode_DD_B4:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opORb\n"
"	fetch 8\n"
";@OR X  (IX)\n"
"opcode_DD_B5:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opORb\n"
"	fetch 8\n"
";@OR (IX+N)\n"
"opcode_DD_B6:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opORb\n"
"	fetch 19\n"
"\n"
";@CP I  (IX)\n"
"opcode_DD_BC:\n"
"	ldrb r0,[z80xx,#3]\n"
"	opCPb\n"
"	fetch 8\n"
";@CP X  (IX)\n"
"opcode_DD_BD:\n"
"	ldrb r0,[z80xx,#2]\n"
"	opCPb\n"
"	fetch 8\n"
";@CP (IX+N)\n"
"opcode_DD_BE:\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"	readmem8\n"
"	opCPb\n"
"	fetch 19\n"
"\n"
"\n"
"opcodes_DD_CB_LOCAL: .word opcodes_DD_CB\n"
"opcode_DD_CB:\n"
";@Looks up the opcode on the opcodes_DD_CB table and then \n"
";@moves the PC to the location of the subroutine\n"
"	ldrsb r0,[z80pc],#1\n"
"	ldr r1,[z80xx]\n"
"	add r0,r0,r1, lsr #16\n"
"\n"
"	ldrb r1,[z80pc],#1\n"
"	ldr pc,[pc,r1, lsl #2]\n"
"		.word 0x00\n"
"opcodes_DD_CB:\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_06,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_0E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_16,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_1E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_26,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_2E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_36,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_3E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_46,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_4E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_56,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_5E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_66,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_6E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_76,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_7E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_86,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_8E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_96,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_9E,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_A6,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_AE,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_B6,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_BE,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_C6,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_CE,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_D6,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_DE,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_E6,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_EE,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_F6,opcode_DD_NF2\n"
"		.word opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_NF2,opcode_DD_CB_FE,opcode_DD_NF2\n"
"\n"
";@RLC (IX+N) \n"
"opcode_DD_CB_06:\n"
"	stmfd sp!,{r0}		;@ save addr\n"
"	readmem8\n"
"	opRLCb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@RRC (IX+N) \n"
"opcode_DD_CB_0E:\n"
"	stmfd sp!,{r0}		;@ save addr\n"
"	readmem8\n"
"	opRRCb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@RL (IX+N) \n"
"opcode_DD_CB_16:\n"
"	stmfd sp!,{r0}		;@ save addr\n"
"	readmem8\n"
"	opRLb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@RR (IX+N) \n"
"opcode_DD_CB_1E:\n"
"	stmfd sp!,{r0}		;@ save addr \n"
"	readmem8\n"
"	opRRb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
"\n"
";@SLA (IX+N) \n"
"opcode_DD_CB_26:\n"
"	stmfd sp!,{r0}		;@ save addr \n"
"	readmem8\n"
"	opSLAb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@SRA (IX+N) \n"
"opcode_DD_CB_2E:\n"
"	stmfd sp!,{r0}		;@ save addr \n"
"	readmem8\n"
"	opSRAb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@SLL (IX+N) \n"
"opcode_DD_CB_36:\n"
"	stmfd sp!,{r0}		;@ save addr \n"
"	readmem8\n"
"	opSLLb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
";@SRL (IX+N)\n"
"opcode_DD_CB_3E:\n"
"	stmfd sp!,{r0}		;@ save addr \n"
"	readmem8\n"
"	opSRLb\n"
"	ldmfd sp!,{r1}		;@ restore addr into r1\n"
"	writemem8\n"
"	fetch 23\n"
"\n"
";@BIT 0,(IX+N) \n"
"opcode_DD_CB_46:\n"
"	readmem8\n"
"	opBITb 0\n"
"	fetch 20\n"
";@BIT 1,(IX+N) \n"
"opcode_DD_CB_4E:\n"
"	readmem8\n"
"	opBITb 1\n"
"	fetch 20\n"
";@BIT 2,(IX+N) \n"
"opcode_DD_CB_56:\n"
"	readmem8\n"
"	opBITb 2\n"
"	fetch 20\n"
";@BIT 3,(IX+N) \n"
"opcode_DD_CB_5E:\n"
"	readmem8\n"
"	opBITb 3\n"
"	fetch 20\n"
";@BIT 4,(IX+N) \n"
"opcode_DD_CB_66:\n"
"	readmem8\n"
"	opBITb 4\n"
"	fetch 20\n"
";@BIT 5,(IX+N) \n"
"opcode_DD_CB_6E:\n"
"	readmem8\n"
"	opBITb 5\n"
"	fetch 20\n"
";@BIT 6,(IX+N) \n"
"opcode_DD_CB_76:\n"
"	readmem8\n"
"	opBITb 6\n"
"	fetch 20\n"
";@BIT 7,(IX+N) \n"
"opcode_DD_CB_7E:\n"
"	readmem8\n"
"	opBIT7b\n"
"	fetch 20\n"
";@RES 0,(IX+N) \n"
"opcode_DD_CB_86:\n"
"	opRESmem 0\n"
";@RES 1,(IX+N) \n"
"opcode_DD_CB_8E:\n"
"	opRESmem 1\n"
";@RES 2,(IX+N) \n"
"opcode_DD_CB_96:\n"
"	opRESmem 2\n"
";@RES 3,(IX+N) \n"
"opcode_DD_CB_9E:\n"
"	opRESmem 3\n"
";@RES 4,(IX+N) \n"
"opcode_DD_CB_A6:\n"
"	opRESmem 4\n"
";@RES 5,(IX+N) \n"
"opcode_DD_CB_AE:\n"
"	opRESmem 5\n"
";@RES 6,(IX+N) \n"
"opcode_DD_CB_B6:\n"
"	opRESmem 6\n"
";@RES 7,(IX+N) \n"
"opcode_DD_CB_BE:\n"
"	opRESmem 7\n"
"\n"
";@SET 0,(IX+N) \n"
"opcode_DD_CB_C6:\n"
"	opSETmem 0\n"
";@SET 1,(IX+N) \n"
"opcode_DD_CB_CE:\n"
"	opSETmem 1\n"
";@SET 2,(IX+N) \n"
"opcode_DD_CB_D6:\n"
"	opSETmem 2\n"
";@SET 3,(IX+N) \n"
"opcode_DD_CB_DE:\n"
"	opSETmem 3\n"
";@SET 4,(IX+N) \n"
"opcode_DD_CB_E6:\n"
"	opSETmem 4\n"
";@SET 5,(IX+N) \n"
"opcode_DD_CB_EE:\n"
"	opSETmem 5\n"
";@SET 6,(IX+N) \n"
"opcode_DD_CB_F6:\n"
"	opSETmem 6\n"
";@SET 7,(IX+N) \n"
"opcode_DD_CB_FE:\n"
"	opSETmem 7\n"
"\n"
"\n"
"\n"
";@POP IX\n"
"opcode_DD_E1:\n"
".if FAST_Z80SP\n"
"	opPOP\n"
".else\n"
"	mov r0,z80sp\n"
"	stmfd sp!,{z80xx}\n"
"	readmem16\n"
"	ldmfd sp!,{z80xx}\n"
"	add z80sp,z80sp,#2\n"
".endif\n"
"	strh r0,[z80xx,#2]\n"
"	fetch 14\n"
";@EX (SP),IX\n"
"opcode_DD_E3:\n"
".if FAST_Z80SP\n"
"	ldrb r0,[z80sp]\n"
"	ldrb r1,[z80sp,#1]\n"
"	orr r2,r0,r1, lsl #8\n"
"	ldrh r1,[z80xx,#2]\n"
"	mov r0,r1, lsr #8\n"
"	strb r0,[z80sp,#1]\n"
"	strb r1,[z80sp]\n"
"	strh r2,[z80xx,#2]\n"
".else\n"
"	mov r0,z80sp\n"
"	stmfd sp!,{z80xx}\n"
"	readmem16\n"
"	ldmfd sp!,{z80xx}\n"
"	mov r2,r0\n"
"	ldrh r0,[z80xx,#2]\n"
"	strh r2,[z80xx,#2]\n"
"	mov r1,z80sp\n"
"	writemem16\n"
".endif\n"
"	fetch 23\n"
";@PUSH IX\n"
"opcode_DD_E5:\n"
"	ldr r2,[z80xx]\n"
"	opPUSHreg r2\n"
"	fetch 15\n"
";@JP (IX)\n"
"opcode_DD_E9:\n"
"	ldrh r0,[z80xx,#2]\n"
"	rebasepc\n"
"	fetch 8\n"
";@LD SP,IX\n"
"opcode_DD_F9:\n"
".if FAST_Z80SP\n"
"	ldrh r0,[z80xx,#2]\n"
"	rebasesp\n"
"	mov z80sp,r0\n"
".else\n"
"	ldrh z80sp,[z80xx,#2]\n"
".endif\n"
"	fetch 10\n"
"\n"
";@##################################\n"
";@##################################\n"
";@###  opcodes ED  #########################\n"
";@##################################\n"
";@##################################\n"
"\n"
"opcode_ED_NF:\n"
"	fetch 8\n"
";@	ldrb r0,[z80pc],#1\n"
";@	ldr pc,[opcodes,r0, lsl #2]\n"
";@	mov r0,#0xED00\n"
";@	orr r0,r0,r1\n"
";@	b end_loop\n"
"\n"
";@IN B,(C)\n"
"opcode_ED_40:\n"
"	opIN_C\n"
"	and z80bc,z80bc,#0xFF<<16\n"
"	orr z80bc,z80bc,r0, lsl #24\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),B\n"
"opcode_ED_41:\n"
"	mov r1,z80bc, lsr #24\n"
"	opOUT_C\n"
"	fetch 12\n"
"\n"
";@SBC HL,BC\n"
"opcode_ED_42:\n"
"	opSBC16 z80bc\n"
"\n"
";@LD (NN),BC\n"
"opcode_ED_43:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r1,r0,r1, lsl #8\n"
"	mov r0,z80bc, lsr #16\n"
"	writemem16\n"
"	fetch 20\n"
";@NEG\n"
"opcode_ED_44:\n"
"	rsbs z80a,z80a,#0\n"
"	mrs z80f,cpsr\n"
"	mov z80f,z80f,lsr#28					;@S,Z,V&C\n"
"	eor z80f,z80f,#(1<<CFlag)|(1<<NFlag)	;@invert C and set n.\n"
"	tst z80a,#0x0F000000					;@H, correct\n"
"	orrne z80f,z80f,#1<<HFlag\n"
"	fetch 8\n"
" \n"
";@RETN, moved to ED_4D\n"
";@opcode_ED_45:\n"
"\n"
";@IM 0\n"
"opcode_ED_46:\n"
"	strb z80a,[cpucontext,#z80im]\n"
"	fetch 8\n"
";@LD I,A\n"
"opcode_ED_47:\n"
"	str z80a,[cpucontext,#z80i]\n"
"	fetch 9\n"
";@IN C,(C)\n"
"opcode_ED_48:\n"
"	opIN_C\n"
"	and z80bc,z80bc,#0xFF<<24\n"
"	orr z80bc,z80bc,r0, lsl #16\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),C\n"
"opcode_ED_49:\n"
"	mov r0,z80bc, lsr #16\n"
"	and r1,r0,#0xFF\n"
"	opOUT\n"
"	fetch 12\n"
";@ADC HL,BC\n"
"opcode_ED_4A:\n"
"	opADC16 z80bc\n"
";@LD BC,(NN)\n"
"opcode_ED_4B:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	readmem16\n"
"	mov z80bc,r0, lsl #16\n"
"	fetch 20\n"
"\n"
";@RETN\n"
"opcode_ED_45:\n"
";@RETI\n"
"opcode_ED_4D:\n"
"	ldrb r0,[cpucontext,#z80if]\n"
"	tst r0,#Z80_IF2\n"
"	orrne r0,r0,#Z80_IF1\n"
"	biceq r0,r0,#Z80_IF1\n"
"	strb r0,[cpucontext,#z80if]\n"
"    opPOP\n"
"	rebasepc\n"
"	fetch 14\n"
"\n"
";@LD R,A\n"
"opcode_ED_4F:\n"
"	mov r0,z80a,lsr#24\n"
"	strb r0,[cpucontext,#z80r]\n"
"	fetch 9\n"
"\n"
";@IN D,(C)\n"
"opcode_ED_50:\n"
"	opIN_C\n"
"	and z80de,z80de,#0xFF<<16\n"
"	orr z80de,z80de,r0, lsl #24\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),D\n"
"opcode_ED_51:\n"
"	mov r1,z80de, lsr #24\n"
"	opOUT_C\n"
"	fetch 12\n"
";@SBC HL,DE\n"
"opcode_ED_52:\n"
"	opSBC16 z80de\n"
";@LD (NN),DE\n"
"opcode_ED_53:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r1,r0,r1, lsl #8\n"
"	mov r0,z80de, lsr #16\n"
"	writemem16\n"
"	fetch 20\n"
";@IM 1\n"
"opcode_ED_56:\n"
"	mov r0,#1\n"
"	strb r0,[cpucontext,#z80im]\n"
"	fetch 8\n"
";@LD A,I\n"
"opcode_ED_57:\n"
"	ldr z80a,[cpucontext,#z80i]\n"
"	tst z80a,#0xFF000000\n"
"	and z80f,z80f,#(1<<CFlag)\n"
"	orreq z80f,z80f,#(1<<ZFlag)\n"
"	orrmi z80f,z80f,#(1<<SFlag)\n"
"	ldrb r0,[cpucontext,#z80if]\n"
"	tst r0,#Z80_IF2\n"
"	orrne z80f,z80f,#(1<<VFlag)\n"
"	fetch 9\n"
";@IN E,(C)\n"
"opcode_ED_58:\n"
"	opIN_C\n"
"	and z80de,z80de,#0xFF<<24\n"
"	orr z80de,z80de,r0, lsl #16\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),E\n"
"opcode_ED_59:\n"
"	mov r1,z80de, lsr #16\n"
"	and r1,r1,#0xFF\n"
"	opOUT_C\n"
"	fetch 12\n"
";@ADC HL,DE\n"
"opcode_ED_5A:\n"
"	opADC16 z80de\n"
";@LD DE,(NN)\n"
"opcode_ED_5B:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	readmem16\n"
"	mov z80de,r0, lsl #16\n"
"	fetch 20\n"
";@IM 2\n"
"opcode_ED_5E:\n"
"	mov r0,#2\n"
"	strb r0,[cpucontext,#z80im]\n"
"	fetch 8\n"
";@LD A,R\n"
"opcode_ED_5F:\n"
"	ldrb r0,[cpucontext,#z80r]\n"
"	and r0,r0,#0x80\n"
"	rsb r1,z80_icount,#0\n"
"	and r1,r1,#0x7F\n"
"	orr r0,r0,r1\n"
"	movs z80a,r0, lsl #24\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orrmi z80f,z80f,#(1<<SFlag)\n"
"	orreq z80f,z80f,#(1<<ZFlag)\n"
"	ldrb r0,[cpucontext,#z80if]\n"
"	tst r0,#Z80_IF2\n"
"	orrne z80f,z80f,#(1<<VFlag)\n"
"	fetch 9\n"
";@IN H,(C)\n"
"opcode_ED_60:\n"
"	opIN_C\n"
"	and z80hl,z80hl,#0xFF<<16\n"
"	orr z80hl,z80hl,r0, lsl #24\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),H\n"
"opcode_ED_61:\n"
"	mov r1,z80hl, lsr #24\n"
"	opOUT_C\n"
"	fetch 12\n"
";@SBC HL,HL\n"
"opcode_ED_62:\n"
"	opSBC16HL\n"
";@RRD\n"
"opcode_ED_67:\n"
"	readmem8HL\n"
"	mov r1,r0,ror#4\n"
"	orr r0,r1,z80a,lsr#20\n"
"	bic z80a,z80a,#0x0F000000\n"
"	orr z80a,z80a,r1,lsr#4\n"
"	writemem8HL\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,z80a, lsr #24]\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,r0\n"
"	fetch 18\n"
";@IN L,(C)\n"
"opcode_ED_68:\n"
"	opIN_C\n"
"	and z80hl,z80hl,#0xFF<<24\n"
"	orr z80hl,z80hl,r0, lsl #16\n"
"	and z80f,z80f,#1<<CFlag\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),L\n"
"opcode_ED_69:\n"
"	mov r1,z80hl, lsr #16\n"
"	and r1,r1,#0xFF\n"
"	opOUT_C\n"
"	fetch 12\n"
";@ADC HL,HL\n"
"opcode_ED_6A:\n"
"	opADC16HL\n"
";@RLD\n"
"opcode_ED_6F:\n"
"	readmem8HL\n"
"	orr r0,r0,z80a,lsl#4\n"
"	mov r0,r0,ror#28\n"
"	and z80a,z80a,#0xF0000000\n"
"	orr z80a,z80a,r0,lsl#16\n"
"	and z80a,z80a,#0xFF000000\n"
"	writemem8HL\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,z80a, lsr #24]\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,r0\n"
"	fetch 18\n"
";@IN F,(C)\n"
"opcode_ED_70:\n"
"	opIN_C\n"
"	and z80f,z80f,#1<<CFlag\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),0\n"
"opcode_ED_71:\n"
"	mov r1,#0\n"
"	opOUT_C\n"
"	fetch 12\n"
"\n"
";@SBC HL,SP\n"
"opcode_ED_72:\n"
".if FAST_Z80SP\n"
"	ldr r0,[cpucontext,#z80sp_base]\n"
"	sub r0,z80sp,r0\n"
"	mov r0, r0, lsl #16\n"
".else\n"
"	mov r0,z80sp,lsl#16\n"
".endif\n"
"	opSBC16 r0\n"
";@LD (NN),SP\n"
"opcode_ED_73:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r1,r0,r1, lsl #8\n"
".if FAST_Z80SP\n"
"	ldr r0,[cpucontext,#z80sp_base]\n"
"	sub r0,z80sp,r0\n"
".else\n"
"	mov r0,z80sp\n"
".endif\n"
"	writemem16\n"
"	fetch 16\n"
";@IN A,(C)\n"
"opcode_ED_78:\n"
"	opIN_C\n"
"	mov z80a,r0, lsl #24\n"
"	and z80f,z80f,#1<<CFlag\n"
"	sub r1,opcodes,#0x100\n"
"	ldrb r0,[r1,r0]\n"
"	orr z80f,z80f,r0\n"
"	fetch 12\n"
";@OUT (C),A\n"
"opcode_ED_79:\n"
"	mov r1,z80a, lsr #24\n"
"	opOUT_C\n"
"	fetch 12\n"
";@ADC HL,SP\n"
"opcode_ED_7A:\n"
".if FAST_Z80SP\n"
"	ldr r0,[cpucontext,#z80sp_base]\n"
"	sub r0,z80sp,r0\n"
"	mov r0, r0, lsl #16\n"
".else\n"
"	mov r0,z80sp,lsl#16\n"
".endif\n"
"	opADC16 r0\n"
";@LD SP,(NN)\n"
"opcode_ED_7B:\n"
"	ldrb r0,[z80pc],#1\n"
"	ldrb r1,[z80pc],#1\n"
"	orr r0,r0,r1, lsl #8\n"
"	readmem16\n"
".if FAST_Z80SP\n"
"	rebasesp\n"
".endif\n"
"	mov z80sp,r0\n"
"	fetch 20\n"
";@LDI\n"
"opcode_ED_A0:\n"
"	copymem8HL_DE\n"
"	add z80hl,z80hl,#1<<16\n"
"	add z80de,z80de,#1<<16\n"
"	subs z80bc,z80bc,#1<<16\n"
"	bic z80f,z80f,#(1<<VFlag)|(1<<NFlag)|(1<<HFlag)\n"
"	orrne z80f,z80f,#1<<VFlag\n"
"	fetch 16\n"
";@CPI\n"
"opcode_ED_A1:\n"
"	readmem8HL\n"
"	add z80hl,z80hl,#0x00010000\n"
"	mov r1,z80a,lsl#4\n"
"	cmp z80a,r0,lsl#24\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,#1<<NFlag\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	cmp r1,r0,lsl#28\n"
"	orrcc z80f,z80f,#1<<HFlag\n"
"	subs z80bc,z80bc,#0x00010000\n"
"	orrne z80f,z80f,#1<<VFlag\n"
"	fetch 16\n"
";@INI\n"
"opcode_ED_A2:\n"
"	opIN_C\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
";@	mov r1,z80bc,lsl#8\n"
";@	add r1,r1,#0x01000000\n"
";@	adds r1,r1,r0,lsl#24\n"
";@	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if (HL) + ((C+1) & 0xFF) > 0xFF\n"
"	writemem8HL\n"
"	add z80hl,z80hl,#1<<16\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	fetch 16\n"
"\n"
";@OUTI\n"
"opcode_ED_A3:\n"
"	readmem8HL\n"
"	add z80hl,z80hl,#1<<16\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
"	mov r1,z80hl,lsl#8\n"
"	adds r1,r1,r0,lsl#24\n"
"	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if (HL)+L > 0xFF\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	mov r1,r0\n"
"	opOUT_C\n"
"	fetch 16\n"
"\n"
";@LDD\n"
"opcode_ED_A8:\n"
"	copymem8HL_DE\n"
"	sub z80hl,z80hl,#1<<16\n"
"	sub z80de,z80de,#1<<16\n"
"	subs z80bc,z80bc,#1<<16\n"
"	bic z80f,z80f,#(1<<VFlag)|(1<<NFlag)|(1<<HFlag)\n"
"	orrne z80f,z80f,#1<<VFlag\n"
"	fetch 16\n"
"\n"
";@CPD\n"
"opcode_ED_A9:\n"
"	readmem8HL\n"
"	sub z80hl,z80hl,#1<<16\n"
"	mov r1,z80a,lsl#4\n"
"	cmp z80a,r0,lsl#24\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,#1<<NFlag\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	cmp r1,r0,lsl#28\n"
"	orrcc z80f,z80f,#1<<HFlag\n"
"	subs z80bc,z80bc,#0x00010000\n"
"	orrne z80f,z80f,#1<<VFlag\n"
"	fetch 16\n"
"\n"
";@IND\n"
"opcode_ED_AA:\n"
"	opIN_C\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
";@	mov r1,z80bc,lsl#8\n"
";@	sub r1,r1,#0x01000000\n"
";@	adds r1,r1,r0,lsl#24\n"
";@	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if (HL) + ((C-1) & 0xFF) > 0xFF\n"
"	writemem8HL\n"
"	sub z80hl,z80hl,#1<<16\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	fetch 16\n"
"\n"
";@OUTD\n"
"opcode_ED_AB:\n"
"	readmem8HL\n"
"	sub z80hl,z80hl,#1<<16\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
"	mov r1,z80hl,lsl#8\n"
"	adds r1,r1,r0,lsl#24\n"
"	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if r0+HL > 0xFF\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	mov r1,r0\n"
"	opOUT_C\n"
"	fetch 16\n"
";@LDIR\n"
"opcode_ED_B0:\n"
"	copymem8HL_DE\n"
"	add z80hl,z80hl,#1<<16\n"
"	add z80de,z80de,#1<<16\n"
"	subs z80bc,z80bc,#1<<16\n"
"	bic z80f,z80f,#(1<<VFlag)|(1<<NFlag)|(1<<HFlag)\n"
"	orrne z80f,z80f,#1<<VFlag\n"
"	subne z80pc,z80pc,#2\n"
"	subne z80_icount,z80_icount,#5\n"
"	fetch 16\n"
"\n"
";@CPIR\n"
"opcode_ED_B1:\n"
"	readmem8HL\n"
"	add z80hl,z80hl,#1<<16    \n"
"	mov r1,z80a,lsl#4\n"
"	cmp z80a,r0,lsl#24\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,#1<<NFlag\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	cmp r1,r0,lsl#28\n"
"	orrcc z80f,z80f,#1<<HFlag\n"
"	subs z80bc,z80bc,#1<<16\n"
"	bne opcode_ED_B1_decpc\n"
"	fetch 16\n"
"opcode_ED_B1_decpc:\n"
"	orr z80f,z80f,#1<<VFlag\n"
"	tst z80f,#1<<ZFlag\n"
"	subeq z80pc,z80pc,#2\n"
"	subeq z80_icount,z80_icount,#5\n"
"	fetch 16\n"
";@INIR\n"
"opcode_ED_B2:\n"
"	opIN_C\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
";@	mov r1,z80bc,lsl#8\n"
";@	add r1,r1,#0x01000000\n"
";@	adds r1,r1,r0,lsl#24\n"
";@	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if (HL) + ((C+1) & 0xFF) > 0xFF\n"
"	writemem8HL\n"
"	add z80hl,z80hl,#1<<16\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	subne z80pc,z80pc,#2\n"
"	subne z80_icount,z80_icount,#5\n"
"	fetch 16\n"
";@OTIR\n"
"opcode_ED_B3:\n"
"	readmem8HL\n"
"	add z80hl,z80hl,#1<<16\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
"	mov r1,z80hl,lsl#8\n"
"	adds r1,r1,r0,lsl#24\n"
"	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if r0+HL > 0xFF\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	subne z80pc,z80pc,#2\n"
"	subne z80_icount,z80_icount,#5\n"
"	mov r1,r0\n"
"	opOUT_C\n"
"	fetch 16\n"
";@LDDR\n"
"opcode_ED_B8:\n"
"	copymem8HL_DE\n"
"	sub z80hl,z80hl,#1<<16\n"
"	sub z80de,z80de,#1<<16\n"
"	subs z80bc,z80bc,#1<<16\n"
"	bic z80f,z80f,#(1<<VFlag)|(1<<NFlag)|(1<<HFlag)\n"
"	orrne z80f,z80f,#1<<VFlag\n"
"	subne z80pc,z80pc,#2\n"
"	subne z80_icount,z80_icount,#5\n"
"	fetch 16\n"
"\n"
";@CPDR\n"
"opcode_ED_B9:\n"
"	readmem8HL\n"
"	sub z80hl,z80hl,#1<<16\n"
"	mov r1,z80a,lsl#4\n"
"	cmp z80a,r0,lsl#24\n"
"	and z80f,z80f,#1<<CFlag\n"
"	orr z80f,z80f,#1<<NFlag\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	cmp r1,r0,lsl#28\n"
"	orrcc z80f,z80f,#1<<HFlag\n"
"	subs z80bc,z80bc,#1<<16\n"
"	bne opcode_ED_B9_decpc\n"
"	fetch 16\n"
"opcode_ED_B9_decpc:\n"
"	orr z80f,z80f,#1<<VFlag\n"
"	tst z80f,#1<<ZFlag\n"
"	subeq z80pc,z80pc,#2\n"
"	subeq z80_icount,z80_icount,#5\n"
"	fetch 16\n"
";@INDR\n"
"opcode_ED_BA:\n"
"	opIN_C\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
";@	mov r1,z80bc,lsl#8\n"
";@	sub r1,r1,#0x01000000\n"
";@	adds r1,r1,r0,lsl#24\n"
";@	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if (HL) + ((C-1) & 0xFF) > 0xFF\n"
"	writemem8HL\n"
"	sub z80hl,z80hl,#1<<16\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	subne z80pc,z80pc,#2\n"
"	subne z80_icount,z80_icount,#5\n"
"	fetch 16\n"
";@OTDR\n"
"opcode_ED_BB:\n"
"	readmem8HL\n"
"	sub z80hl,z80hl,#1<<16\n"
"	and z80f,r0,#0x80\n"
"	mov z80f,z80f,lsr#2						;@NFlag set by bit 7\n"
"	mov r1,z80hl,lsl#8\n"
"	adds r1,r1,r0,lsl#24\n"
"	orrcs z80f,z80f,#(1<<CFlag)|(1<<HFlag)	;@ CF & HF set if r0+HL > 0xFF\n"
"	sub z80bc,z80bc,#1<<24\n"
"	tst z80bc,#0xFF<<24\n"
"	orrmi z80f,z80f,#1<<SFlag\n"
"	orreq z80f,z80f,#1<<ZFlag\n"
"	subne z80pc,z80pc,#2\n"
"	subne z80_icount,z80_icount,#5\n"
"	mov r1,r0\n"
"	opOUT_C\n"
"	fetch 16\n"
";@##################################\n"
";@##################################\n"
";@###  opcodes FD  #########################\n"
";@##################################\n"
";@##################################\n"
";@Since DD and FD opcodes are all the same apart from the address\n"
";@register they use.  When a FD intruction the program runs the code\n"
";@from the DD location but the address of the IY reg is passed instead\n"
";@of IX\n"
"\n"
"end_loop:\n"
"     b end_loop\n"
"\n"
"\n"
"\n"
);
